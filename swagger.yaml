---
basePath: "/"
paths:
  /transactions:
    get:
      summary: "Get Transactions"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The Transaction service is used to get a list of transactions for a user.<br>By default, this service returns the last 30 days of transactions from today's date.<br>The search is performed on these attributes: original, consumer, and simple descriptions.<br>Values for categoryId parameter can be fetched from get transaction category list service.<br>The categoryId is used to filter transactions based on system-defined category as well as user-defined category.<br>User-defined categoryIds should be provided in the filter with the prefix \"U\". E.g. U10002 <br>The skip and top parameters are useful for paginating transactions (i.e., to fetch small transaction <br>payloads for performance reasons)<br>Double quotes in the merchant name will be prefixed by backslashes (&#92;) in the response, <br>e.g. Toys \"R\" Us.<br><b>Note</b> <br><a href=\"https://developer.yodlee.com/Yodlee_API/Transaction_Data_Enrichment\">TDE</a> is made available for bank and card accounts and for the US market only.The address field in the response is available only when the TDE key is turned on.<br>"
      operationId: "getTransactions"
      responses:
        200:
          schema:
            $ref: "#/definitions/TransactionResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for baseType<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for category<br>Y800 : Invalid value for toDate<br>Y800 : Invalid value for container<br>Y809 : Invalid date range<br>Y804 : Permitted values of top between 1 - 500<br>Y805 : Multiple containers not supported<br>Y800 : Invalid value for transaction type<br>Y824 : The maximum number of accountIds permitted is 100<br>Y824 : The maximum number of categoryIds permitted is 100<br>Y824 : The maximum number of highLevelCategoryIds permitted is 100<br>Y848 : detailCategoryId cannot be provided as input, as the detailedCategory feature is not enabled<br>Y823 : detailCategoryId is not for applicable containers other than bank and card<br>Y824 : The maximum number of detailCategoryIds permitted is 100<br>Y800 : Invalid value for detailCategoryId"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "Comma separated accountIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "baseType"
        description: "DEBIT/CREDIT"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "categoryId"
        description: "Comma separated categoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "categoryType"
        description: "Transaction Category Type(UNCATEGORIZE, INCOME, TRANSFER, EXPENSE or DEFERRED_COMPENSATION)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "container"
        description: "bank/creditCard/investment/insurance/loan"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "detailCategoryId"
        description: "Comma separated detailCategoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "Transaction from date(YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "highLevelCategoryId"
        description: "Comma separated highLevelCategoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "keyword"
        description: "Transaction search text"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "skip"
        format: "int32"
        description: "skip (Min 0)"
        type: "integer"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "Transaction end date (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "top"
        format: "int32"
        description: "top (Max 500)"
        type: "integer"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "type"
        description: "Transaction Type(SELL,SWEEP, etc.) for bank/creditCard/investment"
        type: "string"
        required: false
      tags:
      - "Transactions"
  /auth/apiKey/{key}:
    delete:
      summary: "Delete API Key"
      deprecated: false
      produces:
      - "*/*"
      description: "This endpoint allows an existing API key to be deleted.<br>You can use one of the following authorization methods to access this API:<br><ol><li>cobsession</li><li>JWT token</li></ol><b>Notes:</b><br>This service is not available in developer sandbox environment and will be made available<br>for testing in your dedicated environment. "
      operationId: "deleteApiKey"
      responses:
        201:
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y807 : Resource not found<br>Y806 : Invalid input"
        401:
          description: "Unauthorized"
        204:
          description: "No Content"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "key"
        description: "key"
        type: "string"
        required: true
      tags:
      - "Auth"
  /cobrand/login:
    post:
      summary: "Cobrand Login"
      deprecated: false
      produces:
      - "application/json"
      description: "The cobrand login service authenticates a cobrand.<br>Cobrand session in the response includes the cobrand session token (cobSession) <br>which is used in subsequent API calls like registering or signing in the user. <br>The idle timeout for a cobrand session is 2 hours and the absolute timeout is 24 hours. This service can be <br>invoked to create a new cobrand session token. <br><b>Note:</b> This endpoint is deprecated for customers using the API Key-based authentication and is applicable only to customers who use the SAML-based authentication.<br>The content type has to be passed as application/json for the body parameter. <br>"
      operationId: "cobrandLogin"
      responses:
        200:
          schema:
            $ref: "#/definitions/CobrandLoginResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for cobrandParam"
        401:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y003 : Account is locked, contact Yodlee customer care<br>Y001 : User name and password required"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/CobrandLoginRequest"
        in: "body"
        name: "cobrandLoginRequest"
        description: "cobrandLoginRequest"
        required: true
      tags:
      - "Cobrand"
      consumes:
      - "application/json"
  /providerAccounts:
    post:
      summary: "Add Account"
      deprecated: false
      produces:
      - "application/json"
      description: "1. The add account service is used to link the user's account with the provider site to the Yodlee system. <br> 2. Providers that need multifactor authentication are also supported by this service.<br> 3. The loginForm or the field array are the objects under the provider object which is <br>obtained from the <a href=\"https://developer.yodlee.com/apidocs/index.php#!/providers/getSiteDetail\">get provider details</a> service response. The credentials provided by the user should be <br>embedded in the loginForm or field array object.<br> <b>Note:</b> If you are testing <a href=\"https://developer.yodlee.com/KnowledgeBase/How_to_use_PKI\">PKI feature</a>, for encrypting the credentials use <a href=\"https://developer.yodlee.com/apidocs/utility/encrypt.html\">encryption utility</a>.<br> 4. Data to be retrieved from the provider site can be passed using datasetName or dataset. If you pass datasetName, all the attributes that are implicitly configured for the dataset will be retrieved. <br> 5. The response includes the Yodlee generated ID (providerAccountId) for the account along with the refresh information.<br> 6. The <a href=\"https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/getRefreshForProviderAccount\">get provider account details</a> service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS<br> 7. If the customer has not subscribed to the event notification for accounts that need multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question & answer, and captcha) is returned in the response.<br> 8. The <a href=\"https://developer.yodlee.com/apidocs/index.php#!/providerAccounts/updateAccount\">update account</a> service should be called to post the MFA information to continue adding the account. <br> 9. Refer to the <a href=\"https://developer.yodlee.com/Yodlee_API/docs/v1_1/API_Flow\">add account</a> flow chart for implementation.<br> 10. This API has <a href=\"https://developer.yodlee.com/Yodlee_API/docs/v1_1/Webhooks\">webhooks</a> support. If the customer has subscribed to the REFRESH event notification and invoked this API for adding an account, relevant notifications will be sent to the customer. <br> 11.The add account service is used to link the user's account with the provider site to the Yodlee system. The generated consent id for the provider site, authorization code received in the PUT consent along with the token received needs to be provided in the request.<br> <b>Note:</b> A dataset may depend on another dataset for retrieval, so the response will include the requested datasets and the dependent datasets.<br> It is necessary to check all the dataset additional statuses returned in the response, as the provider account status is drawn from the dataset additional statuses.<br> The content type has to be passed as application/json for the body parameter<br>"
      operationId: "linkProviderAccount"
      responses:
        200:
          schema:
            $ref: "#/definitions/AddedProviderAccountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y803 : providerId is mandatory<br>Y803 : Invalid value for credentialsParam<br>Y400 : id and value in credentialsParam are mandatory<br>Y901 : Service not supported"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/ProviderAccountRequest"
        in: "body"
        name: "providerAccountRequest"
        description: "loginForm or field entity"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "providerId"
        format: "int64"
        description: "providerId"
        type: "integer"
        required: true
      tags:
      - "ProviderAccounts"
      consumes:
      - "application/json"
    get:
      summary: "Get Provider Accounts"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get provider accounts service is used to return all the provider accounts added by the user. <br>This includes the failed and successfully added provider accounts.<br>"
      operationId: "getAllProviderAccounts"
      responses:
        200:
          schema:
            $ref: "#/definitions/ProviderAccountResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        name: "include"
        description: "include"
        type: "string"
        required: true
      tags:
      - "ProviderAccounts"
    put:
      summary: "Update Account"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "<b>Credential-based Implementation Notes:</b> <br>The update account API is used to:  &bull; Retrieve the latest information for accounts that belong to one providerAccount from the provider site. You must allow at least 15 min between requests. <br> &bull; Update account credentials when the user has changed the authentication information at the provider site. <br> &bull; Post MFA information for the MFA-enabled provider accounts during add and update accounts. <br> &bull; Retrieve the latest information of all the eligible accounts that belong to the user. <br><br><b>Edit Credentials - Notes: </b> <br> &bull; If credentials have to be updated in the Yodlee system, one of the following should be provided: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#9702; LoginForm <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#9702; Field array <br> &bull; LoginForm or the field array, can be obtained from the GET providerAccounts/{providerAccountId}?include=credentials API response. <br> &bull; The credentials provided by the user should be embedded in the loginForm or field array object before you pass to this API. <br><b>Posting MFA Info - Notes: </b> <br>1. You might receive the MFA request details to be presented to the end user in the GET providerAccounts/{providerAccount} API during polling or through REFRESH webhooks notificaiton. <br>2. After receiving the inputs from your user: <br>&nbsp;&nbsp;&nbsp;&nbsp;a.Embed the MFA information provided by the user in the loginForm or field array object.<br>&nbsp;&nbsp;&nbsp;&nbsp;b.Pass one of the following objects as input to this API:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull; LoginForm<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull; Field array<br/><br><b>Points to consider:</b><br>&bull; Data to be retrieved from the provider site can be overridden using datasetName or dataset. If you do pass datasetName, all the datasets that are implicitly configured for <br>the dataset will be retrieved. This action is allowed for edit credentials and single provider account refresh flows only. <br>&bull; Encrypt the credentials and MFA information using the public key.<br>&bull; While testing the PKI feature in sandbox environment, encrypt the password credentials and answers to the MFA questions using the encryption tool.<br/><br><b>--------------------------------------------------------------------------------------------------------------------------------</b><br><b>Open Banking (OB)-based Authentication - Notes:</b><br>The update account API is used to:<br>&bull; Retrieve the latest information for accounts from the provider site.<br>&bull; Update the renewed consent for an existing provider account.<br>&bull; Retrieve the latest information for all the eligible accounts that belong to the user.<br/><br>Yodlee recommendations: <br/>&bull; Create the field entity with the authParameters provided in the get provider details API.<br>&bull; Populate the field entity with the values received from the OB site and pass it to this API.<br/><br><b>--------------------------------------------------------------------------------------------------------------------------------</b><br><b>Update All Eligible Accounts - Notes: </b><br>&bull; This API will trigger a refresh for all the eligible provider accounts(both OB and credential-based accounts).<br>&bull; This API will not refresh closed, inactive, or UAR accounts, or accounts with refreshes in-progress or recently refreshed non-OB accounts.<br>&bull; No parameters should be passed to this API to trigger this action.<br>&bull; Do not call this API often. Our recommendation is to call this only at the time the user logs in to your app because it can hamper other API calls performance. <br>&bull; The response only contains information for accounts that were refreshed. If no accounts are eligible for refresh, no response is returned.<br/><br><b>--------------------------------------------------------------------------------------------------------------------------------</b><br><b>What follows are common to both OB and credential-based authentication implementations:  </b><br>&bull; Check the status of the providerAccount before invoking this API. Do not call this API to trigger any action on a providerAccount when an action is already in progress for the providerAccount. <br>&bull; If the customer has subscribed to the REFRESH event notification and invoked this API, relevant notifications will be sent to the customer.<br>&bull; A dataset may depend on another dataset for retrieval, so the response will include the requested and dependent datasets.<br>&bull; Check all the dataset additional statuses returned in the response because the provider account status is drawn from the dataset additional statuses.<br>&bull; Updating preferences using this API will trigger refreshes.<br>&bull; Pass linkedProviderAccountId in the input to link a userâ€™s credential-based providerAccount with the OB providerAccount or viceversa. Ensure that the both the providerAccounts belong to the same institution. <br>&bull; The content type has to be passed as application/json for the body parameter.<br>"
      operationId: "editCredentialsOrRefreshProviderAccount"
      responses:
        200:
          schema:
            $ref: "#/definitions/UpdatedProviderAccountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y805 : Multiple providerAccountId not supported for updating credentials<br>Y800 : Invalid value for credentialsParam<br>Y400 : id and value in credentialsParam are mandatory<br>Y806 : Invalid input<br>Y823 : Credentials are not applicable for real estate aggregated / manual accounts<br>"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "providerAccountIds"
        description: "comma separated providerAccountIds"
        type: "string"
        required: true
      - schema:
          $ref: "#/definitions/ProviderAccountRequest"
        in: "body"
        name: "providerAccountRequest"
        description: "loginForm or field entity"
        required: false
      tags:
      - "ProviderAccounts"
      consumes:
      - "application/json"
  /derived/transactionSummary:
    get:
      summary: "Get Transaction Summary"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The transaction summary service provides the summary values of transactions for the given date range by category type, high-level categories, or system-defined categories.<br><br>Yodlee has the transaction data stored for a day, month, year and week per category as per the availability of user's data. If the include parameter value is passed as details, then summary details will be returned depending on the interval passed-monthly is the default.<br><br><b>Notes:</b><br>1.Details can be requested for only one system-defined category<br>2.Dates will not be respected for monthly, yearly, and weekly details<br>3.When monthly details are requested, only the fromDate and toDate month will be respected<br>4.When yearly details are requested, only the fromDate and toDate year will be respected<br>5.For weekly data points, details will be provided for every Sunday date available within the fromDate and toDate<br>"
      operationId: "getTransactionSummary"
      responses:
        200:
          schema:
            $ref: "#/definitions/DerivedTransactionSummaryResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y010 : Invalid session<br>Y800 : Invalid value for accountId<br>Y800 : Invalid value for groupBy<br>Y803 : groupBy required<br>Y803 : categoryType required<br>Y800 : Invalid value for categoryId<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for toDate<br>Y800 : Invalid value for fromDate or toDate<br>Y814 : Exchange rate not available for currency<br>Y815 : Cannot apply filter on categoryId if groupBy value is CATEGORY_TYPE<br>Y816 : User-defined category details can only be requested for one system categoryId with groupBy='CATEGORY'<br>Y824 : The maximum number of accountIds permitted is 100<br>Y824 : The maximum number of categoryIds permitted is 100<br>Y824 : The maximum number of categoryTypes permitted is 100"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "comma separated account Ids"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "categoryId"
        description: "comma separated categoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "categoryType"
        description: "INCOME, EXPENSE, TRANSFER, UNCATEGORIZE or DEFERRED_COMPENSATION"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "YYYY-MM-DD format"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "groupBy"
        description: "CATEGORY_TYPE, HIGH_LEVEL_CATEGORY or CATEGORY"
        type: "string"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "details"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "includeUserCategory"
        description: "TRUE/FALSE"
        type: "boolean"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "interval"
        description: "D-daily, W-weekly, M-mothly or Y-yearly"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "YYYY-MM-DD format"
        type: "string"
        required: false
      tags:
      - "Derived"
  /transactions/count:
    get:
      summary: "Get Transactions Count"
      deprecated: false
      produces:
      - "application/json"
      description: "The count service provides the total number of transactions for a specific user depending on the input parameters passed.<br>If you are implementing pagination for transactions, call this endpoint before calling GET /transactions to know the number of transactions that are returned for the input parameters passed.<br>The functionality of the input parameters remains the same as that of the GET /transactions endpoint.<br>"
      operationId: "getTransactionsCount"
      responses:
        200:
          schema:
            $ref: "#/definitions/TransactionCountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for detailCategoryId<br>Y848 : detailCategoryId cannot be provided as input, as the detailedCategory feature is not enabled<br>Y823 : detailCategoryId is not applicable for containers other than bank and card<br>Y824 : The maximum number of detailCategoryIds permitted is 100<br>"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "Comma separated accountIds\t"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "baseType"
        description: "DEBIT/CREDIT"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "categoryId"
        description: "Comma separated categoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "categoryType"
        description: "Transaction Category Type(UNCATEGORIZE, INCOME, TRANSFER, EXPENSE or DEFERRED_COMPENSATION)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "container"
        description: "bank/creditCard/investment/insurance/loan"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "detailCategoryId"
        description: "Comma separated detailCategoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "Transaction from date(YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "highLevelCategoryId"
        description: "Comma separated highLevelCategoryIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "keyword"
        description: "Transaction search text\t"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "Transaction end date (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "type"
        description: "Transaction Type(SELL,SWEEP, etc.)"
        type: "string"
        required: false
      tags:
      - "Transactions"
  /dataExtracts/userData:
    get:
      summary: "Get userData"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get user data service is used to get a user's modified data for a particular period of time for accounts, transactions, holdings, and provider account information.<br>Cobrand session only has to be passed to invoke this service. The time difference between fromDate and toDate fields cannot be more than 60 minutes.<br>"
      operationId: "getDataExtractsUserData"
      responses:
        200:
          schema:
            $ref: "#/definitions/DataExtractsUserDataResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for eventName<br>Y821 : Data update event not supported<br>Y800 : Invalid value for fromDate.fromDate cannot be greater than current time<br>Y800 : Invalid value for toDate.toDate cannot be greater than current time<br>.Y800 : Invalid value for fromDate or toDate.fromDate and toDate cannot be older than 7 days<br>Y800 : Invalid value for fromDate.fromDate can not be greater than toDate<br>Y800 : Invalid value for loginName"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "From DateTime (YYYY-MM-DDThh:mm:ssZ)"
        type: "string"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "loginName"
        description: "Login Name"
        type: "string"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "To DateTime (YYYY-MM-DDThh:mm:ssZ)"
        type: "string"
        required: true
      tags:
      - "DataExtracts"
  /providers:
    get:
      summary: "Get Providers"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get provider service is used to get all the providers that are enabled, <br>search a provider service by name or routing number and get popular sites of a region. <br>The valid values for priority are: <br>   1. cobrand: Returns providers enabled for the cobrand (Default priority)<br>   2. popular: Returns providers popular among users of the customer<br><br>Datasets,attributes and containers that are enabled for the customer alone will be returned in the response<br>Input for the dataset$filter should adhere to the following expression:<br><dataset.name>[<attribute.name>.container[<container> OR <container>] OR <attribute.name>.container[<container>]] <br>OR <dataset.name>[<attribute.name> OR <attribute.name>]<br><b>dataset$filter value examples:</b><br>ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank OR investment OR creditCard]]<br>ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]<br>BASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]<br>BASIC_AGG_DATA<br>BASIC_AGG_DATA OR ACCT_PROFILE<br>BASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]<br>BASIC_AGG_DATA [ ACCOUNT_DETAILS] OR DOCUMENT <br>BASIC_AGG_DATA [ BASIC_ACCOUNT_INFO OR ACCOUNT_DETAILS ] <br><br><b>Note:</b> <br>1. When this service is invoked without any filters, the service performs slowly and takes a few minutes to return data in the response.<br>2. The recommendation is to use this service with filters when used in a flow involving user interactions."
      operationId: "getAllProviders"
      responses:
        200:
          schema:
            $ref: "#/definitions/ProviderResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for priority<br>Y800 : Invalid value for providerName<br>Y801 : Invalid length for a site search. The search string must have atleast 1 character<br>Y800 : Invalid value for skip<br>Y804 : Permitted values of top between 1 - 500<br>Y821 : Dataset not supported<br>Y820 : The additionalDataSet is not supported for Get provider API"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "capability"
        description: "CHALLENGE_DEPOSIT_VERIFICATION"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "dataset$filter"
        description: "Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "name"
        description: "Name in minimum 1 character or routing number."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "priority"
        description: "Search priority"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "skip"
        format: "int32"
        description: "skip (Min 0) - This is not applicable along with 'name' parameter."
        type: "integer"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "top"
        format: "int32"
        description: "top (Max 500) - This is not applicable along with 'name' parameter."
        type: "integer"
        required: false
      tags:
      - "Providers"
  /providers/{providerId}:
    get:
      summary: "Get Provider Details"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get provider detail service is used to get detailed information including the login form for a provider.<br>The response is a provider object that includes information such as name of the provider, <br>provider's base URL, a list of containers supported by the provider, the login form details of the provider, etc.<br>Only enabled datasets, attributes and containers gets returned in the response.<br>"
      operationId: "getProvider"
      responses:
        200:
          schema:
            $ref: "#/definitions/ProviderDetailResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for providerId"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "providerId"
        format: "int64"
        description: "providerId"
        type: "integer"
        required: true
      tags:
      - "Providers"
  /cobrand/config/notifications/events/{eventName}:
    post:
      summary: "Subscribe Event"
      deprecated: false
      produces:
      - "application/json"
      description: "The subscribe events service is used to subscribe to an event for receiving notifications.<br>The callback URL, where the notification will be posted should be provided to this service.<br>Customers can subscribe to REFRESH,DATA_UPDATES and AUTO_REFRESH_UPDATES event.<br><br><b>Notes</b>:<br>This service is not available in developer sandbox/test environment and will be made available for testing in your dedicated environment, once the contract is signed.<br>The content type has to be passed as application/json for the body parameter.<br>"
      operationId: "createSubscriptionEvent"
      responses:
        201:
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y803 : eventName required<br>Y803 : callbackUrl required<br>Y800 : Invalid value for callbackUrl"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "eventName"
        description: "eventName"
        type: "string"
        required: true
        enum:
        - "REFRESH"
        - "DATA_UPDATES"
        - "AUTO_REFRESH_UPDATES"
      - schema:
          $ref: "#/definitions/CreateCobrandNotificationEventRequest"
        in: "body"
        name: "eventRequest"
        description: "eventRequest"
        required: true
      tags:
      - "Cobrand"
      consumes:
      - "application/json"
    delete:
      summary: "Delete Subscription"
      deprecated: false
      produces:
      - "application/json"
      description: "The delete events service is used to unsubscribe from an events service.<br>"
      operationId: "deleteSubscribedEvent"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y803 : eventName required"
        401:
          description: "Unauthorized"
        204:
          description: "OK"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "eventName"
        description: "eventName"
        type: "string"
        required: true
        enum:
        - "REFRESH"
        - "DATA_UPDATES"
        - "AUTO_REFRESH_UPDATES"
      tags:
      - "Cobrand"
    put:
      summary: "Update Subscription"
      deprecated: false
      produces:
      - "application/json"
      description: "The update events service is used to update the callback URL.<br><b>Note:</b> The content type has to be passed as application/json for the body parameter. <br>"
      operationId: "updateSubscribedEvent"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y803 : eventName required<br>Y803 : callbackUrl required<br>Y800 : Invalid value for callbackUrl"
        401:
          description: "Unauthorized"
        204:
          description: "OK"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "eventName"
        description: "eventName"
        type: "string"
        required: true
        enum:
        - "REFRESH"
        - "DATA_UPDATES"
        - "AUTO_REFRESH_UPDATES"
      - schema:
          $ref: "#/definitions/UpdateCobrandNotificationEventRequest"
        in: "body"
        name: "eventRequest"
        description: "eventRequest"
        required: true
      tags:
      - "Cobrand"
      consumes:
      - "application/json"
  /transactions/categories/txnRules:
    get:
      summary: "Get Transaction Categorization Rules"
      deprecated: false
      produces:
      - "application/json"
      description: "The get transaction categorization rule service is used to get all the categorization rules.<br>"
      operationId: "getTransactionCategorizationRules"
      responses:
        200:
          schema:
            $ref: "#/definitions/TransactionCategorizationRuleResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "Transactions"
  /transactions/categories/{categoryId}:
    delete:
      summary: "Delete Category"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The delete transaction categories service is used to delete the given user-defined category.<br>The HTTP response code is 204 (Success without content).<br>"
      operationId: "deleteTransactionCategory"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for categoryId"
        401:
          description: "Unauthorized"
        204:
          description: "Deleted Successfully"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "categoryId"
        format: "int64"
        description: "categoryId"
        type: "integer"
        required: true
      tags:
      - "Transactions"
  /documents:
    get:
      summary: "Get Documents"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get documents service allows customers to search or retrieve metadata related to documents. <br>The API returns the document as per the input parameters passed. If no date range is provided then all downloaded <br>documents will be retrieved. Details of deleted documents or documents associated to closed providerAccount will not be returned <br>Metadata related to documents can be searched or retrieved only if the document related dataset attributes are subscribed. <br>"
      operationId: "getDocuments"
      responses:
        200:
          schema:
            $ref: "#/definitions/DocumentResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountId<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for toDate<br>Y800 : Invalid value for docType"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "Keyword"
        description: "The string used to search a document by its name."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "The unique identifier of an account. Retrieve documents for a given accountId."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "docType"
        description: "Accepts only one of the following valid document types: STMT, TAX, and EBILL."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "The date from which documents have to be retrieved."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "The date to which documents have to be retrieved."
        type: "string"
        required: false
      tags:
      - "Documents"
  /accounts/{accountId}:
    get:
      summary: "Get Account Details"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get account details service provides detailed information of an account.<br>"
      operationId: "getAccount"
      responses:
        200:
          schema:
            $ref: "#/definitions/AccountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for container"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "accountId"
        format: "int64"
        description: "accountId"
        type: "integer"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "container"
        description: "bank/creditCard/investment/insurance/loan/reward/bill/realEstate/otherAssets/otherLiabilities\n* bank: Applicable for Aggregated and Manual<br>\n* creditCard: Applicable for Aggregated and Manual<br>\n* investment: Applicable for Aggregated and Manual<br>\n* insurance: Applicable for Aggregated and Manual<br>\n* loan: Applicable for Aggregated and Manual<br>\n* reward: Applicable for Aggregated and Manual<br>\n* bill: Applicable for Aggregated and Manual<br>\n* realEstate: Applicable for Manual<br>\n* otherAssets: Applicable for Manual<br>\n* otherLiabilities: Applicable for Manual"
        type: "string"
        required: true
        enum:
        - "bank"
        - "creditCard"
        - "investment"
        - "insurance"
        - "loan"
        - "reward"
        - "bill"
        - "realEstate"
        - "otherAssets"
        - "otherLiabilities"
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "profile, holder, fullAccountNumber, paymentProfile, autoRefresh"
        type: "string"
        required: false
      tags:
      - "Accounts"
    delete:
      summary: "Delete Account"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The delete account service allows an account to be deleted.<br>This service does not return a response. The HTTP response code is 204 (Success with no content).<br>"
      operationId: "deleteAccount"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountId"
        401:
          description: "Unauthorized"
        204:
          description: "OK"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "accountId"
        format: "int64"
        description: "accountId"
        type: "integer"
        required: true
      tags:
      - "Accounts"
    put:
      summary: "Update Account"
      deprecated: false
      produces:
      - "application/json"
      description: "The update account service is used to update manual and aggregated accounts.<br>The HTTP response code is 204 (Success without content).<br>Update manual account support is available for bank, card, investment, insurance, loan, bills, otherAssets, otherLiabilities and realEstate containers only.<br><b>Note:</b> A real estate account update is only supported for manual valuation.<br>"
      operationId: "updateAccount"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountId<br>Y800 : Invalid value for updateParam"
        401:
          description: "Unauthorized"
        204:
          description: "OK"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "accountId"
        format: "int64"
        description: "accountId"
        type: "integer"
        required: true
      - schema:
          $ref: "#/definitions/UpdateAccountRequest"
        in: "body"
        name: "accountRequest"
        description: "accountRequest"
        required: true
      tags:
      - "Accounts"
      consumes:
      - "application/json"
  /accounts/historicalBalances:
    get:
      summary: "Get Historical Balances"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The historical balances service is used to retrieve the historical balances for an account or a user.<br>Historical balances are daily (D), weekly (W), and monthly (M). <br>The interval input should be passed as D, W, and M to retrieve the desired historical balances. The default interval is daily (D). <br>When no account id is provided, historical balances of the accounts that are active, to be closed, and closed are provided in the response. <br>If the fromDate and toDate are not passed, the last 90 days of data will be provided. <br>The fromDate and toDate should be passed in the YYYY-MM-DD format. <br>The date field in the response denotes the date for which the balance is requested.<br>includeCF needs to be sent as true if the customer wants to return carried forward balances <br>for a date when the data is not available. <br>asofDate field in the response denotes the date as of which the balance was updated for that account.<br>When there is no balance available for a requested date and if includeCF is sent as true, the previous <br>date for which the balance is available is provided in the response. When there is no previous <br>balance available, no data will be sent. <br>"
      operationId: "getHistoricalBalances"
      responses:
        200:
          schema:
            $ref: "#/definitions/AccountHistoricalBalancesResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountId<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for toDate<br>Y809 : Invalid date range<br>Y800 : Invalid value for interval<br>Y802 : Future date not allowed"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "accountId"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "from date for balance retrieval (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "includeCF"
        description: "Consider carry forward logic for missing balances"
        type: "boolean"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "interval"
        description: "D-daily, W-weekly or M-monthly"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "skip"
        format: "int32"
        description: "skip (Min 0)"
        type: "integer"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "toDate for balance retrieval (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "top"
        format: "int32"
        description: "top (Max 500)"
        type: "integer"
        required: false
      tags:
      - "Accounts"
  /providers/count:
    get:
      summary: "Get Providers Count"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.<br>If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.<br>The functionality of the input parameters remains the same as that of the GET /providers endpoint<br>."
      operationId: "getProvidersCount"
      responses:
        200:
          schema:
            $ref: "#/definitions/ProvidersCountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for priority<br>Y800 : Invalid value for providerName<br>Y801 : Invalid length for a site search. The search string must have at least 1 character<br>Y800 : Invalid value for skip<br>Y804 : Permitted values of top between 1 - 500<br>Y821 : Dataset not supported<br>Y820 : The additionalDataSet is not supported for Get provider API"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "capability"
        description: "CHALLENGE_DEPOSIT_VERIFICATION"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "dataset$filter"
        description: "Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "name"
        description: "Name in minimum 1 character or routing number."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "priority"
        description: "Search priority"
        type: "string"
        required: false
      tags:
      - "Providers"
  /derived/networth:
    get:
      summary: "Get Networth Summary"
      deprecated: false
      produces:
      - "application/json"
      description: "The get networth service is used to get the networth for the user.<br>If the include parameter value is passed as details then networth with historical balances is returned. <br>"
      operationId: "getNetworth"
      responses:
        200:
          schema:
            $ref: "#/definitions/DerivedNetworthResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountIds<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for toDate<br>Y809 : Invalid date range<br>Y800 : Invalid value for interval<br>Y802 : Future date not allowed<br>Y814 : Exchange rate not available for currency"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountIds"
        description: "comma separated accountIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "from date for balance retrieval (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "details"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "interval"
        description: "D-daily, W-weekly or M-monthly"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "skip"
        format: "int32"
        description: "skip (Min 0)"
        type: "integer"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "toDate for balance retrieval (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "top"
        format: "int32"
        description: "top (Max 500)"
        type: "integer"
        required: false
      tags:
      - "Derived"
  /user/samlLogin:
    post:
      summary: "Saml Login"
      deprecated: false
      produces:
      - "application/json"
      description: "The SAML login service is used to authenticate system users with a SAML response.<br>A new user will be created with the input provided if that user isn't already in the system.<br>For existing users, the system will make updates based on changes or new information.<br>When authentication is successful, a user session token is returned.<br><b>Note:</b> The content type has to be passed as application/x-www-form-urlencoded. <br>issuer, source and samlResponse should be passed as body parameters.<br>"
      operationId: "samlLogin"
      responses:
        200:
          schema:
            $ref: "#/definitions/UserResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y013 : Invalid value for samlResponse<br>Y013 : Invalid value for issuer<br>Y013 : Invalid value for source<br>"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "formData"
        name: "issuer"
        description: "issuer"
        type: "string"
        required: true
      - in: "formData"
        name: "samlResponse"
        description: "samlResponse"
        type: "string"
        required: true
      - in: "formData"
        name: "source"
        description: "source"
        type: "string"
        required: true
      tags:
      - "User"
      consumes:
      - "application/x-www-form-urlencoded"
  /providerAccounts/profile:
    get:
      summary: "Get User Profile Details"
      deprecated: false
      produces:
      - "application/json"
      description: "The get provider accounts profile service is used to return the user profile details that are associated to the provider account. <br>"
      operationId: "getProviderAccountProfiles"
      responses:
        200:
          schema:
            $ref: "#/definitions/ProviderAccountUserProfileResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "providerAccountId"
        description: "Comma separated providerAccountIds."
        type: "string"
        required: false
      tags:
      - "ProviderAccounts"
  /user/register:
    post:
      summary: "Register User"
      deprecated: false
      produces:
      - "application/json"
      description: "The register user service is used to register a user in Yodlee.<br>The loginName cannot include spaces and must be between 3 and 150 characters.<br>Password must be at least 8 characters long and contain at least one upper case letter,<br>one number and any of these special characters !@#$%^&*() <br>Password should not be same as the loginName and should not contain more than <br>two recurring characters(e.g. aaa123 is an invalid password)<br>The permitted maximum length for password is 50.<br>locale passed must be one of the supported locales for the customer. <br>Currency provided in the input will be respected in the derived services and the amount fields in the response will be provided in the preferred currency.<br>userParam is accepted as a body parameter. <br><b>Note:</b> user.password is no longer supported.Use the code samples for API key based auth only. <br>The content type has to be passed as application/json for the body parameter.<br>"
      operationId: "registerUser"
      responses:
        200:
          schema:
            $ref: "#/definitions/UserResponse"
          description: "Login Successful"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for loginName<br>Y800 : Invalid value for password<br>Y800 : Invalid value for email<br>Y801 : Invalid length for loginName<br>Y801 : Invalid length for password<br>"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/UserRequest"
        in: "body"
        name: "userRequest"
        description: "userRequest"
        required: true
      tags:
      - "User"
      consumes:
      - "application/json"
  /verification:
    post:
      summary: "Initiaite Matching Service and Challenge Deposit"
      deprecated: false
      produces:
      - "application/json"
      description: "The post verification service is used to initiate the matching service (MS) and the challenge deposit account verification (CDV) process to verify account ownership. The MS and CDV process can verify ownership of only bank accounts (i.e., checking and savings). <ul><li>MS verification - The MS verification can be initiated only for an already aggregated account or a providerAccount. The prerequisite for the MS verification process is to request the following ACCT_PROFILE dataset attributes:</li><ul><li>FULL_ACCT_NUMBER</li><li>BANK_TRANSFER_CODE (optional based on the configuration done for the customer)</li><li>HOLDER_NAME</li></ul>In the MS verification process, a string-match of the account holder name with the registered user name is performed instantaneously. Contact the Yodlee CustomerCare team to configure the full name or only the last name match.</li></ul><ul><li>Challenge deposit account verification - Once the CDV process is initiated, Yodlee will post the microtransaction (i.e., credit and debit) in the user's account. The CDV process takes 2 to 3 days to complete as it requires the user to provide the microtransaction details. The CDV process is currently supported only in the United States.</li></ul>"
      operationId: "initiateMatchingOrChallengeDepositeVerification"
      responses:
        200:
          schema:
            $ref: "#/definitions/VerificationResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y901 : Service not supported<br>Y812 : Required field/value - verification.verificationType missing in the verificationParam<br>Y812 : Required field/value - accountNumber missing in the verificationParam<br>Y812 : Required field/value - accountType missing in the verificationParam<br>Y812 : Required field/value - bankTransferCode missing in the verificationParam<br>Y812 : Required field/value - bankTransferCode.id missing in the verificationParam<br>Y812 : Required field/value - bankTransferCode.type missing in the verificationParam<br>Y800 : Invalid value for verification.verificationType<br>Y800 : Invalid value for verificationParam<br>Y800 : Invalid value for bankTransferCode.type<br>Y800 : Invalid value for bankTransferCode.id<br>Y800 : Invalid value for accountType<br>Y800 : Invalid value for accountId<br>Y813 : Account details should be provided<br>Y801 : Invalid length for accountNumber<br>Y835 : Account(s) not eligible for Challenge Deposit verification<br>Y806 : Invalid Input<br>Y840 : Verification has been initiated already<br>Y837 : Account has been verified already"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/VerificationRequest"
        in: "body"
        name: "verificationParam"
        description: "verification information"
        required: true
      tags:
      - "Verification"
      consumes:
      - "application/json"
    get:
      summary: "Get Verification Status"
      deprecated: false
      produces:
      - "application/json"
      description: "The get verification status service is used to retrieve the verification status of all accounts<br>for which the MS or CDV process has been initiated.<br>For the MS process, the account details object returns the aggregated information of the<br>verified accounts. For the CDV process, the account details object returns the user<br>provided account information.<br>"
      operationId: "getVerificationStatus"
      responses:
        200:
          schema:
            $ref: "#/definitions/VerificationStatusResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y901 : Service not supported<br>Y813 : Either of accountId or providerAccountId should be provided<br>Y800 : Invalid value for accountId<br>Y800 : Invalid value for verification.verificationType<br>Y800 : Invalid value for providerAccountId<br>Y835 : Account(s) not eligible for Matching verification<br>Y836 : No verification initiated"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "Comma separated accountId"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "providerAccountId"
        description: "Comma separated providerAccountId"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "verificationType"
        description: "verificationType"
        type: "string"
        required: false
      tags:
      - "Verification"
    put:
      summary: "Verify Challenge Deposit"
      deprecated: false
      produces:
      - "application/json"
      description: "The put verification service is used to complete the CDV process.<br> In the CDV process, the user-provided microtransaction details (i.e., credit and debit) is matched against the microtransactions posted by Yodlee.<br> For a successful verification of the account's ownership both microtransaction details should match.<br>The CDV process is currently supported only in the United States.<br>"
      operationId: "verifyChallengeDeposit"
      responses:
        200:
          schema:
            $ref: "#/definitions/VerificationResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y901 : Service not supported<br>Y812 : Required field/value - verification.verificationType missing in the verificationParam<br>Y812 : Required field/value - amount.amount missing in the verificationParam<br>Y812 : Required field/value - baseType missing in the verificationParam<br>Y812 : Required field/value - currency missing in the verificationParam<br>Y812 : Required field/value - providerAccountId missing in the verificationParam<br>Y812 : Required field/value - accountId missing in the verificationParam<br>Y800 : Invalid value for verificationParam<br>Y800 : Invalid value for verification.verificationType<br>Y800 : Invalid value for baseType<br>Y800 : Invalid value for providerAccountId<br>Y800 : Invalid value for accountId<br>Y813 : Transaction should be provided<br>Y801 : Invalid length for accountNumber<br>Y801 : Invalid length for amount<br>Y835 : Account(s) not eligible for Challenge Deposit verification<br>Y806 : Invalid Input<br>Y840 : Verification has been initiated already<br>Y837 : Account has been verified already<br>Y838 : The currency code provided does not match with the currency of the transaction executed on the target account<br>Y846 : The number of financial transactions made on the target account does not match with the number of transactions entered by the user.<br>Y842 : Number of retries exceeded the maximum Challenge Deposit verification limit<br>Y844 : Financial Instructions were not executed successfully on the target account<br>Y845 : Verification time expired. Please try initiating challenge deposit again"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/UpdateVerificationRequest"
        in: "body"
        name: "verificationParam"
        description: "verification information"
        required: true
      tags:
      - "Verification"
      consumes:
      - "application/json"
  /holdings/securities:
    get:
      summary: "Get Security Details"
      deprecated: false
      produces:
      - "application/json"
      description: "The get security details service is used to get all the security information for the holdings<br>"
      operationId: "getSecurities"
      responses:
        200:
          schema:
            $ref: "#/definitions/HoldingSecuritiesResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for holdingId<br>Y824 : The maximum number of holdingIds permitted is 100"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "holdingId"
        description: "Comma separated holdingId"
        type: "string"
        required: false
      tags:
      - "Holdings"
  /cobrand/config/notifications/events:
    get:
      summary: "Get Subscribed Events"
      deprecated: false
      produces:
      - "application/json"
      description: "The get events service provides the list of events for which consumers subscribed <br>to receive notifications. <br>"
      operationId: "getSubscribedEvents"
      responses:
        200:
          schema:
            $ref: "#/definitions/CobrandNotificationResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "eventName"
        description: "eventName\n* REFRESH: Events that happen during add, edit and update aggregated accounts processes.<br>\n* DATA_UPDATES: Data updates that happen on provider accounts, accounts, transactions and holdings data due to user actions or auto updates. This event is triggered to help the customer perform data extracts from Yodlee system to their system.<br>\n* AUTO_REFRESH_UPDATES: Events that gets triggered once there is a change in the state of cache refresh.<br>"
        type: "string"
        required: false
        enum:
        - "REFRESH"
        - "DATA_UPDATES"
        - "AUTO_REFRESH_UPDATES"
      tags:
      - "Cobrand"
  /holdings:
    get:
      summary: "Get Holdings"
      deprecated: false
      produces:
      - "application/json"
      description: "The get holdings service is used to get the list of holdings of a user.<br>Supported holding types can be employeeStockOption, <br>moneyMarketFund, bond, etc. and is obtained using get holding type list service. <br>Asset classifications for the holdings need to be requested through the \"include\" parameter.<br>Asset classification information for holdings are not available by default, as it is a premium feature.<br>"
      operationId: "getHoldings"
      responses:
        200:
          schema:
            $ref: "#/definitions/HoldingResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountId<br>Y800 : Invalid value for providerAccountId<br>Y800 : Invalid value for include<br>Y800 : Invalid value for classificationType<br>Y800 : Invalid value for classificationValue<br>Y800 : Invalid value for include<br>Y400 : classificationType mismatch<br>Y400 : classificationValue mismatch<br>Y824 : The maximum number of accountIds permitted is 100"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "Comma separated accountId"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "assetClassification.classificationType"
        description: "e.g. Country, Sector, etc."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "classificationValue"
        description: "e.g. US"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "assetClassification"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "providerAccountId"
        description: "providerAccountId"
        type: "string"
        required: false
      tags:
      - "Holdings"
  /auth/apiKey:
    post:
      summary: "Generate API Key"
      deprecated: false
      produces:
      - "*/*"
      description: "This endpoint is used to generate an API key. The RSA public key you provide should be in<br/>2048 bit PKCS#8 encoded format. A public key is a mandatory input for generating the API key.<br/>The public key should be a unique key. The apiKeyId you get in the response is what you should<br/>use to generate the JWT token.<br> You can use one of the following authorization methods to access<br/>this API:<br/><ol><li>cobsession</li><li>JWT token</li></ol>Alternatively, you can use base 64 encoded cobrandLogin and cobrandPassword in the Authorization header (Format: Authorization: Basic <encoded value of cobrandLogin: cobrandPassword>)<br><b>Note:</b><br>This service is not available in developer sandbox environment and will be made available for testing in your dedicated environment. The content type has to be passed as application/json for the body parameter."
      operationId: "generateApiKey"
      responses:
        201:
          schema:
            $ref: "#/definitions/ApiKeyResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for RS512 publicKey<br>Y806 : Invalid input<br>Y824 : The maximum number of apiKey permitted is 5<br>Y811 : publicKey value already exists"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/ApiKeyRequest"
        in: "body"
        name: "apiKeyRequest"
        description: "apiKeyRequest"
        required: true
      tags:
      - "Auth"
      consumes:
      - "application/json"
    get:
      summary: "Get API Keys"
      deprecated: false
      produces:
      - "*/*"
      description: "This endpoint provides the list of API keys that exist for a customer.<br>You can use one of the following authorization methods to access this API:<br><ol><li>cobsession</li><li>JWT token</li></ol><b>Notes:</b><br>This service is not available in developer sandbox environment and will be made available<br>for testing in your dedicated environment. "
      operationId: "getApiKeys"
      responses:
        200:
          schema:
            $ref: "#/definitions/ApiKeyResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "Auth"
  /documents/{documentId}:
    get:
      summary: "Download a Document"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get document details service allows consumers to download a document. The document is provided in base64.<br>Documents can be downloaded only if the document related dataset attributes are subscribed. <br>"
      operationId: "downloadDocument"
      responses:
        200:
          schema:
            $ref: "#/definitions/DocumentDownloadResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for documentID"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "documentId"
        description: "documentId"
        type: "string"
        required: true
      tags:
      - "Documents"
    delete:
      summary: "Delete Document"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The delete document service allows the consumer to delete a document. The deleted <br>document will not be returned in the get documents API. The HTTP response code is 204 (success without content).<br>Documents can be deleted only if the document related dataset attributes are subscribed.<br>"
      operationId: "deleteDocument"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for documentID"
        401:
          description: "Unauthorized"
        204:
          description: "OK"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "documentId"
        description: "documentId"
        type: "string"
        required: true
      tags:
      - "Documents"
  /transactions/categories/rules/{ruleId}:
    post:
      summary: "Run Transaction Categorization Rule"
      deprecated: false
      produces:
      - "application/json"
      description: "The run transaction categorization rule service is used to run a rule on <br>transactions, to categorize the transactions.<br>The HTTP response code is 204 (Success with no content).<br>"
      operationId: "runTransactionCategorizationRule"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for ruleId<br>Y400 : Categorization already in progress"
        401:
          description: "Unauthorized"
        204:
          description: "Run Successfully"
        404:
          description: "Not Found"
      parameters:
      - default: "run"
        in: "query"
        name: "action"
        type: "string"
        required: true
        enum:
        - "run"
      - in: "path"
        name: "ruleId"
        format: "int64"
        description: "Unique id of the categorization rule"
        type: "integer"
        required: true
      tags:
      - "Transactions"
      consumes:
      - "application/json"
    delete:
      summary: "Delete Transaction Categorization Rule"
      deprecated: false
      produces:
      - "application/json"
      description: "The delete transaction categorization rule service is used to delete the given user-defined transaction categorization rule for both system-defined category as well as user-defined category.<br>This will delete all the corresponding rule clauses associated with the rule.<br>The HTTP response code is 204 (Success without content).<br>"
      operationId: "deleteTransactionCategorizationRule"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for ruleId"
        401:
          description: "Unauthorized"
        204:
          description: "Deleted Successfully"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "ruleId"
        format: "int64"
        description: "ruleId"
        type: "integer"
        required: true
      tags:
      - "Transactions"
    put:
      summary: "Update Transaction Categorization Rule"
      deprecated: false
      produces:
      - "application/json"
      description: "The update transaction categorization rule service is used to update a categorization rule for both system-defined category as well as user-defined category.<br>ruleParam JSON input should be as explained in the create transaction categorization rule service.<br>The HTTP response code is 204 (Success without content).<br>"
      operationId: "updateTransactionCategorizationRule"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for ruleId<br>Y806 : Invalid input"
        401:
          description: "Unauthorized"
        204:
          description: "Updated Successfully"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "ruleId"
        format: "int64"
        description: "ruleId"
        type: "integer"
        required: true
      - schema:
          $ref: "#/definitions/TransactionCategorizationRuleRequest"
        in: "body"
        name: "transactionCategoriesRuleRequest"
        description: "transactionCategoriesRuleRequest"
        required: true
      tags:
      - "Transactions"
      consumes:
      - "application/json"
  /user/accessTokens:
    get:
      summary: "Get Access Tokens"
      deprecated: false
      produces:
      - "application/json"
      description: "The Get Access Tokens service is used to retrieve the access tokens for the application id(s) provided.<br>URL in the response can be used to launch the application for which token is requested.<br><b>Note:</b> This endpoint is deprecated for customers using the API Key-based authentication <br>and is applicable only to customers who use the SAML-based authentication.<br>"
      operationId: "getAccessTokens"
      responses:
        200:
          schema:
            $ref: "#/definitions/UserAccessTokensResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        name: "appIds"
        description: "appIds"
        type: "string"
        required: true
      tags:
      - "User"
  /cobrand/logout:
    post:
      summary: "Cobrand Logout"
      deprecated: false
      produces:
      - "application/json"
      description: "The cobrand logout service is used to log out the cobrand.<br>This service does not return a response. The HTTP response code is 204 (Success with no content).<br><b>Note:</b> This endpoint is deprecated for customers using the API Key-based authentication and is applicable only to customers who use the SAML-based authentication.<br>"
      operationId: "cobrandLogout"
      responses:
        401:
          description: "Unauthorized"
        204:
          description: "Logout successful"
        404:
          description: "Not Found"
      tags:
      - "Cobrand"
      consumes:
      - "application/json"
  /providerAccounts/{providerAccountId}/preferences:
    put:
      summary: "Update Preferences"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "This endpoint is used to update preferences like data extracts and auto refreshes without triggering refresh for the providerAccount.<br>Setting isDataExtractsEnabled to false will not trigger data extracts notification and dataExtracts/events will not reflect any data change that is happening for the providerAccount.<br>Modified data will not be provided in the dataExtracts/userData endpoint.<br>Setting isAutoRefreshEnabled to false will not trigger auto refreshes for the provider account.<br>"
      operationId: "updatePreferences"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for preferences<br>Y800 : Invalid value for preferences.isDataExtractsEnabled<br>Y800 : Invalid value for preferences.isAutoRefreshEnabled<br>Y807 : Resource not found<br>Y830 : Data extracts feature has to be enabled to set preferences.isDataExtractsEnabled as true<br>Y830 : Auto refresh feature has to be enabled to set preferences.isAutoRefreshEnabled as true"
        401:
          description: "Unauthorized"
        204:
          description: "OK"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/ProviderAccountPreferencesRequest"
        in: "body"
        name: "preferences"
        description: "preferences"
        required: true
      - in: "path"
        name: "providerAccountId"
        format: "int64"
        description: "providerAccountId"
        type: "integer"
        required: true
      tags:
      - "ProviderAccounts"
      consumes:
      - "application/json"
  /auth/token:
    delete:
      summary: "Delete Token"
      deprecated: false
      produces:
      - "*/*"
      description: "This endpoint revokes the token passed in the Authorization header for API Key based authentication.<br>This service does not return a response. The HTTP response code is 204 (Success with no content).<br>"
      operationId: "deleteToken"
      responses:
        401:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y020 : Invalid token in authorization header<br>Y023 : Token has expired"
        204:
          description: "No Content"
        404:
          description: "Not Found"
      tags:
      - "Auth"
  /cobrand/publicKey:
    get:
      summary: "Get Public Key"
      deprecated: false
      produces:
      - "application/json"
      description: "The get public key service provides the customer the public key that should be used to encrypt the user credentials before sending it to Yodlee.<br>This endpoint is useful only for PKI enabled.<br>"
      operationId: "getPublicKey"
      responses:
        200:
          schema:
            $ref: "#/definitions/CobrandPublicKeyResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "Cobrand"
  /providerAccounts/{providerAccountId}:
    get:
      summary: "Get Provider Account Details"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get provider account details service is used to learn the status of adding accounts and updating accounts.<br>This service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.<br>When include=credentials,questions is passed as input, the service returns the credentials (non-password values) and questions stored in the Yodlee system for that provider account. <br><b>Note:</b> The password and answer fields are not returned in the response.<br>"
      operationId: "getProviderAccount"
      responses:
        200:
          schema:
            $ref: "#/definitions/ProviderAccountDetailResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for providerAccountId<br>Y816 : questions can only be requested for questionAndAnswer Supported Sites"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "include credentials,questions"
        type: "string"
        required: false
      - in: "path"
        name: "providerAccountId"
        format: "int64"
        description: "providerAccountId"
        type: "integer"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "requestId"
        description: "The unique identifier for the request that returns contextual data"
        type: "string"
        required: false
      tags:
      - "ProviderAccounts"
    delete:
      summary: "Delete Provider Account"
      deprecated: false
      produces:
      - "application/json"
      description: "The delete provider account service is used to delete a provider account <br>from the Yodlee system. This service also deletes the accounts that are created in the <br>Yodlee system for that provider account. This service does not return a response. <br>The HTTP response code is 204 (Success with no content).<br>"
      operationId: "deleteProviderAccount"
      responses:
        200:
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for providerAccountId"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "providerAccountId"
        format: "int64"
        description: "providerAccountId"
        type: "integer"
        required: true
      tags:
      - "ProviderAccounts"
  /transactions/categories:
    post:
      summary: "Create Category"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The create transaction categories service is used to create user-defined categories for a system-defined category.<br>The parentCategoryId is the system-defined category id.This can be retrieved using get transaction categories service.<br>The categoryName can accept minimum of 1, maximum of 50 alphanumeric or special characters.<br>The HTTP response code is 201 (Created successfully).<br>"
      operationId: "createTransactionCategory"
      responses:
        201:
          description: "Created Successfully"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for categoryParam<br>Y800 : Invalid value for source<br>Y801 : Invalid length for categoryName. Min 1 and max 50 is required<br>Y803 : parentCategoryId required<br>Y811 : categoryName value already exists"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/TransactionCategoryRequest"
        in: "body"
        name: "transactionCategoryRequest"
        description: "User Transaction Category in JSON format"
        required: true
      tags:
      - "Transactions"
      consumes:
      - "application/json"
    get:
      summary: "Get Transaction Category List"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The categories service returns the list of available transaction categories.<br>High level category is returned in the response only if it is opted by the customer.<br>When invoked by passing the cobrand session, this service returns the supported transaction categories at the cobrand level. <br>When invoked by passing the cobrand session and the user session, this service returns the transaction categories <br>along with user-defined categories.<br>Double quotes in the user-defined category name will be prefixed by backslashes (&#92;) in the response, <br>e.g. Toys \"R\" Us.Source and id are the primary attributes of the category entity."
      operationId: "getTransactionCategories"
      responses:
        200:
          schema:
            $ref: "#/definitions/TransactionCategoryResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "Transactions"
    put:
      summary: "Update Category"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The update transaction categories service is used to update the transaction category name<br>for a high level category, a system-defined category and a user-defined category.<br>The renamed category can be set back to the original name by passing an empty string for categoryName.<br>The categoryName can accept minimum of 1, maximum of 50 alphanumeric or special characters.<br>The HTTP response code is 204 (Success without content).<br>"
      operationId: "updateTransactionCategory"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for categoryParam<br>Y800 : Invalid value for source<br>Y801 : Invalid length for categoryName. Min 1 and max 50 is required<br>Y803 : id required<br>Y811 : categoryName value already exists"
        401:
          description: "Unauthorized"
        204:
          description: "Updated Successfully"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/UpdateCategoryRequest"
        in: "body"
        name: "updateCategoryRequest"
        description: "updateCategoryRequest"
        required: true
      tags:
      - "Transactions"
      consumes:
      - "application/json"
  /user:
    get:
      summary: "Get User Details"
      deprecated: false
      produces:
      - "application/json"
      description: "The get user details service is used to get the user profile information and the application <br>preferences set at the time of user registration.<br>"
      operationId: "getUser"
      responses:
        200:
          schema:
            $ref: "#/definitions/UserDetailResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "User"
    put:
      summary: "Update User Details"
      deprecated: false
      produces:
      - "application/json"
      description: "The update user details service is used to update user details like name, address, currency preference, etc.<br>Currency provided in the input will be respected in the <a href=\"https://developer.yodlee.com/apidocs/index.php#!/derived\">derived</a> services and the amount fields in the response will be provided in the preferred currency.<br>The HTTP response code is 204 (Success without content). <br>"
      operationId: "updateUser"
      responses:
        401:
          description: "Unauthorized"
        204:
          description: "No Content"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/UpdateUserRequest"
        in: "body"
        name: "userRequest"
        description: "userRequest"
        required: true
      tags:
      - "User"
      consumes:
      - "application/json"
  /transactions/categories/rules:
    post:
      summary: "Create or Run Transaction Categorization Rule"
      deprecated: false
      produces:
      - "application/json"
      description: "The Create or Run Transaction Categorization Rule endpoint is used to: <br>Create transaction categorization rules for both system and user-defined categories.<br>Run all the transaction categorization rules to categorize transactions by calling the endpoint with action=run as the query parameter. <br>The input body parameters to create transaction categorization rules follow:<br>     categoryId - This field is mandatory and numeric<br>     priority - This field is optional and numeric. Priority decides the order in which the rule gets applied on transactions.<br>     ruleClause - This field is mandatory and should contain at least one rule<br>     field - The value can be description or amount<br>       If the field value is description then,<br>         1. operation - value can be stringEquals or stringContains<br>         2. value - value should be min of 3 and max of 50 characters<br>       If the field value is amount then, <br>         1. operation - value can be numberEquals, numberLessThan, numberLessThanEquals, numberGreaterThan or numberGreaterThanEquals<br>         2. value - min value 0 and a max value of 99999999999.99 is allowed<br>The HTTP response code is 201 (Created Successfully)."
      operationId: "createOrRunTransactionCategorizationRules"
      responses:
        201:
          description: "Created Successfully"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y806 : Invalid input<br>Y400 : Rule already exists. Rule should be unique in terms of combination of description and amount"
        401:
          description: "Unauthorized"
        204:
          description: "No Content"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "action"
        description: "To run rules, pass action=run. Only value run is supported"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "ruleParam"
        description: "rules(JSON format) to categorize the transactions"
        type: "string"
        required: false
      tags:
      - "Transactions"
      consumes:
      - "application/json"
  /statements:
    get:
      summary: "Get Statements"
      deprecated: false
      produces:
      - "application/json"
      description: "The statements service is used to get the list of statement related information. <br>By default, all the latest statements of active and to be closed accounts are retrieved for the user. <br>Certain sites do not have both a statement date and a due date. When a fromDate is passed as an <br>input, all the statements that have the due date on or after the passed date are retrieved. <br>For sites that do not have the due date, statements that have the statement date <br>on or after the passed date are retrieved. <br>The default value of \"isLatest\" is true. To retrieve historical statements isLatest needs to be set to false.<br>"
      operationId: "getStatements"
      responses:
        200:
          schema:
            $ref: "#/definitions/StatementResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountId<br>Y800 : Invalid value for status<br>Y805 : Multiple containers not supported<br>Y800 : Invalid value for container<br>Y800 : Invalid value for isLatest<br>Y800 : Invalid value for fromDate<br>"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "accountId"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "container"
        description: "creditCard/loan/bill/insurance"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "from date for statement retrieval (YYYY-MM-DD)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "isLatest"
        description: "isLatest (true/false)"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "status"
        description: "ACTIVE/TO_BE_CLOSED/CLOSED"
        type: "string"
        required: false
      tags:
      - "Statements"
  /accounts:
    post:
      summary: "Add Manual Account"
      deprecated: false
      produces:
      - "application/json"
      description: "The add account service is used to add manual accounts.<br>The response of add account service includes the account name , account number and Yodlee generated account id.<br>All manual accounts added will be included as part of networth calculation by default.<br>Add manual account support is available for bank, card, investment, insurance, loan and bills container only.<br>"
      operationId: "createManualAccount"
      responses:
        200:
          schema:
            $ref: "#/definitions/CreatedAccountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for accountParam"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - schema:
          $ref: "#/definitions/CreateAccountRequest"
        in: "body"
        name: "accountParam"
        description: "accountParam"
        required: true
      tags:
      - "Accounts"
      consumes:
      - "application/json"
    get:
      summary: "Get Accounts"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get accounts service provides information about accounts added by the user.<br>By default, this service returns information for active and to be closed accounts.<br>If requestId is provided, the accounts that are updated in the context of the requestId will be provided in the response.<br>"
      operationId: "getAllAccounts"
      responses:
        200:
          schema:
            $ref: "#/definitions/AccountResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for status<br>Y800 : Invalid value for container<br>Y800 : Invalid value for providerAccountId<br>Y824 : The maximum number of accountIds permitted is 100"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountId"
        description: "Comma separated accountIds."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "container"
        description: "bank/creditCard/investment/insurance/loan/reward/bill/realEstate/otherAssets/otherLiabilities"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "profile, holder, fullAccountNumber, paymentProfile, autoRefresh"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "providerAccountId"
        description: "providerAccountId"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "requestId"
        description: "The unique identifier that returns contextual data"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "status"
        description: "ACTIVE/INACTIVE/TO_BE_CLOSED/CLOSED"
        type: "string"
        required: false
      tags:
      - "Accounts"
  /holdings/holdingTypeList:
    get:
      summary: "Get Holding Type List"
      deprecated: false
      produces:
      - "application/json"
      description: "The get holding types list service is used to get the supported holding types.<br>The response includes different holding types such as future, moneyMarketFund, stock, etc.<br>and it returns the supported holding types <br>"
      operationId: "getHoldingTypeList"
      responses:
        200:
          schema:
            $ref: "#/definitions/HoldingTypeListResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "Holdings"
  /transactions/{transactionId}:
    put:
      summary: "Update Transaction"
      deprecated: false
      produces:
      - "application/json"
      description: "The update transaction service is used to update the category,consumer description, memo for a transaction.<br>The HTTP response code is 204 (Success without content).<br>"
      operationId: "updateTransaction"
      responses:
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y812 : Required field -container missing in the transactionParam parameter input<br>Y800 : Invalid value for transactionId<br>Y800 : Invalid value for categoryId"
        401:
          description: "Unauthorized"
        204:
          description: "Updated Successfully"
        404:
          description: "Not Found"
      parameters:
      - in: "path"
        name: "transactionId"
        format: "int64"
        description: "transactionId"
        type: "integer"
        required: true
      - schema:
          $ref: "#/definitions/TransactionRequest"
        in: "body"
        name: "transactionRequest"
        description: "transactionRequest"
        required: true
      tags:
      - "Transactions"
      consumes:
      - "application/json"
  /user/logout:
    post:
      summary: "User Logout"
      deprecated: false
      produces:
      - "application/json"
      description: "<b>Deprecated</b>: This endpoint is deprecated for API Key-based authentication. The user logout service allows the user to log out of the application.<br>The service does not return a response body. The HTTP response code is 204 (Success with no content).<br>"
      operationId: "userLogout"
      responses:
        401:
          description: "Unauthorized"
        204:
          description: "Logout successful"
        404:
          description: "Not Found"
      tags:
      - "User"
      consumes:
      - "application/json"
  /user/unregister:
    delete:
      summary: "Delete User"
      deprecated: false
      produces:
      - "application/json"
      description: "The delete user service is used to delete or unregister a user from Yodlee. <br>Once deleted, the information related to the users cannot be retrieved. <br>The HTTP response code is 204 (Success without content)<br>"
      operationId: "unregister"
      responses:
        401:
          description: "Unauthorized"
        204:
          description: "No Content"
        404:
          description: "Not Found"
      tags:
      - "User"
  /dataExtracts/events:
    get:
      summary: "Get Events"
      deprecated: false
      produces:
      - "application/json;charset=UTF-8"
      description: "The get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.<br>Passing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the dataExtracts page.<br>The fromDate or the toDate parameters value cannot be less than 7 days. The time difference between these fields cannot be more than 60 minutes.<br>Cobrand session only has to be passed to invoke this service.<br>"
      operationId: "getDataExtractsEvents"
      responses:
        200:
          schema:
            $ref: "#/definitions/DataExtractsEventResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for fromDate.fromDate cannot be greater than current time<br>Y800 : Invalid value for toDate.toDate cannot be greater than current time<br>Y800 : Invalid value for fromDate or toDate.fromDate and toDate cannot be older than 7 days<br>Y800 : Invalid value for fromDate.fromDate cannot be greater than toDate."
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "eventName"
        description: "Event Name"
        type: "string"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "fromDate"
        description: "From DateTime (YYYY-MM-DDThh:mm:ssZ)"
        type: "string"
        required: true
      - in: "query"
        allowEmptyValue: false
        name: "toDate"
        description: "To DateTime (YYYY-MM-DDThh:mm:ssZ)"
        type: "string"
        required: true
      tags:
      - "DataExtracts"
  /derived/holdingSummary:
    get:
      summary: "Get Holding Summary"
      deprecated: false
      produces:
      - "application/json"
      description: "The get holding summary service is used to get the summary of asset classifications for the user.<br>By default, accounts with status as ACTIVE and TO BE CLOSED will be considered.<br>If the include parameter value is passed as details then a summary with holdings and account information is returned.<br>"
      operationId: "getHoldingSummary"
      responses:
        200:
          schema:
            $ref: "#/definitions/DerivedHoldingSummaryResponse"
          description: "OK"
        400:
          schema:
            $ref: "#/definitions/YodleeError"
          description: "Y800 : Invalid value for classificationType<br>Y814 : Exchange rate not available for currency<br>Y824 : The maximum number of accountIds permitted is 100<br>"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      parameters:
      - in: "query"
        allowEmptyValue: false
        name: "accountIds"
        description: "Comma separated accountIds"
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "classificationType"
        description: "e.g. Country, Sector, etc."
        type: "string"
        required: false
      - in: "query"
        allowEmptyValue: false
        name: "include"
        description: "details"
        type: "string"
        required: false
      tags:
      - "Derived"
  /holdings/assetClassificationList:
    get:
      summary: "Get Asset Classification List"
      deprecated: false
      produces:
      - "application/json"
      description: "The get asset classifications list service is used to get the supported asset classifications. <br>The response includes different classification types like assetClass, country, sector, style, etc., <br>and the values corresponding to each type.<br>"
      operationId: "getAssetClassificationList"
      responses:
        200:
          schema:
            $ref: "#/definitions/HoldingAssetClassificationListResponse"
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      tags:
      - "Holdings"
definitions:
  Account:
    type: "object"
    title: "Account"
    properties:
      availableCash:
        description: "The amount that is available for an ATM withdrawal, i.e., the cash available after deducting the amount that is already withdrawn from the total cash limit. (totalCashLimit-cashAdvance= availableCash)<br><b>Additional Details:</b> The available cash amount at the account-level can differ from the available cash at the statement-level, as the information in the aggregated card account data provides more up-to-date information.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      includeInNetWorth:
        description: "Used to determine  whether an account to be considered in the networth calculation.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank,creditCard,loan,investment,insurance,realEstate,otherAssets,otherLiabilities<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "boolean"
      moneyMarketBalance:
        description: "The amount in the money market fund or its equivalent such as bank deposit programs.<br><b>Note:</b> The money market balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      enrollmentDate:
        description: "Date on which the user is enrolled on the rewards program.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      estimatedDate:
        description: "The date on which the home value was estimated.<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      memo:
        description: "The additional description or notes given by the user.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      guarantor:
        description: "A nonprofit or state organization that works with lender, servicer, school, and the Department of Education to help successfully repay Federal Family Education Loan Program (FFELP) loans. If FFELP student loans default, the guarantor takes ownership of them.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      interestPaidLastYear:
        description: "Interest paid in last calendar year.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      lastUpdated:
        description: "The date time the account information was last retrieved from the provider site and updated in the Yodlee system.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      balance:
        description: "The total account value. <br><b>Additional Details:</b><br><b>Bank:</b> available balance or current balance.<br><b>Credit Card:</b> running Balance.<br><b>Investment:</b> The total balance of all the investment account, as it appears on the FI site.<br><b>Insurance:</b> CashValue or amountDue<br><b>Loan:</b> principalBalance<br><b>Bill:</b> amountDue<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan, bill, otherAssets, otherLiabilities, realEstate<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      homeInsuranceType:
        description: "Type of home insurance, like -<ul><li>HOME_OWNER</li><li>RENTAL</li><li>RENTER</li><li>etc..</li></ul><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* HOME_OWNER: Home owner insurance policy for the house.<br>\n* RENTAL: Rental insurance is the insurance taken by the owner for the house when it is being rented out.<br>\n* RENTER: Renters insurance is for occupants who do not own the property but want to protect their personal belongings that are in the home.<br>\n* UNKNOWN: The unknown type of home insurance policy.<br>\n* OTHER: The home insurance policy other than what has been listed here.<br>"
        readOnly: true
        type: "string"
        enum:
        - "HOME_OWNER"
        - "RENTAL"
        - "RENTER"
        - "UNKNOWN"
        - "OTHER"
      id:
        format: "int64"
        description: "The primary key of the account resource and the unique identifier for the account.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts </li><li>GET accounts/{accountId}</li><li>GET investmentOptions</li><li>GET accounts/historicalBalances</li><li>POST accounts</ul>"
        readOnly: true
        type: "integer"
      cash:
        description: "The amount that is available for immediate withdrawal or the total amount available to purchase securities in a brokerage or investment account.<br><b>Note:</b> The cash balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      totalCreditLine:
        description: "Total credit line is the amount of money that can be charged to a credit card. If credit limit of $5,000 is issued on a credit card, the total charges on the card cannot exceed this amount.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      providerName:
        description: "Service provider or institution name where the account originates. This belongs to the provider resource.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      valuationType:
        description: "The valuation Type indicates whether the home value is calculated either manually or by Yodlee Partners.<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Home value provided by the system.<br>\n* MANUAL: Home value manually provided by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "MANUAL"
      marginBalance:
        description: "The amount of borrowed funds used to purchase securities.<br><b>Note</b>: Margin balance is displayed only if the brokerage account is approved for margin. The margin balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      apr:
        format: "double"
        description: "The annual percentage rate (APR) is the yearly rate of interest on the credit card account.<br><b>Additional Details:</b> The yearly percentage rate charged when a balance is held on a credit card. This rate of interest is applied every month on the outstanding credit card balance.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      availableCredit:
        description: "<br><b>Credit Card:</b> Amount that is available to spend on the credit card. It is usually the Total credit line- Running balance- pending charges. <br><b>Loan:</b> The unused portion of  line of credit, on a revolving loan (such as a home-equity line of credit).<br><b>Additional Details:</b><br><b>Note:</b> The available credit amount at the account-level can differ from the available credit field at the statement-level, as the information in the aggregated card account data provides more up-to-date information.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      currentBalance:
        description: "The balance in the account that is available at the beginning of the business day; it is equal to the ledger balance of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      isManual:
        description: "Indicates if an account is aggregated from a site or it is a manual account i.e. account information manually provided by the user.<br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "boolean"
      profile:
        description: "Profile information of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/AccountProfile"
      escrowBalance:
        description: "The amount a mortgage company holds to pay a consumer's non-mortgage related expenses like insurance and property taxes. <br><b>Additional Details:</b><br><b>Note:</b> The escrow balance field is only applicable to the mortgage account type.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      nextLevel:
        description: "The eligible next level of the rewards program.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      classification:
        description: "The classification of the account such as personal, corporate, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, creditCard, investment, reward, loan, insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* OTHER: Other account.<br>\n* PERSONAL: Personal account.<br>\n* CORPORATE: Corporate account.<br>\n* SMALL_BUSINESS: Small business account.<br>\n* TRUST: Trust account.<br>\n* ADD_ON_CARD: Add on card account.<br>\n* VIRTUAL_CARD: Virtual card account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "OTHER"
        - "PERSONAL"
        - "CORPORATE"
        - "SMALL_BUSINESS"
        - "TRUST"
        - "ADD_ON_CARD"
        - "VIRTUAL_CARD"
      loanPayoffAmount:
        description: "The amount to be paid to close the loan account, i.e., the total amount required to meet a borrower's obligation on a loan.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      interestRateType:
        description: "The type of the interest rate, for example, fixed or variable.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* FIXED: Fixed interest rate.<br>\n* VARIABLE: Variable intererest rate.<br>\n* UNKNOWN: Unknown<br>\n* OTHER: Other<br>"
        readOnly: true
        type: "string"
        enum:
        - "FIXED"
        - "VARIABLE"
        - "UNKNOWN"
        - "OTHER"
      loanPayByDate:
        description: "The date by which the payoff amount should be paid.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      faceAmount:
        description: "The amount stated on the face of a consumer's policy that will be paid in the event of his or her death or any other event as stated in the insurance policy. The face amount is also referred to as the sum insured or maturity value in India.<br><b>Note:</b> The face amount field is applicable only to life insurance.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      policyFromDate:
        description: "The date the insurance policy began.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      premiumPaymentTerm:
        description: "The number of years for which premium payments have to be made in a policy.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      policyTerm:
        description: "The duration for which the policy is valid or in effect. For example, one year, five years, etc.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      repaymentPlanType:
        description: "The type of repayment plan that the borrower prefers to repay the loan. <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* STANDARD: A 10-year payment plan where the borrower makes the same fixed payments every month.<br>\n* GRADUATED: A 10-year payment plan where the monthly payments start small and increase every two years.<br>\n* EXTENDED: A payment plan with low monthly payments and an extended repayment term of up to 25 years. The borrower can either choose fixed monthly payments or graduated payments that increase over time.<br>"
        readOnly: true
        type: "string"
        enum:
        - "STANDARD"
        - "GRADUATED"
        - "EXTENDED"
      availableBalance:
        description: "The balance in the account that is available for spending. For checking accounts with overdraft, available balance may include overdraft amount, if end site adds overdraft balance to available balance.<br><b>Applicable containers</b>: bank, investment<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br>GET accounts/{accountId}"
        readOnly: true
        $ref: "#/definitions/Money"
      accountStatus:
        description: "The status of the account that is updated by the consumer through an application or an API. Valid Values: AccountStatus<br><b>Additional Details:</b><br><b>ACTIVE:</b> All the added manual and aggregated accounts status will be made \"ACTIVE\" by default. <br><b>TO_BE_CLOSED:</b> If the aggregated accounts are not found or closed in the data provider site, Yodlee system marks the status as TO_BE_CLOSED<br><b>INACTIVE:</b> Users can update the status as INACTIVE to stop updating and to stop considering the account in other services<br><b>CLOSED:</b> Users can update the status as CLOSED, if the account is closed with the provider. <br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* ACTIVE: Active accounts.<br>\n* INACTIVE: Accounts that are made inactive by the users.<br>\n* TO_BE_CLOSED: Active accounts.<br>\n* CLOSED: Accounts that are found to be closed in the provider site and awaiting confirmation from users to get closed.<br>\n* DELETED: This status is applicable only in case of GET dataExtracts/userData.<br>"
        readOnly: true
        type: "string"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "TO_BE_CLOSED"
        - "CLOSED"
        - "DELETED"
      lifeInsuranceType:
        description: "Type of life insurance.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* OTHER: Other type of insurances.<br>\n* TERM_LIFE_INSURANCE: Term insurance, a type of life insurance, provides coverage for a certain period of time or years. If the insured dies over the policy tenure a death benefit (or sum assured) is paid out. No payout is made if the insured survives the tenure.<br>\n* UNIVERSAL_LIFE_INSURANCE: Universal life insurance (often shortened to UL) is a type of cash value life insurance, sold primarily in the United States of America. Under the terms of the policy, the excess of premium payments above the current cost of insurance is credited to the cash value of the policy.<br>\n* WHOLE_LIFE_INSURANCE: Life insurance policy which is guaranteed to remain in force for the insured's entire lifetime, provided required premiums are paid, or to the maturity date.<br>\n* VARIABLE_LIFE_INSURANCE: Variable life insurance is a permanent life insurance policy with an investment component.<br>\n* ULIP: ULIP is a life insurance product, which provides risk cover for the policy holder along with investment options to invest in any number of qualified investments such as stocks, bonds or mutual funds.<br>\n* ENDOWMENT: An endowment policy is a life insurance contract designed to pay a lump sum after a specific term (on its 'maturity') or on death.<br>"
        readOnly: true
        type: "string"
        enum:
        - "OTHER"
        - "TERM_LIFE_INSURANCE"
        - "UNIVERSAL_LIFE_INSURANCE"
        - "WHOLE_LIFE_INSURANCE"
        - "VARIABLE_LIFE_INSURANCE"
        - "ULIP"
        - "ENDOWMENT"
      fullAccountNumber:
        description: "Full account number of the account that is included only when include = fullAccountNumber is provided in the request. For student loan account the account number that will be used for ACH or fund transfer<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan, reward, bill, otherAssets, otherLiabilities <br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      premium:
        description: "The financial cost that the policyholder pays to the insurance company to obtain an insurance cover.The premium is paid as a lump sum or in installments during the duration of the policy.<br><b>Applicable containers</b>: insurance<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      aggregationSource:
        description: "The source through which the account(s) are added in the system.<br><b>Valid Values</b>: SYSTEM, USER<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      overDraftLimit:
        description: "The overdraft Limit for the account.<br><b>Note:</b> The overdraft Limit is provided only for AUS, INDIA, UK, NZ locales.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      nickname:
        description: "The nickname of the account as provided by the consumer to identify an account. The account nickname can be used instead of the account name.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      term:
        description: "The tenure for which the CD account is valid  or in case of loan, the number of years/months over which the loan amount  has to be repaid. <br><b>Additional Details:</b><br>  Bank: The Term field is only applicable for the account type CD.Loan: The period for which the loan agreement is in force. The period, before or at the end of which, the loan should either be repaid or renegotiated for another term.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      interestRate:
        format: "double"
        description: "<br><b>Bank:</b> The interest rate offered by a FI to its depositors on a bank account.<br><b>Loan:</b> Interest rate applied on the loan.<br><b>Additional Details:</b><br><b>Note:</b> The Interest Rate field is only applicable for the following account types: savings, checking, money market, and certificate of deposit.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      deathBenefit:
        description: "The death benefit amount on a life insurance policy and annuity. It is usually equal to the face amount of the policy, but sometimes can vary for a whole life and universal life insurance policies.<br><b>Note:</b> The death benefit amount field is applicable only to annuities and life insurance.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      address:
        description: "The home address of the real estate account. The address entity for home address consists of state, zip and city only<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/AccountAddress"
      cashValue:
        description: "The amount of cash value available in the consumer's life insurance policy account - except for term insurance policy - for withdrawals, loans, etc. This field is also used to capture the cash value on the home insurance policy.It is the standard that the insurance company generally prefer to reimburse the policyholder for his or her loss, i.e., the cash value is equal to the replacement cost minus depreciation. The cash value is also referred to as surrender value in India for life insurance policies.<br><b>Note:</b> The cash value field is applicable to all types of life insurance (except for term life) and home insurance.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      holder:
        description: "Holder details of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountHolder"
      401kLoan:
        description: "The amount borrowed from the 401k account.<br><b>Note</b>: The 401k loan field is only applicable to the 401k account type.<br><b>Applicable containers</b>: investment<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      homeValue:
        description: "The home value of the real estate account.<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountNumber:
        description: "The account number as it appears on the site. (The POST accounts service response return this field as number)<br><b>Additional Details</b>:<b> Bank/ Loan/ Insurance/ Investment/Bill</b>:<br> The account number for the bank account as it appears at the site.<br><b>Credit Card</b>: The account number of the card account as it appears at the site,<br>i.e., the card number.The account number can be full or partial based on how it is displayed in the account summary page of the site.In most cases, the site does not display the full account number in the account summary page and additional navigation is required to aggregate it.<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>POST accounts</li></ul>"
        readOnly: true
        type: "string"
      createdDate:
        description: "The date on which the account is created in the Yodlee system.<br><b>Additional Details:</b> It is the date when the user links or aggregates the account(s) that are held with the provider to the Yodlee system.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      interestPaidYTD:
        description: "Interest paid from the start of the year to date.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      providerAccountId:
        format: "int64"
        description: "The primary key of the provider account resource.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "integer"
      collateral:
        description: "Property or possession offered to support a loan that can be seized on a default.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      runningBalance:
        description: "The amount that is currently owed on the credit card account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      dueDate:
        description: "The date on which the due amount has to be paid. <br><b>Additional Details:</b><br><b>Credit Card:</b> The monthly date by when the minimum payment is due to be paid on the credit card account. <br><b>Loan:</b> The date on or before which the due amount should be paid.<br><b>Note:</b> The due date at the account-level can differ from the due date field at the statement-level, as the information in the aggregated card account data provides an up-to-date information to the consumer.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      frequency:
        description: "The frequency of the billing cycle of the account in case of card and bills. The frequency in which premiums are paid in an insurance policy such as monthly, quarterly, and annually. The frequency in which due amounts are paid in a loan  account.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bill, creditCard, insurance, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* DAILY: Occurs every day.<br>\n* ONE_TIME: Occurs once.<br>\n* WEEKLY: Occurs once in a week.<br>\n* EVERY_2_WEEKS: Occurs once in two weeks.<br>\n* SEMI_MONTHLY: Occurs once in 15 days.<br>\n* MONTHLY: Occurs once in a month.<br>\n* QUARTERLY: Occurs once in three months.<br>\n* SEMI_ANNUALLY: Occurs once in six months.<br>\n* ANNUALLY: Occurs once in a year.<br>\n* EVERY_2_MONTHS: Occurs once in two months.<br>\n* OTHER: <br>\n* FIRST_DAY_MONTHLY: Occurs on first day of every month.<br>\n* LAST_DAY_MONTHLY: Occurs on last day of every month.<br>\n* EVERY_4_WEEKS: Occurs once in four weeks.<br>"
        readOnly: true
        type: "string"
        enum:
        - "DAILY"
        - "ONE_TIME"
        - "WEEKLY"
        - "EVERY_2_WEEKS"
        - "SEMI_MONTHLY"
        - "MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "EVERY_2_MONTHS"
        - "OTHER"
        - "FIRST_DAY_MONTHLY"
        - "LAST_DAY_MONTHLY"
        - "EVERY_4_WEEKS"
      maturityAmount:
        description: "The maturity amount on the CD is the amount(principal and interest) paid on or after the maturity date.<br><b>Additional Details:</b> The Maturity Amount field is only applicable for the account type CD(Fixed Deposits).<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      associatedProviderAccountId:
        description: "The providerAccountIds that share the account with the primary providerAccountId that was created when the user had added the account for the first time.<br><b>Additional Details</b>: This attribute is returned in the response only if the account deduplication feature is enabled and the same account is mapped to more than one provider account IDs indicating the account is owned by more than one user, for example, joint accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: All Containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          format: "int64"
          type: "integer"
      isAsset:
        description: "The account to be considered as an asset or liability.<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "boolean"
      principalBalance:
        description: "The principal or loan balance is the outstanding balance on a loan account, excluding the interest and fees. The principal balance is the original borrowed amount plus any applicable loan fees, minus any principal payments.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      totalCashLimit:
        description: "The maximum amount that can be withdrawn from an ATM using the credit card. Credit cards issuer allow cardholders to withdraw cash using their cards - the cash limit is a percent of the overall credit limit.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      maturityDate:
        description: "The date when a certificate of deposit (CD/FD) matures or the final payment date of a loan at which point the principal amount (including pending interest) is due to be paid.<br><b>Additional Details:</b> The date when a certificate of deposit (CD) matures, i.e., the money in the CD can be withdrawn without paying an early withdrawal penalty.The final payment date of a loan, i.e., the principal amount (including pending interest) is due to be paid.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      minimumAmountDue:
        description: "The minimum amount due is the lowest amount of money that a consumer is required to pay each month.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, insurance, bill, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      annualPercentageYield:
        format: "double"
        description: "Annual percentage yield (APY) is a normalized representation of an interest rate, based on a compounding period of one year. APY generally refers to the rate paid to a depositor by a financial institution on an account.<br><b>Applicable containers</b>: bank<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      accountType:
        description: "The type of account that is aggregated, i.e., savings, checking, credit card, charge, HELOC, etc. The account type is derived based on the attributes of the account. <br><b>Valid Values:</b><br><b>Aggregated Account Type</b><br><b>bank</b><ul><li>CHECKING</li><li>SAVINGS</li><li>CD</li><li>PPF</li><li>RECURRING_DEPOSIT</li><li>FSA</li><li>MONEY_MARKET</li><li>IRA</li><li>PREPAID</li></ul><b>creditCard</b><ul><li>OTHER</li><li>CREDIT</li><li>STORE</li><li>CHARGE</li><li>OTHER</li></ul><b>investment (SN 1.0)</b><ul><li>BROKERAGE_MARGIN</li><li>HSA</li><li>IRA</li><li>BROKERAGE_CASH</li><li>401K</li><li>403B</li><li>TRUST</li><li>ANNUITY</li><li>SIMPLE</li><li>CUSTODIAL</li><li>BROKERAGE_CASH_OPTION</li><li>BROKERAGE_MARGIN_OPTION</li><li>INDIVIDUAL</li><li>CORPORATE</li><li>JTTIC</li><li>JTWROS</li><li>COMMUNITY_PROPERTY</li><li>JOINT_BY_ENTIRETY</li><li>CONSERVATORSHIP</li><li>ROTH</li><li>ROTH_CONVERSION</li><li>ROLLOVER</li><li>EDUCATIONAL</li><li>529_PLAN</li><li>457_DEFERRED_COMPENSATION</li><li>401A</li><li>PSP</li><li>MPP</li><li>STOCK_BASKET</li><li>LIVING_TRUST</li><li>REVOCABLE_TRUST</li><li>IRREVOCABLE_TRUST</li><li>CHARITABLE_REMAINDER</li><li>CHARITABLE_LEAD</li><li>CHARITABLE_GIFT_ACCOUNT</li><li>SEP</li><li>UTMA</li><li>UGMA</li><li>ESOPP</li><li>ADMINISTRATOR</li><li>EXECUTOR</li><li>PARTNERSHIP</li><li>SOLE_PROPRIETORSHIP</li><li>CHURCH</li><li>INVESTMENT_CLUB</li><li>RESTRICTED_STOCK_AWARD</li><li>CMA</li><li>EMPLOYEE_STOCK_PURCHASE_PLAN</li><li>PERFORMANCE_PLAN</li><li>BROKERAGE_LINK_ACCOUNT</li><li>MONEY_MARKET</li><li>SUPER_ANNUATION</li><li>REGISTERED_RETIREMENT_SAVINGS_PLAN</li><li>SPOUSAL_RETIREMENT_SAVINGS_PLAN</li><li>DEFERRED_PROFIT_SHARING_PLAN</li><li>NON_REGISTERED_SAVINGS_PLAN</li><li>REGISTERED_EDUCATION_SAVINGS_PLAN</li><li>GROUP_RETIREMENT_SAVINGS_PLAN</li><li>LOCKED_IN_RETIREMENT_SAVINGS_PLAN</li><li>RESTRICTED_LOCKED_IN_SAVINGS_PLAN</li><li>LOCKED_IN_RETIREMENT_ACCOUNT</li><li>REGISTERED_PENSION_PLAN</li><li>TAX_FREE_SAVINGS_ACCOUNT</li><li>LIFE_INCOME_FUND</li><li>REGISTERED_RETIREMENT_INCOME_FUND</li><li>SPOUSAL_RETIREMENT_INCOME_FUND</li><li>LOCKED_IN_REGISTERED_INVESTMENT_FUND</li><li>PRESCRIBED_REGISTERED_RETIREMENT_INCOME_FUND</li><li>GUARANTEED_INVESTMENT_CERTIFICATES</li><li>REGISTERED_DISABILITY_SAVINGS_PLAN</li><li>OTHER</li></ul><b>investment (SN 2.0)</b><ul><li>BROKERAGE_CASH</li><li>BROKERAGE_MARGIN</li><li>INDIVIDUAL_RETIREMENT_ACCOUNT_IRA</li><li>EMPLOYEE_RETIREMENT_ACCOUNT_401K</li><li>EMPLOYEE_RETIREMENT_SAVINGS_PLAN_403B</li><li>TRUST</li><li>ANNUITY</li><li>SIMPLE_IRA</li><li>CUSTODIAL_ACCOUNT</li><li>BROKERAGE_CASH_OPTION</li><li>BROKERAGE_MARGIN_OPTION</li><li>INDIVIDUAL</li><li>CORPORATE_INVESTMENT_ACCOUNT</li><li>JOINT_TENANTS_TENANCY_IN_COMMON_JTIC</li><li>JOINT_TENANTS_WITH_RIGHTS_OF_SURVIVORSHIP_JTWROS</li><li>JOINT_TENANTS_COMMUNITY_PROPERTY</li><li>JOINT_TENANTS_TENANTS_BY_ENTIRETY</li><li>CONSERVATOR</li><li>ROTH_IRA</li><li>ROTH_CONVERSION</li><li>ROLLOVER_IRA</li><li>EDUCATIONAL</li><li>EDUCATIONAL_SAVINGS_PLAN_529</li><li>DEFERRED_COMPENSATION_PLAN_457</li><li>MONEY_PURCHASE_RETIREMENT_PLAN_401A</li><li>PROFIT_SHARING_PLAN</li><li>MONEY_PURCHASE_PLAN</li><li>STOCK_BASKET_ACCOUNT</li><li>LIVING_TRUST</li><li>REVOCABLE_TRUST</li><li>IRREVOCABLE_TRUST</li><li>CHARITABLE_REMAINDER_TRUST</li><li>CHARITABLE_LEAD_TRUST</li><li>CHARITABLE_GIFT_ACCOUNT</li><li>SEP_IRA</li><li>UNIFORM_TRANSFER_TO_MINORS_ACT_UTMA</li><li>UNIFORM_GIFT_TO_MINORS_ACT_UGMA</li><li>EMPLOYEE_STOCK_OWNERSHIP_PLAN_ESOP</li><li>ADMINISTRATOR</li><li>EXECUTOR</li><li>PARTNERSHIP</li><li>PROPRIETORSHIP</li><li>CHURCH_ACCOUNT</li><li>INVESTMENT_CLUB</li><li>RESTRICTED_STOCK_AWARD</li><li>CASH_MANAGEMENT_ACCOUNT</li><li>EMPLOYEE_STOCK_PURCHASE_PLAN_ESPP</li><li>PERFORMANCE_PLAN</li><li>BROKERAGE_LINK_ACCOUNT</li><li>MONEY_MARKET_ACCOUNT</li><li>SUPERANNUATION</li><li>REGISTERED_RETIREMENT_SAVINGS_PLAN_RRSP</li><li>SPOUSAL_RETIREMENT_SAVINGS_PLAN_SRSP</li><li>DEFERRED_PROFIT_SHARING_PLAN_DPSP</li><li>NON_REGISTERED_SAVINGS_PLAN_NRSP</li><li>REGISTERED_EDUCATION_SAVINGS_PLAN_RESP</li><li>GROUP_RETIREMENT_SAVINGS_PLAN_GRSP</li><li>LOCKED_IN_RETIREMENT_SAVINGS_PLAN_LRSP</li><li>RESTRICTED_LOCKED_IN_SAVINGS_PLAN_RLSP</li><li>LOCKED_IN_RETIREMENT_ACCOUNT_LIRA</li><li>REGISTERED_PENSION_PLAN_RPP</li><li>TAX_FREE_SAVINGS_ACCOUNT_TFSA</li><li>LIFE_INCOME_FUND_LIF</li><li>REGISTERED_RETIREMENT_INCOME_FUND_RIF</li><li>SPOUSAL_RETIREMENT_INCOME_FUND_SRIF</li><li>LOCKED_IN_REGISTERED_INVESTMENT_FUND_LRIF</li><li>PRESCRIBED_REGISTERED_RETIREMENT_INCOME_FUND_PRIF</li><li>GUARANTEED_INVESTMENT_CERTIFICATES_GIC</li><li>REGISTERED_DISABILITY_SAVINGS_PLAN_RDSP</li><li>DEFINED_CONTRIBUTION_PLAN</li><li>DEFINED_BENEFIT_PLAN</li><li>EMPLOYEE_STOCK_OPTION_PLAN</li><li>NONQUALIFIED_DEFERRED_COMPENSATION_PLAN_409A</li><li>KEOGH_PLAN</li><li>EMPLOYEE_RETIREMENT_ACCOUNT_ROTH_401K</li><li>DEFERRED_CONTINGENT_CAPITAL_PLAN_DCCP</li><li>EMPLOYEE_BENEFIT_PLAN</li><li>EMPLOYEE_SAVINGS_PLAN</li><li>HEALTH_SAVINGS_ACCOUNT_HSA</li><li>COVERDELL_EDUCATION_SAVINGS_ACCOUNT_ESA</li><li>TESTAMENTARY_TRUST</li><li>ESTATE</li><li>GRANTOR_RETAINED_ANNUITY_TRUST_GRAT</li><li>ADVISORY_ACCOUNT</li><li>NON_PROFIT_ORGANIZATION_501C</li><li>HEALTH_REIMBURSEMENT_ARRANGEMENT_HRA</li><li>INDIVIDUAL_SAVINGS_ACCOUNT_ISA</li><li>CASH_ISA</li><li>STOCKS_AND_SHARES_ISA</li><li>INNOVATIVE_FINANCE_ISA</li><li>JUNIOR_ISA</li><li>EMPLOYEES_PROVIDENT_FUND_ORGANIZATION_EPFO</li><li>PUBLIC_PROVIDENT_FUND_PPF</li><li>EMPLOYEES_PENSION_SCHEME_EPS</li><li>NATIONAL_PENSION_SYSTEM_NPS</li><li>INDEXED_ANNUITY</li><li>ANNUITIZED_ANNUITY</li><li>VARIABLE_ANNUITY</li><li>ROTH_403B</li><li>SPOUSAL_IRA</li><li>SPOUSAL_ROTH_IRA</li><li>SARSEP_IRA</li><li>SUBSTANTIALLY_EQUAL_PERIODIC_PAYMENTS_SEPP</li><li>OFFSHORE_TRUST</li><li>IRREVOCABLE_LIFE_INSURANCE_TRUST</li><li>INTERNATIONAL_TRUST</li><li>LIFE_INTEREST_TRUST</li><li>EMPLOYEE_BENEFIT_TRUST</li><li>PRECIOUS_METAL_ACCOUNT</li><li>INVESTMENT_LOAN_ACCOUNT</li><li>GRANTOR_RETAINED_INCOME_TRUST</li><li>PENSION_PLAN</li><li>OTHER</li></ul><b>bill</b><ul><li>TELEPHONE</li><li>UTILITY</li><li>CABLE</li><li>WIRELESS</li><li>BILLS</li></ul><b>loan</b><ul><li>MORTGAGE</li><li>INSTALLMENT_LOAN</li><li>PERSONAL_LOAN</li><li>HOME_EQUITY_LINE_OF_CREDIT</li><li>LINE_OF_CREDIT</li><li>AUTO_LOAN</li><li>STUDENT_LOAN</li><li>HOME_LOAN</li></ul><b>insurance</b><ul><li>AUTO_INSURANCE</li><li>HEALTH_INSURANCE</li><li>HOME_INSURANCE</li><li>LIFE_INSURANCE</li><li>ANNUITY</li><li>TRAVEL_INSURANCE</li><li>INSURANCE</li></ul><b>realEstate</b><ul> <li>REAL_ESTATE</li></ul><b>reward</b><ul><li>REWARD_POINTS</li></ul><b>Manual Account Type</b><br><b>bank</b><ul><li>CHECKING</li><li>SAVINGS</li><li>CD</li><li>PREPAID</li></ul><b>credit</b><ul>  <li>CREDIT</li></ul><b>loan</b><ul>  <li>PERSONAL_LOAN</li><li>HOME_LOAN</li></ul><b>bill</b><ul><li>BILLS</li></ul><b>insurance</b><ul><li>INSURANCE</li><li>ANNUITY</li></ul><b>investment</b><ul><li>BROKERAGE_CASH</li></ul><br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      originationDate:
        description: "The date on which the loan is disbursed.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      totalVestedBalance:
        description: "The total vested balance that appears in an investment account. Such as the 401k account or the equity award account that includes employer provided funding. <br><b>Note:</b> The amount an employee can claim after he or she leaves the organization. The total vested balance field is only applicable to the retirement related accounts such as 401k, equity awards, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      rewardBalance:
        description: "Information of different reward balances associated with the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/RewardBalance"
      sourceAccountStatus:
        description: "Indicates the status of the loan account. <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* IN_REPAYMENT: The borrower is currently repaying the student loan.<br>\n* DEFAULTED: The borrower has failed to repay the loan according to the terms of the promissory note.<br>\n* IN_SCHOOL: Indicates the borrower is still in school.<br>\n* IN_GRACE_PERIOD: The specified period (usually six months) between the date student graduates or drops below half time status and the date the loan repayment begins.<br>\n* DELINQUENCY: The borrower has failed to make loan repayments when due. Delinquency begins with the first missed loan repayment.<br>\n* DEFERMENT: A period when the student postpones the loan repayments.<br>"
        readOnly: true
        type: "string"
        enum:
        - "IN_REPAYMENT"
        - "DEFAULTED"
        - "IN_SCHOOL"
        - "IN_GRACE_PERIOD"
        - "DELINQUENCY"
        - "DEFERMENT"
      policyEffectiveDate:
        description: "The date on which the insurance policy coverage commences.<br><b>Applicable containers</b>: insurance<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      totalUnvestedBalance:
        description: "The total unvested balance that appears in an investment account.Such as the 401k account or the equity award account that includes employer provided funding. <br><b>Note:</b> The amount the employer contributes is generally subject to vesting and remain unvested for a specific period of time or until fulfillment of certain conditions. The total unvested balance field is only applicable to the retirement related accounts such as 401k, equity awards, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      annuityBalance:
        description: "Indicates the contract value of the annuity.<br><b>Note:</b> The annuity balance field is applicable only to annuities.<br><b>Applicable containers</b>: insurance, investment<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountName:
        description: "The account name as it appears at the site.<br>(The POST accounts service response return this field as name)<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      totalCreditLimit:
        description: "The maximum amount of credit a financial institution extends to a consumer through a line of credit or a revolving loan like HELOC. <br><b>Additional Details:</b><br><b>Note:</b> The credit limit field is applicable only to LOC and HELOC account types.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      policyStatus:
        description: "The status of the policy.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* ACTIVE: Denotes the policy is active.<br>\n* INACTIVE: Denotes the policy is inactive.<br>\n* OTHER: The status could not be determined or it is other than active/inactive.<br>"
        readOnly: true
        type: "string"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "OTHER"
      shortBalance:
        description: "The sum of the current market values of short positions held in a brokerage account.<br><b>Note:</b> The short balance balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      lender:
        description: "The financial institution that provides the loan.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastEmployeeContributionAmount:
        description: "Indicates the last amount contributed by the employee to the 401k account.<br><b>Note:</b> The last employee contribution amount field is derived from the transaction data and not aggregated from the FI site. The field is only applicable to the 401k account type.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      providerId:
        description: "Identifier of the provider site. The primary key of provider resource. <br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastPaymentDate:
        description: "The date on which the payment for the previous or current billing cycle is done.<br><b>Additional Details:</b> If the payment is already done for the current billing cycle, then the field indicates the payment date of the current billing cycle. If payment is yet to be done for the current billing cycle, then the field indicates the date on which the payment was made for any of the previous billing cycles. The last payment date at the account-level can differ from the last payment date at the statement-level, as the information in the aggregated card account data provides an up-to-date information to the consumer.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      primaryRewardUnit:
        description: "Primary reward unit for this reward program. E.g. miles, points, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastPaymentAmount:
        description: "Last/Previous payment amount on the account.  Portion of the principal and interest paid on previous month or period to satisfy a loan.<br><b>Additional Details:</b> If the payment is already done for the current billing cycle, then the field indicates the payment of the current billing cycle. If payment is yet to be done for the current billing cycle, then the field indicates the payment that was made for any of the previous billing cycles.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      remainingBalance:
        description: "The sum of the future payments due to be paid to the insurance company during a policy year. It is the policy rate minus the payments made till date.<br><b>Note:</b> The remaining balance field is applicable only to auto insurance and home insurance.<br><b>Applicable containers</b>: insurance<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      userClassification:
        description: "<b>Applicable containers</b>: reward, bank, creditCard, investment, loan, insurance, realEstate, bill, otherLiabilities<br><b>Endpoints</b>:<ul><li>GET accounts </li><li>GET accounts/{accountId}</li><li>POST accounts</ul><b>Applicable Values</b><br>\n* BUSINESS: Indicates a small business account.<br>\n* PERSONAL: Indicates a personal account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "BUSINESS"
        - "PERSONAL"
      bankTransferCode:
        description: "Bank and branch identification information.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment, loan<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/BankTransferCode"
      expirationDate:
        description: "The date on which the insurance policy expires or matures.<br><b>Additional Details:</b> The due date at the account-level can differ from the due date field at the statement-level, as the information in the aggregated card account data provides an up-to-date information to the consumer.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      coverage:
        description: "The coverage-related details of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Coverage"
      loanPayOffDetails:
        description: "The loan payoff details such as date by which the payoff amount should be paid, loan payoff amount, and the outstanding balance on the loan account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/LoanPayoffDetails"
      cashAPR:
        format: "double"
        description: "The APR applicable to cash withdrawals on the credit card account.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      autoRefresh:
        description: "Auto refresh account-related information.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/AutoRefresh"
      displayedName:
        description: "The name or identification of the account owner, as it appears at the FI site. <br><b>Note:</b> The account holder name can be full or partial based on how it is displayed in the account summary page of the FI site. In most cases, the FI site does not display the full account holder name in the account summary page.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan, bill, reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      amountDue:
        description: "The amount due to be paid for the account.<br><b>Additional Details:</b><b>Credit Card:</b> The total amount due for the purchase of goods or services that must be paid by the due date.<br><b>Loan:</b> The amount due to be paid on the due date.<br><b>Note:</b> The amount due at the account-level can differ from the amount due at the statement-level, as the information in the aggregated card account data provides more up-to-date information.<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      currentLevel:
        description: "Current level of the reward program the user is associated with. E.g. Silver, Jade etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      originalLoanAmount:
        description: "The amount of loan that the lender has provided.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      policyToDate:
        description: "The date to which the policy exists.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      paymentProfile:
        description: "The payment profile attribute contains information such as payment address, payment identifier, etc., that are required to set up a payment. <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/PaymentProfile"
      CONTAINER:
        description: "The type of service. E.g., Bank, Credit Card, Investment, Insurance, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* bank: Applicable for Aggregated and Manual<br>\n* creditCard: Applicable for Aggregated and Manual<br>\n* investment: Applicable for Aggregated and Manual<br>\n* insurance: Applicable for Aggregated and Manual<br>\n* loan: Applicable for Aggregated and Manual<br>\n* reward: Applicable for Aggregated and Manual<br>\n* bill: Applicable for Aggregated and Manual<br>\n* realEstate: Applicable for Manual<br>\n* otherAssets: Applicable for Manual<br>\n* otherLiabilities: Applicable for Manual"
        readOnly: true
        type: "string"
        enum:
        - "bank"
        - "creditCard"
        - "investment"
        - "insurance"
        - "loan"
        - "reward"
        - "bill"
        - "realEstate"
        - "otherAssets"
        - "otherLiabilities"
      lastEmployeeContributionDate:
        description: "The date on which the last employee contribution was made to the 401k account.<br><b>Note:</b> The last employee contribution date field is derived from the transaction data and not aggregated from the FI site. The field is only applicable to the 401k account type.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastPayment:
        description: "The last payment made for the account.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      recurringPayment:
        description: "The monthly or periodic payment on a loan that is recurring in nature. The recurring payment amount is usually same as the amount due, unless late fees or other charges are added eventually changing the amount due for a particular month.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
  ApiKeyResponse:
    type: "object"
    title: "ApiKeyResponse"
    properties:
      apiKey:
        description: "ApiKey customer details.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>"
        type: "array"
        items:
          $ref: "#/definitions/ApiKeyOutput"
  HoldingResponse:
    type: "object"
    title: "HoldingResponse"
    properties:
      holding:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Holding"
  CreateCobrandNotificationEventRequest:
    type: "object"
    title: "CreateCobrandNotificationEventRequest"
    properties:
      event:
        $ref: "#/definitions/CreateCobrandNotificationEvent"
  ProviderAccount:
    type: "object"
    title: "ProviderAccount"
    properties:
      preferences:
        description: "User preference values for Auto-Refresh and DataExtracts Notification<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/ProviderAccountPreferences"
      createdDate:
        description: "The date on when the provider account is created in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      aggregationSource:
        description: "The source through which the providerAccount is added in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      providerId:
        format: "int64"
        description: "Unique identifier for the provider resource. This denotes the provider for which the provider account id is generated by the user.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      requestId:
        description: "Unique id generated to indicate the request.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      isManual:
        description: "Indicates whether account is a manual or aggregated provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "boolean"
      id:
        format: "int64"
        description: "Unique identifier for the provider account resource. This is created during account addition.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      status:
        description: "The status of last update attempted for the account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* LOGIN_IN_PROGRESS: Login to provider site is in progress.<br>\n* USER_INPUT_REQUIRED: Additional authentication information is needed from the user.<br>\n* IN_PROGRESS: Login is successful and data aggregation is in progress.<br>\n* PARTIAL_SUCCESS: Data is partially retrieved.<br>\n* SUCCESS: Data is retrieved successfully.<br>\n* FAILED: Additional authentication information is needed from the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "LOGIN_IN_PROGRESS"
        - "USER_INPUT_REQUIRED"
        - "IN_PROGRESS"
        - "PARTIAL_SUCCESS"
        - "SUCCESS"
        - "FAILED"
  Document:
    type: "object"
    title: "Document"
    properties:
      accountID:
        format: "int64"
        description: "The unique identifier for the account. The account ID to which the document is linked.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "integer"
      lastUpdated:
        description: "Indicates the date and time the document was last updated.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      formType:
        description: "Indicates the type of the tax form.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      docType:
        description: "Indicates the type of the document.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      name:
        description: "Indicates the name of the document.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      id:
        description: "The document's primary key and unique identifier.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      source:
        description: "Indicates the source of the document download.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      status:
        description: "Indicates the status of the document download.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
  ProviderAccountUserProfileResponse:
    type: "object"
    title: "ProviderAccountUserProfileResponse"
    properties:
      providerAccount:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/ProviderAccountProfile"
  Security:
    type: "object"
    title: "Security"
    properties:
      issueTypeMultiplier:
        format: "double"
        description: "Price units corresponding to the security style. This is used to derive actual price of the security from market value.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      stateTaxable:
        description: "The state in which the security is taxed.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      callDate:
        description: "Next call date of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      cdscFundFlag:
        description: "cdsc fund flag of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      cusip:
        description: "A CUSIP is a nine-character alphanumeric code that identifies a North American financial security for the purposes of facilitating clearing and settlement of trades.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      federalTaxable:
        description: "Flag indicating federal taxable.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      sAndPRating:
        description: "Unique identifier for S&P rating on Envestnet platform.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      shareClass:
        description: "Share class of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isEnvestnetDummySecurity:
        description: "Flag indicating a dummy security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      description:
        description: "The description (name) of the security. For example, Cisco Systems.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      minimumPurchase:
        format: "int32"
        description: "Minimum purchase of security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "integer"
      type:
        description: "Indicates the type of security like stocks, mutual fund, etc. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      firstCouponDate:
        description: "First coupon date of security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      frequency:
        format: "int32"
        description: "Coupon Frequency.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "integer"
      accrualMethod:
        description: "The method in which interest is accrued or earned.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      incomeCurrency:
        description: "ISO 4217 currency code indicating income currency of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      maturityDate:
        description: "Maturity date of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      callPrice:
        format: "double"
        description: "Next call price of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      id:
        format: "int64"
        description: "The unique identifier of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "integer"
      issueDate:
        description: "Issue date of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      sector:
        description: "Identifier of the sector to which the security belongs to.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      agencyFactor:
        format: "double"
        description: "Agency factor of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      interestRate:
        format: "double"
        description: "The rate of interest paid annually, expressed as a percentage of the bond's par or face value.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      lastModifiedDate:
        description: "The last updated date of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      gicsSector:
        description: "GICS Sector is a categorization the S&P assigns to all publically traded companies. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      closedFlag:
        description: "<b>true</b>:Closed for all investors , <b>false</b>: Open to all investors.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      sedol:
        description: "The Stock Exchange Daily Official List (SEDOL) is a set of security identifiers used in the United Kingdom and Ireland for clearing purposes.<br><b>Note</b>: The SEDOL field is only applicable to the trade related transactions.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      subSector:
        description: "GICS sector ID to which the security belongs to.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      lastCouponDate:
        description: "Last coupon date of security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isSyntheticSecurity:
        description: "Indicates whether the security is a simulated security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      tradeCurrencyCode:
        description: "ISO 4217 currency code indicating trading currency of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isDummySecurity:
        description: "Indicates whether the security is a dummy security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      moodyRating:
        description: "Unique identifier for Moody rating on Envestnet platform.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      style:
        description: "Classification of the style for the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      firmEligible:
        description: "<b>1</b>- indicates Eligible,<b>0</b>- indicates firm is not eligible.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      fundFamily:
        description: "Mutual Fund Family Name.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isin:
        description: "The International Securities Identification Number (ISIN) is used worldwide to identify specific securities. It is equivalent to CUSIP for international markets.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
  DataExtractsAccount:
    type: "object"
    title: "DataExtractsAccount"
    properties:
      availableCash:
        description: "The amount that is available for an ATM withdrawal, i.e., the cash available after deducting the amount that is already withdrawn from the total cash limit. (totalCashLimit-cashAdvance= availableCash)<br><b>Additional Details:</b> The available cash amount at the account-level can differ from the available cash at the statement-level, as the information in the aggregated card account data provides more up-to-date information.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      includeInNetWorth:
        description: "Used to determine  whether an account to be considered in the networth calculation.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank,creditCard,loan,investment,insurance,realEstate,otherAssets,otherLiabilities<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "boolean"
      moneyMarketBalance:
        description: "The amount in the money market fund or its equivalent such as bank deposit programs.<br><b>Note:</b> The money market balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      enrollmentDate:
        description: "Date on which the user is enrolled on the rewards program.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      estimatedDate:
        description: "The date on which the home value was estimated.<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      memo:
        description: "The additional description or notes given by the user.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      guarantor:
        description: "A nonprofit or state organization that works with lender, servicer, school, and the Department of Education to help successfully repay Federal Family Education Loan Program (FFELP) loans. If FFELP student loans default, the guarantor takes ownership of them.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      interestPaidLastYear:
        description: "Interest paid in last calendar year.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      lastUpdated:
        description: "The date time the account information was last retrieved from the provider site and updated in the Yodlee system.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      balance:
        description: "The total account value. <br><b>Additional Details:</b><br><b>Bank:</b> available balance or current balance.<br><b>Credit Card:</b> running Balance.<br><b>Investment:</b> The total balance of all the investment account, as it appears on the FI site.<br><b>Insurance:</b> CashValue or amountDue<br><b>Loan:</b> principalBalance<br><b>Bill:</b> amountDue<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan, bill, otherAssets, otherLiabilities, realEstate<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      homeInsuranceType:
        description: "Type of home insurance, like -<ul><li>HOME_OWNER</li><li>RENTAL</li><li>RENTER</li><li>etc..</li></ul><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* HOME_OWNER: Home owner insurance policy for the house.<br>\n* RENTAL: Rental insurance is the insurance taken by the owner for the house when it is being rented out.<br>\n* RENTER: Renters insurance is for occupants who do not own the property but want to protect their personal belongings that are in the home.<br>\n* UNKNOWN: The unknown type of home insurance policy.<br>\n* OTHER: The home insurance policy other than what has been listed here.<br>"
        readOnly: true
        type: "string"
        enum:
        - "HOME_OWNER"
        - "RENTAL"
        - "RENTER"
        - "UNKNOWN"
        - "OTHER"
      id:
        format: "int64"
        description: "The primary key of the account resource and the unique identifier for the account.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts </li><li>GET accounts/{accountId}</li><li>GET investmentOptions</li><li>GET accounts/historicalBalances</li><li>POST accounts</ul>"
        readOnly: true
        type: "integer"
      cash:
        description: "The amount that is available for immediate withdrawal or the total amount available to purchase securities in a brokerage or investment account.<br><b>Note:</b> The cash balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      totalCreditLine:
        description: "Total credit line is the amount of money that can be charged to a credit card. If credit limit of $5,000 is issued on a credit card, the total charges on the card cannot exceed this amount.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      providerName:
        description: "Service provider or institution name where the account originates. This belongs to the provider resource.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      valuationType:
        description: "The valuation Type indicates whether the home value is calculated either manually or by Yodlee Partners.<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Home value provided by the system.<br>\n* MANUAL: Home value manually provided by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "MANUAL"
      marginBalance:
        description: "The amount of borrowed funds used to purchase securities.<br><b>Note</b>: Margin balance is displayed only if the brokerage account is approved for margin. The margin balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      apr:
        format: "double"
        description: "The annual percentage rate (APR) is the yearly rate of interest on the credit card account.<br><b>Additional Details:</b> The yearly percentage rate charged when a balance is held on a credit card. This rate of interest is applied every month on the outstanding credit card balance.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      availableCredit:
        description: "<br><b>Credit Card:</b> Amount that is available to spend on the credit card. It is usually the Total credit line- Running balance- pending charges. <br><b>Loan:</b> The unused portion of  line of credit, on a revolving loan (such as a home-equity line of credit).<br><b>Additional Details:</b><br><b>Note:</b> The available credit amount at the account-level can differ from the available credit field at the statement-level, as the information in the aggregated card account data provides more up-to-date information.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      currentBalance:
        description: "The balance in the account that is available at the beginning of the business day; it is equal to the ledger balance of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      isManual:
        description: "Indicates if an account is aggregated from a site or it is a manual account i.e. account information manually provided by the user.<br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "boolean"
      escrowBalance:
        description: "The amount a mortgage company holds to pay a consumer's non-mortgage related expenses like insurance and property taxes. <br><b>Additional Details:</b><br><b>Note:</b> The escrow balance field is only applicable to the mortgage account type.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      nextLevel:
        description: "The eligible next level of the rewards program.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      classification:
        description: "The classification of the account such as personal, corporate, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, creditCard, investment, reward, loan, insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* OTHER: Other account.<br>\n* PERSONAL: Personal account.<br>\n* CORPORATE: Corporate account.<br>\n* SMALL_BUSINESS: Small business account.<br>\n* TRUST: Trust account.<br>\n* ADD_ON_CARD: Add on card account.<br>\n* VIRTUAL_CARD: Virtual card account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "OTHER"
        - "PERSONAL"
        - "CORPORATE"
        - "SMALL_BUSINESS"
        - "TRUST"
        - "ADD_ON_CARD"
        - "VIRTUAL_CARD"
      loanPayoffAmount:
        description: "The amount to be paid to close the loan account, i.e., the total amount required to meet a borrower's obligation on a loan.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      interestRateType:
        description: "The type of the interest rate, for example, fixed or variable.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* FIXED: Fixed interest rate.<br>\n* VARIABLE: Variable intererest rate.<br>\n* UNKNOWN: Unknown<br>\n* OTHER: Other<br>"
        readOnly: true
        type: "string"
        enum:
        - "FIXED"
        - "VARIABLE"
        - "UNKNOWN"
        - "OTHER"
      loanPayByDate:
        description: "The date by which the payoff amount should be paid.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      faceAmount:
        description: "The amount stated on the face of a consumer's policy that will be paid in the event of his or her death or any other event as stated in the insurance policy. The face amount is also referred to as the sum insured or maturity value in India.<br><b>Note:</b> The face amount field is applicable only to life insurance.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      policyFromDate:
        description: "The date the insurance policy began.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      premiumPaymentTerm:
        description: "The number of years for which premium payments have to be made in a policy.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      policyTerm:
        description: "The duration for which the policy is valid or in effect. For example, one year, five years, etc.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      repaymentPlanType:
        description: "The type of repayment plan that the borrower prefers to repay the loan. <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* STANDARD: A 10-year payment plan where the borrower makes the same fixed payments every month.<br>\n* GRADUATED: A 10-year payment plan where the monthly payments start small and increase every two years.<br>\n* EXTENDED: A payment plan with low monthly payments and an extended repayment term of up to 25 years. The borrower can either choose fixed monthly payments or graduated payments that increase over time.<br>"
        readOnly: true
        type: "string"
        enum:
        - "STANDARD"
        - "GRADUATED"
        - "EXTENDED"
      availableBalance:
        description: "The balance in the account that is available for spending. For checking accounts with overdraft, available balance may include overdraft amount, if end site adds overdraft balance to available balance.<br><b>Applicable containers</b>: bank, investment<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br>GET accounts/{accountId}"
        readOnly: true
        $ref: "#/definitions/Money"
      accountStatus:
        description: "The status of the account that is updated by the consumer through an application or an API. Valid Values: AccountStatus<br><b>Additional Details:</b><br><b>ACTIVE:</b> All the added manual and aggregated accounts status will be made \"ACTIVE\" by default. <br><b>TO_BE_CLOSED:</b> If the aggregated accounts are not found or closed in the data provider site, Yodlee system marks the status as TO_BE_CLOSED<br><b>INACTIVE:</b> Users can update the status as INACTIVE to stop updating and to stop considering the account in other services<br><b>CLOSED:</b> Users can update the status as CLOSED, if the account is closed with the provider. <br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* ACTIVE: Active accounts.<br>\n* INACTIVE: Accounts that are made inactive by the users.<br>\n* TO_BE_CLOSED: Active accounts.<br>\n* CLOSED: Accounts that are found to be closed in the provider site and awaiting confirmation from users to get closed.<br>\n* DELETED: This status is applicable only in case of GET dataExtracts/userData.<br>"
        readOnly: true
        type: "string"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "TO_BE_CLOSED"
        - "CLOSED"
        - "DELETED"
      lifeInsuranceType:
        description: "Type of life insurance.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* OTHER: Other type of insurances.<br>\n* TERM_LIFE_INSURANCE: Term insurance, a type of life insurance, provides coverage for a certain period of time or years. If the insured dies over the policy tenure a death benefit (or sum assured) is paid out. No payout is made if the insured survives the tenure.<br>\n* UNIVERSAL_LIFE_INSURANCE: Universal life insurance (often shortened to UL) is a type of cash value life insurance, sold primarily in the United States of America. Under the terms of the policy, the excess of premium payments above the current cost of insurance is credited to the cash value of the policy.<br>\n* WHOLE_LIFE_INSURANCE: Life insurance policy which is guaranteed to remain in force for the insured's entire lifetime, provided required premiums are paid, or to the maturity date.<br>\n* VARIABLE_LIFE_INSURANCE: Variable life insurance is a permanent life insurance policy with an investment component.<br>\n* ULIP: ULIP is a life insurance product, which provides risk cover for the policy holder along with investment options to invest in any number of qualified investments such as stocks, bonds or mutual funds.<br>\n* ENDOWMENT: An endowment policy is a life insurance contract designed to pay a lump sum after a specific term (on its 'maturity') or on death.<br>"
        readOnly: true
        type: "string"
        enum:
        - "OTHER"
        - "TERM_LIFE_INSURANCE"
        - "UNIVERSAL_LIFE_INSURANCE"
        - "WHOLE_LIFE_INSURANCE"
        - "VARIABLE_LIFE_INSURANCE"
        - "ULIP"
        - "ENDOWMENT"
      premium:
        description: "The financial cost that the policyholder pays to the insurance company to obtain an insurance cover.The premium is paid as a lump sum or in installments during the duration of the policy.<br><b>Applicable containers</b>: insurance<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      aggregationSource:
        description: "The source through which the account(s) are added in the system.<br><b>Valid Values</b>: SYSTEM, USER<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      overDraftLimit:
        description: "The overdraft Limit for the account.<br><b>Note:</b> The overdraft Limit is provided only for AUS, INDIA, UK, NZ locales.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      nickname:
        description: "The nickname of the account as provided by the consumer to identify an account. The account nickname can be used instead of the account name.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      term:
        description: "The tenure for which the CD account is valid  or in case of loan, the number of years/months over which the loan amount  has to be repaid. <br><b>Additional Details:</b><br>  Bank: The Term field is only applicable for the account type CD.Loan: The period for which the loan agreement is in force. The period, before or at the end of which, the loan should either be repaid or renegotiated for another term.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      interestRate:
        format: "double"
        description: "<br><b>Bank:</b> The interest rate offered by a FI to its depositors on a bank account.<br><b>Loan:</b> Interest rate applied on the loan.<br><b>Additional Details:</b><br><b>Note:</b> The Interest Rate field is only applicable for the following account types: savings, checking, money market, and certificate of deposit.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      deathBenefit:
        description: "The death benefit amount on a life insurance policy and annuity. It is usually equal to the face amount of the policy, but sometimes can vary for a whole life and universal life insurance policies.<br><b>Note:</b> The death benefit amount field is applicable only to annuities and life insurance.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      address:
        description: "The home address of the real estate account. The address entity for home address consists of state, zip and city only<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/AccountAddress"
      cashValue:
        description: "The amount of cash value available in the consumer's life insurance policy account - except for term insurance policy - for withdrawals, loans, etc. This field is also used to capture the cash value on the home insurance policy.It is the standard that the insurance company generally prefer to reimburse the policyholder for his or her loss, i.e., the cash value is equal to the replacement cost minus depreciation. The cash value is also referred to as surrender value in India for life insurance policies.<br><b>Note:</b> The cash value field is applicable to all types of life insurance (except for term life) and home insurance.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      401kLoan:
        description: "The amount borrowed from the 401k account.<br><b>Note</b>: The 401k loan field is only applicable to the 401k account type.<br><b>Applicable containers</b>: investment<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      homeValue:
        description: "The home value of the real estate account.<br><br><b>Aggregated / Manual</b>: Manual<br><b>Applicable containers</b>: realEstate<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountNumber:
        description: "The account number as it appears on the site. (The POST accounts service response return this field as number)<br><b>Additional Details</b>:<b> Bank/ Loan/ Insurance/ Investment/Bill</b>:<br> The account number for the bank account as it appears at the site.<br><b>Credit Card</b>: The account number of the card account as it appears at the site,<br>i.e., the card number.The account number can be full or partial based on how it is displayed in the account summary page of the site.In most cases, the site does not display the full account number in the account summary page and additional navigation is required to aggregate it.<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>POST accounts</li></ul>"
        readOnly: true
        type: "string"
      createdDate:
        description: "The date on which the account is created in the Yodlee system.<br><b>Additional Details:</b> It is the date when the user links or aggregates the account(s) that are held with the provider to the Yodlee system.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      interestPaidYTD:
        description: "Interest paid from the start of the year to date.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      providerAccountId:
        format: "int64"
        description: "The primary key of the provider account resource.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "integer"
      collateral:
        description: "Property or possession offered to support a loan that can be seized on a default.<br><b>Applicable containers</b>: loan<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      runningBalance:
        description: "The amount that is currently owed on the credit card account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      dueDate:
        description: "The date on which the due amount has to be paid. <br><b>Additional Details:</b><br><b>Credit Card:</b> The monthly date by when the minimum payment is due to be paid on the credit card account. <br><b>Loan:</b> The date on or before which the due amount should be paid.<br><b>Note:</b> The due date at the account-level can differ from the due date field at the statement-level, as the information in the aggregated card account data provides an up-to-date information to the consumer.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      frequency:
        description: "The frequency of the billing cycle of the account in case of card and bills. The frequency in which premiums are paid in an insurance policy such as monthly, quarterly, and annually. The frequency in which due amounts are paid in a loan  account.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bill, creditCard, insurance, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* DAILY: Occurs every day.<br>\n* ONE_TIME: Occurs once.<br>\n* WEEKLY: Occurs once in a week.<br>\n* EVERY_2_WEEKS: Occurs once in two weeks.<br>\n* SEMI_MONTHLY: Occurs once in 15 days.<br>\n* MONTHLY: Occurs once in a month.<br>\n* QUARTERLY: Occurs once in three months.<br>\n* SEMI_ANNUALLY: Occurs once in six months.<br>\n* ANNUALLY: Occurs once in a year.<br>\n* EVERY_2_MONTHS: Occurs once in two months.<br>\n* OTHER: <br>\n* FIRST_DAY_MONTHLY: Occurs on first day of every month.<br>\n* LAST_DAY_MONTHLY: Occurs on last day of every month.<br>\n* EVERY_4_WEEKS: Occurs once in four weeks.<br>"
        readOnly: true
        type: "string"
        enum:
        - "DAILY"
        - "ONE_TIME"
        - "WEEKLY"
        - "EVERY_2_WEEKS"
        - "SEMI_MONTHLY"
        - "MONTHLY"
        - "QUARTERLY"
        - "SEMI_ANNUALLY"
        - "ANNUALLY"
        - "EVERY_2_MONTHS"
        - "OTHER"
        - "FIRST_DAY_MONTHLY"
        - "LAST_DAY_MONTHLY"
        - "EVERY_4_WEEKS"
      maturityAmount:
        description: "The maturity amount on the CD is the amount(principal and interest) paid on or after the maturity date.<br><b>Additional Details:</b> The Maturity Amount field is only applicable for the account type CD(Fixed Deposits).<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      associatedProviderAccountId:
        description: "The providerAccountIds that share the account with the primary providerAccountId that was created when the user had added the account for the first time.<br><b>Additional Details</b>: This attribute is returned in the response only if the account deduplication feature is enabled and the same account is mapped to more than one provider account IDs indicating the account is owned by more than one user, for example, joint accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: All Containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          format: "int64"
          type: "integer"
      isAsset:
        description: "The account to be considered as an asset or liability.<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "boolean"
      principalBalance:
        description: "The principal or loan balance is the outstanding balance on a loan account, excluding the interest and fees. The principal balance is the original borrowed amount plus any applicable loan fees, minus any principal payments.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      totalCashLimit:
        description: "The maximum amount that can be withdrawn from an ATM using the credit card. Credit cards issuer allow cardholders to withdraw cash using their cards - the cash limit is a percent of the overall credit limit.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      maturityDate:
        description: "The date when a certificate of deposit (CD/FD) matures or the final payment date of a loan at which point the principal amount (including pending interest) is due to be paid.<br><b>Additional Details:</b> The date when a certificate of deposit (CD) matures, i.e., the money in the CD can be withdrawn without paying an early withdrawal penalty.The final payment date of a loan, i.e., the principal amount (including pending interest) is due to be paid.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      minimumAmountDue:
        description: "The minimum amount due is the lowest amount of money that a consumer is required to pay each month.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, insurance, bill, loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      annualPercentageYield:
        format: "double"
        description: "Annual percentage yield (APY) is a normalized representation of an interest rate, based on a compounding period of one year. APY generally refers to the rate paid to a depositor by a financial institution on an account.<br><b>Applicable containers</b>: bank<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      accountType:
        description: "The type of account that is aggregated, i.e., savings, checking, credit card, charge, HELOC, etc. The account type is derived based on the attributes of the account. <br><b>Valid Values:</b><br><b>Aggregated Account Type</b><br><b>bank</b><ul><li>CHECKING</li><li>SAVINGS</li><li>CD</li><li>PPF</li><li>RECURRING_DEPOSIT</li><li>FSA</li><li>MONEY_MARKET</li><li>IRA</li><li>PREPAID</li></ul><b>creditCard</b><ul><li>OTHER</li><li>CREDIT</li><li>STORE</li><li>CHARGE</li><li>OTHER</li></ul><b>investment (SN 1.0)</b><ul><li>BROKERAGE_MARGIN</li><li>HSA</li><li>IRA</li><li>BROKERAGE_CASH</li><li>401K</li><li>403B</li><li>TRUST</li><li>ANNUITY</li><li>SIMPLE</li><li>CUSTODIAL</li><li>BROKERAGE_CASH_OPTION</li><li>BROKERAGE_MARGIN_OPTION</li><li>INDIVIDUAL</li><li>CORPORATE</li><li>JTTIC</li><li>JTWROS</li><li>COMMUNITY_PROPERTY</li><li>JOINT_BY_ENTIRETY</li><li>CONSERVATORSHIP</li><li>ROTH</li><li>ROTH_CONVERSION</li><li>ROLLOVER</li><li>EDUCATIONAL</li><li>529_PLAN</li><li>457_DEFERRED_COMPENSATION</li><li>401A</li><li>PSP</li><li>MPP</li><li>STOCK_BASKET</li><li>LIVING_TRUST</li><li>REVOCABLE_TRUST</li><li>IRREVOCABLE_TRUST</li><li>CHARITABLE_REMAINDER</li><li>CHARITABLE_LEAD</li><li>CHARITABLE_GIFT_ACCOUNT</li><li>SEP</li><li>UTMA</li><li>UGMA</li><li>ESOPP</li><li>ADMINISTRATOR</li><li>EXECUTOR</li><li>PARTNERSHIP</li><li>SOLE_PROPRIETORSHIP</li><li>CHURCH</li><li>INVESTMENT_CLUB</li><li>RESTRICTED_STOCK_AWARD</li><li>CMA</li><li>EMPLOYEE_STOCK_PURCHASE_PLAN</li><li>PERFORMANCE_PLAN</li><li>BROKERAGE_LINK_ACCOUNT</li><li>MONEY_MARKET</li><li>SUPER_ANNUATION</li><li>REGISTERED_RETIREMENT_SAVINGS_PLAN</li><li>SPOUSAL_RETIREMENT_SAVINGS_PLAN</li><li>DEFERRED_PROFIT_SHARING_PLAN</li><li>NON_REGISTERED_SAVINGS_PLAN</li><li>REGISTERED_EDUCATION_SAVINGS_PLAN</li><li>GROUP_RETIREMENT_SAVINGS_PLAN</li><li>LOCKED_IN_RETIREMENT_SAVINGS_PLAN</li><li>RESTRICTED_LOCKED_IN_SAVINGS_PLAN</li><li>LOCKED_IN_RETIREMENT_ACCOUNT</li><li>REGISTERED_PENSION_PLAN</li><li>TAX_FREE_SAVINGS_ACCOUNT</li><li>LIFE_INCOME_FUND</li><li>REGISTERED_RETIREMENT_INCOME_FUND</li><li>SPOUSAL_RETIREMENT_INCOME_FUND</li><li>LOCKED_IN_REGISTERED_INVESTMENT_FUND</li><li>PRESCRIBED_REGISTERED_RETIREMENT_INCOME_FUND</li><li>GUARANTEED_INVESTMENT_CERTIFICATES</li><li>REGISTERED_DISABILITY_SAVINGS_PLAN</li><li>OTHER</li></ul><b>investment (SN 2.0)</b><ul><li>BROKERAGE_CASH</li><li>BROKERAGE_MARGIN</li><li>INDIVIDUAL_RETIREMENT_ACCOUNT_IRA</li><li>EMPLOYEE_RETIREMENT_ACCOUNT_401K</li><li>EMPLOYEE_RETIREMENT_SAVINGS_PLAN_403B</li><li>TRUST</li><li>ANNUITY</li><li>SIMPLE_IRA</li><li>CUSTODIAL_ACCOUNT</li><li>BROKERAGE_CASH_OPTION</li><li>BROKERAGE_MARGIN_OPTION</li><li>INDIVIDUAL</li><li>CORPORATE_INVESTMENT_ACCOUNT</li><li>JOINT_TENANTS_TENANCY_IN_COMMON_JTIC</li><li>JOINT_TENANTS_WITH_RIGHTS_OF_SURVIVORSHIP_JTWROS</li><li>JOINT_TENANTS_COMMUNITY_PROPERTY</li><li>JOINT_TENANTS_TENANTS_BY_ENTIRETY</li><li>CONSERVATOR</li><li>ROTH_IRA</li><li>ROTH_CONVERSION</li><li>ROLLOVER_IRA</li><li>EDUCATIONAL</li><li>EDUCATIONAL_SAVINGS_PLAN_529</li><li>DEFERRED_COMPENSATION_PLAN_457</li><li>MONEY_PURCHASE_RETIREMENT_PLAN_401A</li><li>PROFIT_SHARING_PLAN</li><li>MONEY_PURCHASE_PLAN</li><li>STOCK_BASKET_ACCOUNT</li><li>LIVING_TRUST</li><li>REVOCABLE_TRUST</li><li>IRREVOCABLE_TRUST</li><li>CHARITABLE_REMAINDER_TRUST</li><li>CHARITABLE_LEAD_TRUST</li><li>CHARITABLE_GIFT_ACCOUNT</li><li>SEP_IRA</li><li>UNIFORM_TRANSFER_TO_MINORS_ACT_UTMA</li><li>UNIFORM_GIFT_TO_MINORS_ACT_UGMA</li><li>EMPLOYEE_STOCK_OWNERSHIP_PLAN_ESOP</li><li>ADMINISTRATOR</li><li>EXECUTOR</li><li>PARTNERSHIP</li><li>PROPRIETORSHIP</li><li>CHURCH_ACCOUNT</li><li>INVESTMENT_CLUB</li><li>RESTRICTED_STOCK_AWARD</li><li>CASH_MANAGEMENT_ACCOUNT</li><li>EMPLOYEE_STOCK_PURCHASE_PLAN_ESPP</li><li>PERFORMANCE_PLAN</li><li>BROKERAGE_LINK_ACCOUNT</li><li>MONEY_MARKET_ACCOUNT</li><li>SUPERANNUATION</li><li>REGISTERED_RETIREMENT_SAVINGS_PLAN_RRSP</li><li>SPOUSAL_RETIREMENT_SAVINGS_PLAN_SRSP</li><li>DEFERRED_PROFIT_SHARING_PLAN_DPSP</li><li>NON_REGISTERED_SAVINGS_PLAN_NRSP</li><li>REGISTERED_EDUCATION_SAVINGS_PLAN_RESP</li><li>GROUP_RETIREMENT_SAVINGS_PLAN_GRSP</li><li>LOCKED_IN_RETIREMENT_SAVINGS_PLAN_LRSP</li><li>RESTRICTED_LOCKED_IN_SAVINGS_PLAN_RLSP</li><li>LOCKED_IN_RETIREMENT_ACCOUNT_LIRA</li><li>REGISTERED_PENSION_PLAN_RPP</li><li>TAX_FREE_SAVINGS_ACCOUNT_TFSA</li><li>LIFE_INCOME_FUND_LIF</li><li>REGISTERED_RETIREMENT_INCOME_FUND_RIF</li><li>SPOUSAL_RETIREMENT_INCOME_FUND_SRIF</li><li>LOCKED_IN_REGISTERED_INVESTMENT_FUND_LRIF</li><li>PRESCRIBED_REGISTERED_RETIREMENT_INCOME_FUND_PRIF</li><li>GUARANTEED_INVESTMENT_CERTIFICATES_GIC</li><li>REGISTERED_DISABILITY_SAVINGS_PLAN_RDSP</li><li>DEFINED_CONTRIBUTION_PLAN</li><li>DEFINED_BENEFIT_PLAN</li><li>EMPLOYEE_STOCK_OPTION_PLAN</li><li>NONQUALIFIED_DEFERRED_COMPENSATION_PLAN_409A</li><li>KEOGH_PLAN</li><li>EMPLOYEE_RETIREMENT_ACCOUNT_ROTH_401K</li><li>DEFERRED_CONTINGENT_CAPITAL_PLAN_DCCP</li><li>EMPLOYEE_BENEFIT_PLAN</li><li>EMPLOYEE_SAVINGS_PLAN</li><li>HEALTH_SAVINGS_ACCOUNT_HSA</li><li>COVERDELL_EDUCATION_SAVINGS_ACCOUNT_ESA</li><li>TESTAMENTARY_TRUST</li><li>ESTATE</li><li>GRANTOR_RETAINED_ANNUITY_TRUST_GRAT</li><li>ADVISORY_ACCOUNT</li><li>NON_PROFIT_ORGANIZATION_501C</li><li>HEALTH_REIMBURSEMENT_ARRANGEMENT_HRA</li><li>INDIVIDUAL_SAVINGS_ACCOUNT_ISA</li><li>CASH_ISA</li><li>STOCKS_AND_SHARES_ISA</li><li>INNOVATIVE_FINANCE_ISA</li><li>JUNIOR_ISA</li><li>EMPLOYEES_PROVIDENT_FUND_ORGANIZATION_EPFO</li><li>PUBLIC_PROVIDENT_FUND_PPF</li><li>EMPLOYEES_PENSION_SCHEME_EPS</li><li>NATIONAL_PENSION_SYSTEM_NPS</li><li>INDEXED_ANNUITY</li><li>ANNUITIZED_ANNUITY</li><li>VARIABLE_ANNUITY</li><li>ROTH_403B</li><li>SPOUSAL_IRA</li><li>SPOUSAL_ROTH_IRA</li><li>SARSEP_IRA</li><li>SUBSTANTIALLY_EQUAL_PERIODIC_PAYMENTS_SEPP</li><li>OFFSHORE_TRUST</li><li>IRREVOCABLE_LIFE_INSURANCE_TRUST</li><li>INTERNATIONAL_TRUST</li><li>LIFE_INTEREST_TRUST</li><li>EMPLOYEE_BENEFIT_TRUST</li><li>PRECIOUS_METAL_ACCOUNT</li><li>INVESTMENT_LOAN_ACCOUNT</li><li>GRANTOR_RETAINED_INCOME_TRUST</li><li>PENSION_PLAN</li><li>OTHER</li></ul><b>bill</b><ul><li>TELEPHONE</li><li>UTILITY</li><li>CABLE</li><li>WIRELESS</li><li>BILLS</li></ul><b>loan</b><ul><li>MORTGAGE</li><li>INSTALLMENT_LOAN</li><li>PERSONAL_LOAN</li><li>HOME_EQUITY_LINE_OF_CREDIT</li><li>LINE_OF_CREDIT</li><li>AUTO_LOAN</li><li>STUDENT_LOAN</li><li>HOME_LOAN</li></ul><b>insurance</b><ul><li>AUTO_INSURANCE</li><li>HEALTH_INSURANCE</li><li>HOME_INSURANCE</li><li>LIFE_INSURANCE</li><li>ANNUITY</li><li>TRAVEL_INSURANCE</li><li>INSURANCE</li></ul><b>realEstate</b><ul> <li>REAL_ESTATE</li></ul><b>reward</b><ul><li>REWARD_POINTS</li></ul><b>Manual Account Type</b><br><b>bank</b><ul><li>CHECKING</li><li>SAVINGS</li><li>CD</li><li>PREPAID</li></ul><b>credit</b><ul>  <li>CREDIT</li></ul><b>loan</b><ul>  <li>PERSONAL_LOAN</li><li>HOME_LOAN</li></ul><b>bill</b><ul><li>BILLS</li></ul><b>insurance</b><ul><li>INSURANCE</li><li>ANNUITY</li></ul><b>investment</b><ul><li>BROKERAGE_CASH</li></ul><br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      originationDate:
        description: "The date on which the loan is disbursed.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      totalVestedBalance:
        description: "The total vested balance that appears in an investment account. Such as the 401k account or the equity award account that includes employer provided funding. <br><b>Note:</b> The amount an employee can claim after he or she leaves the organization. The total vested balance field is only applicable to the retirement related accounts such as 401k, equity awards, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      rewardBalance:
        description: "Information of different reward balances associated with the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/RewardBalance"
      sourceAccountStatus:
        description: "Indicates the status of the loan account. <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* IN_REPAYMENT: The borrower is currently repaying the student loan.<br>\n* DEFAULTED: The borrower has failed to repay the loan according to the terms of the promissory note.<br>\n* IN_SCHOOL: Indicates the borrower is still in school.<br>\n* IN_GRACE_PERIOD: The specified period (usually six months) between the date student graduates or drops below half time status and the date the loan repayment begins.<br>\n* DELINQUENCY: The borrower has failed to make loan repayments when due. Delinquency begins with the first missed loan repayment.<br>\n* DEFERMENT: A period when the student postpones the loan repayments.<br>"
        readOnly: true
        type: "string"
        enum:
        - "IN_REPAYMENT"
        - "DEFAULTED"
        - "IN_SCHOOL"
        - "IN_GRACE_PERIOD"
        - "DELINQUENCY"
        - "DEFERMENT"
      policyEffectiveDate:
        description: "The date on which the insurance policy coverage commences.<br><b>Applicable containers</b>: insurance<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      totalUnvestedBalance:
        description: "The total unvested balance that appears in an investment account.Such as the 401k account or the equity award account that includes employer provided funding. <br><b>Note:</b> The amount the employer contributes is generally subject to vesting and remain unvested for a specific period of time or until fulfillment of certain conditions. The total unvested balance field is only applicable to the retirement related accounts such as 401k, equity awards, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      annuityBalance:
        description: "Indicates the contract value of the annuity.<br><b>Note:</b> The annuity balance field is applicable only to annuities.<br><b>Applicable containers</b>: insurance, investment<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountName:
        description: "The account name as it appears at the site.<br>(The POST accounts service response return this field as name)<br><b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      totalCreditLimit:
        description: "The maximum amount of credit a financial institution extends to a consumer through a line of credit or a revolving loan like HELOC. <br><b>Additional Details:</b><br><b>Note:</b> The credit limit field is applicable only to LOC and HELOC account types.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      policyStatus:
        description: "The status of the policy.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* ACTIVE: Denotes the policy is active.<br>\n* INACTIVE: Denotes the policy is inactive.<br>\n* OTHER: The status could not be determined or it is other than active/inactive.<br>"
        readOnly: true
        type: "string"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "OTHER"
      shortBalance:
        description: "The sum of the current market values of short positions held in a brokerage account.<br><b>Note:</b> The short balance balance field is only applicable to brokerage related accounts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      lender:
        description: "The financial institution that provides the loan.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastEmployeeContributionAmount:
        description: "Indicates the last amount contributed by the employee to the 401k account.<br><b>Note:</b> The last employee contribution amount field is derived from the transaction data and not aggregated from the FI site. The field is only applicable to the 401k account type.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      providerId:
        description: "Identifier of the provider site. The primary key of provider resource. <br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastPaymentDate:
        description: "The date on which the payment for the previous or current billing cycle is done.<br><b>Additional Details:</b> If the payment is already done for the current billing cycle, then the field indicates the payment date of the current billing cycle. If payment is yet to be done for the current billing cycle, then the field indicates the date on which the payment was made for any of the previous billing cycles. The last payment date at the account-level can differ from the last payment date at the statement-level, as the information in the aggregated card account data provides an up-to-date information to the consumer.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      primaryRewardUnit:
        description: "Primary reward unit for this reward program. E.g. miles, points, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastPaymentAmount:
        description: "Last/Previous payment amount on the account.  Portion of the principal and interest paid on previous month or period to satisfy a loan.<br><b>Additional Details:</b> If the payment is already done for the current billing cycle, then the field indicates the payment of the current billing cycle. If payment is yet to be done for the current billing cycle, then the field indicates the payment that was made for any of the previous billing cycles.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      remainingBalance:
        description: "The sum of the future payments due to be paid to the insurance company during a policy year. It is the policy rate minus the payments made till date.<br><b>Note:</b> The remaining balance field is applicable only to auto insurance and home insurance.<br><b>Applicable containers</b>: insurance<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      userClassification:
        description: "<b>Applicable containers</b>: reward, bank, creditCard, investment, loan, insurance, realEstate, bill, otherLiabilities<br><b>Endpoints</b>:<ul><li>GET accounts </li><li>GET accounts/{accountId}</li><li>POST accounts</ul><b>Applicable Values</b><br>\n* BUSINESS: Indicates a small business account.<br>\n* PERSONAL: Indicates a personal account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "BUSINESS"
        - "PERSONAL"
      bankTransferCode:
        description: "Bank and branch identification information.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment, loan<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/BankTransferCode"
      expirationDate:
        description: "The date on which the insurance policy expires or matures.<br><b>Additional Details:</b> The due date at the account-level can differ from the due date field at the statement-level, as the information in the aggregated card account data provides an up-to-date information to the consumer.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      coverage:
        description: "The coverage-related details of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Coverage"
      loanPayOffDetails:
        description: "The loan payoff details such as date by which the payoff amount should be paid, loan payoff amount, and the outstanding balance on the loan account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/LoanPayoffDetails"
      cashAPR:
        format: "double"
        description: "The APR applicable to cash withdrawals on the credit card account.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: creditCard<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      displayedName:
        description: "The name or identification of the account owner, as it appears at the FI site. <br><b>Note:</b> The account holder name can be full or partial based on how it is displayed in the account summary page of the FI site. In most cases, the FI site does not display the full account holder name in the account summary page.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan, bill, reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      amountDue:
        description: "The amount due to be paid for the account.<br><b>Additional Details:</b><b>Credit Card:</b> The total amount due for the purchase of goods or services that must be paid by the due date.<br><b>Loan:</b> The amount due to be paid on the due date.<br><b>Note:</b> The amount due at the account-level can differ from the amount due at the statement-level, as the information in the aggregated card account data provides more up-to-date information.<br><b>Applicable containers</b>: creditCard, loan, insurance, bill<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      currentLevel:
        description: "Current level of the reward program the user is associated with. E.g. Silver, Jade etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      originalLoanAmount:
        description: "The amount of loan that the lender has provided.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      policyToDate:
        description: "The date to which the policy exists.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      CONTAINER:
        description: "The type of service. E.g., Bank, Credit Card, Investment, Insurance, etc.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: All containers<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* bank: Applicable for Aggregated and Manual<br>\n* creditCard: Applicable for Aggregated and Manual<br>\n* investment: Applicable for Aggregated and Manual<br>\n* insurance: Applicable for Aggregated and Manual<br>\n* loan: Applicable for Aggregated and Manual<br>\n* reward: Applicable for Aggregated and Manual<br>\n* bill: Applicable for Aggregated and Manual<br>\n* realEstate: Applicable for Manual<br>\n* otherAssets: Applicable for Manual<br>\n* otherLiabilities: Applicable for Manual"
        readOnly: true
        type: "string"
        enum:
        - "bank"
        - "creditCard"
        - "investment"
        - "insurance"
        - "loan"
        - "reward"
        - "bill"
        - "realEstate"
        - "otherAssets"
        - "otherLiabilities"
      lastEmployeeContributionDate:
        description: "The date on which the last employee contribution was made to the 401k account.<br><b>Note:</b> The last employee contribution date field is derived from the transaction data and not aggregated from the FI site. The field is only applicable to the 401k account type.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      lastPayment:
        description: "The last payment made for the account.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bill<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      recurringPayment:
        description: "The monthly or periodic payment on a loan that is recurring in nature. The recurring payment amount is usually same as the amount due, unless late fees or other charges are added eventually changing the amount due for a particular month.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
  DocumentDownload:
    type: "object"
    title: "DocumentDownload"
    properties:
      docContent:
        description: "Contents of the document in Base64 format.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
      id:
        description: "The document's primary key and unique identifier.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, bills, insurance<br>"
        readOnly: true
        type: "string"
  HoldingAssetClassificationListResponse:
    type: "object"
    title: "HoldingAssetClassificationListResponse"
    properties:
      assetClassificationList:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AssetClassificationList"
  UpdateVerificationRequest:
    type: "object"
    title: "UpdateVerificationRequest"
    properties:
      verification:
        $ref: "#/definitions/UpdateVerification"
  YodleeError:
    type: "object"
    title: "YodleeError"
    properties:
      errorMessage:
        type: "string"
      errorCode:
        type: "string"
      referenceCode:
        type: "string"
  DetailCategory:
    type: "object"
    title: "DetailCategory"
    properties:
      name:
        description: "The name of the detail category<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "string"
      id:
        format: "int64"
        description: "The unique identifier of the detail category.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
  AccessTokens:
    type: "object"
    title: "AccessTokens"
    properties:
      appId:
        description: "The identifier of the application for which the access token is generated.<br><br><b>Endpoints</b>:<ul><li>GET user/accessTokens</li></ul>"
        type: "string"
      value:
        description: "Access token value used to invoke the widgets/apps.<br><br><b>Endpoints</b>:<ul><li>GET user/accessTokens</li></ul>"
        type: "string"
      url:
        description: "Base URL using which the application is accessed.<br><br><b>Endpoints</b>:<ul><li>GET user/accessTokens</li></ul>"
        type: "string"
  ApiKeyOutput:
    type: "object"
    title: "ApiKeyOutput"
    properties:
      expiresIn:
        format: "int64"
        description: "Time in seconds after which the JWT token created for users expires.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>"
        type: "integer"
      createdDate:
        description: "The date on which the apiKey was created for the customer.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>"
        type: "string"
      publicKey:
        description: "Public key uploaded by the customer while generating ApiKey.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>"
        type: "string"
      key:
        description: "ApiKey or the issuer key used to generate the JWT token for authentication.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>"
        type: "string"
  DocumentResponse:
    type: "object"
    title: "DocumentResponse"
    properties:
      document:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Document"
  UserAccessTokensResponse:
    type: "object"
    title: "UserAccessTokensResponse"
    properties:
      user:
        readOnly: true
        $ref: "#/definitions/UserAccessToken"
  LoanPayoffDetails:
    type: "object"
    title: "LoanPayoffDetails"
    properties:
      payByDate:
        description: "The date by which the payoff amount should be paid.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      payoffAmount:
        description: "The loan payoff amount.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      outstandingBalance:
        description: "The outstanding balance on the loan account. The outstanding balance amount may differ from the payoff amount. It is usually the sum of outstanding principal, unpaid interest, and fees, if any.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
  HoldingSecuritiesResponse:
    type: "object"
    title: "HoldingSecuritiesResponse"
    properties:
      holding:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/SecurityHolding"
  TransactionCategorizationRuleInfo:
    type: "object"
    title: "TransactionCategorizationRuleInfo"
    properties:
      ruleClause:
        type: "array"
        items:
          $ref: "#/definitions/FieldOperation"
      source:
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      priority:
        format: "int32"
        type: "integer"
      categoryId:
        format: "int32"
        type: "integer"
  Capability:
    type: "object"
    title: "Capability"
    properties:
      container:
        readOnly: true
        type: "array"
        items:
          type: "string"
          enum:
          - "bank"
          - "creditCard"
          - "investment"
          - "insurance"
          - "loan"
          - "reward"
          - "bill"
          - "realEstate"
          - "otherAssets"
          - "otherLiabilities"
      name:
        readOnly: true
        type: "string"
  Coordinates:
    type: "object"
    title: "Coordinates"
    properties:
      latitude:
        format: "double"
        description: "Latitude of the merchant<br><br><b>Applicable containers</b>: bank,creditCard,loan<br>"
        type: "number"
      longitude:
        format: "double"
        description: "Longitude of the merchant<br><br><b>Applicable containers</b>: bank,creditCard,loan<br>"
        type: "number"
  DataExtractsEventLinks:
    type: "object"
    title: "DataExtractsEventLinks"
    properties:
      methodType:
        readOnly: true
        type: "string"
      rel:
        readOnly: true
        type: "string"
      href:
        readOnly: true
        type: "string"
  TransactionCategorizationRuleResponse:
    type: "object"
    title: "TransactionCategorizationRuleResponse"
    properties:
      txnRules:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/TransactionCategorizationRule"
  ProviderAccountDetailResponse:
    type: "object"
    title: "ProviderAccountDetailResponse"
    properties:
      providerAccount:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/ProviderAccountDetail"
  HistoricalBalance:
    type: "object"
    title: "HistoricalBalance"
    properties:
      date:
        description: "Date for which the account balance was provided.  This balance could be a carryforward, calculated or a scraped balance.<br><b>Additional Details</b>:<br><b>Scraped</b>: Balance shown in the provider site. This balance gets stored in Yodlee system during system/user account updates.<br><b>CarryForward</b>: Balance carried forward from the scraped balance to the days for which the balance was not available in the system. Balance may not be available for all the days in the system due to MFA information required, error in the site, credential changes, etc.<br><b>calculated</b>: Balances that gets calculated for the days that are prior to the account added date.  <br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li><li>GET derived/networth</li></ul>"
        readOnly: true
        type: "string"
      isAsset:
        description: "Indicates whether the balance is an asset or liability.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul>"
        readOnly: true
        type: "boolean"
      balance:
        description: "Balance amount of the account.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      asOfDate:
        description: "Date as of when the balance is last updated due to the auto account updates or user triggered updates. This balance will be carry forward for the days where there is no balance available in the system. <br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul>"
        readOnly: true
        type: "string"
      dataSourceType:
        description: "The source of balance information.<br><br><b>Aggregated / Manual</b>: Both <br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul><b>Applicable Values</b><br>\n* S: Scraped balance from the provider site.<br>\n* C: Calculated balance by the system.<br>\n* CF: Last available balance that was carry forwarded for the days when account was not updated.<br>"
        readOnly: true
        type: "string"
        enum:
        - "S"
        - "C"
        - "CF"
  UserRequestPreferences:
    type: "object"
    title: "UserRequestPreferences"
    properties:
      currency:
        description: "The currency of the user. This currency will be respected while providing the response for derived API services.<br><b>Applicable Values</b><br>\n* AUD: Australia Dollar<br>\n* BRL: Brazil Real<br>\n* CAD: Canada Dollar<br>\n* EUR: Euro Member Countries<br>\n* GBP: United Kingdom Pound<br>\n* HKD: Hong Kong Dollar<br>\n* IDR: Indonesia Rupiah<br>\n* INR: India Rupee<br>\n* JPY: Japan Yen<br>\n* NZD: New Zealand Dollar<br>\n* SGD: Singapore Dollar<br>\n* USD: United States Dollar<br>\n* ZAR: South Africa Rand<br>\n* CNY: China Yuan Renminbi<br>\n* VND: Viet Nam Dong<br>"
        type: "string"
        enum:
        - "AUD"
        - "BRL"
        - "CAD"
        - "EUR"
        - "GBP"
        - "HKD"
        - "IDR"
        - "INR"
        - "JPY"
        - "NZD"
        - "SGD"
        - "USD"
        - "ZAR"
        - "CNY"
        - "VND"
      locale:
        description: "The locale of the user. This locale will be considered for localization features like providing the provider information in the supported locale or providing category names in the transaction related services.<br><b>Applicable Values</b><br>\n* en_US: English - United States of America<br>\n* en_ES: Spanish - Spain<br>\n* fr_CA: French - Canada<br>\n* zh_CN: Chinese - China<br>"
        type: "string"
        enum:
        - "en_US"
        - "en_ES"
        - "fr_CA"
        - "zh_CN"
  RewardBalance:
    type: "object"
    title: "RewardBalance"
    properties:
      expiryDate:
        description: "The date on which the balance expires.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      balanceToReward:
        description: "The balance required to qualify for a reward such as retaining membership, business reward, etc.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      balanceType:
        description: "The type of reward balance.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* EXPIRING_BALANCE: Reward Balance that will be expired.<br>\n* BALANCE_TO_LEVEL: The balance required to reach a reward level.<br>\n* BALANCE_TO_REWARD: The balance required to qualify for a reward.<br>\n* BALANCE: Reward Balance.<br>\n* TOTAL_BALANCE: Total reward balance available.<br>"
        readOnly: true
        type: "string"
        enum:
        - "EXPIRING_BALANCE"
        - "BALANCE_TO_LEVEL"
        - "BALANCE_TO_REWARD"
        - "BALANCE"
        - "TOTAL_BALANCE"
      balance:
        format: "double"
        description: "The actual reward balance.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "number"
      description:
        description: "The description for the reward balance as available at provider source.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      balanceToLevel:
        description: "The balance required to reach a reward level.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      units:
        description: "Unit of reward balance - miles, points, segments, dollars, credits.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: reward<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
  ProviderAccountDetail:
    type: "object"
    title: "ProviderAccountDetail"
    properties:
      loginForm:
        description: "This entity gets returned in the response for only MFA based provider accounts during the add/update account polling process. This indicates that the MFA information is expected from the user to complete the process. This represents the structure of MFA form that is displayed to the user in the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/LoginForm"
      preferences:
        description: "User preference values for Auto-Refresh and DataExtracts Notification<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/ProviderAccountPreferences"
      createdDate:
        description: "The date on when the provider account is created in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      aggregationSource:
        description: "The source through which the providerAccount is added in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      providerId:
        format: "int64"
        description: "Unique identifier for the provider resource. This denotes the provider for which the provider account id is generated by the user.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      requestId:
        description: "Unique id generated to indicate the request.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      isManual:
        description: "Indicates whether account is a manual or aggregated provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "boolean"
      id:
        format: "int64"
        description: "Unique identifier for the provider account resource. This is created during account addition.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      status:
        description: "The status of last update attempted for the account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* LOGIN_IN_PROGRESS: Login to provider site is in progress.<br>\n* USER_INPUT_REQUIRED: Additional authentication information is needed from the user.<br>\n* IN_PROGRESS: Login is successful and data aggregation is in progress.<br>\n* PARTIAL_SUCCESS: Data is partially retrieved.<br>\n* SUCCESS: Data is retrieved successfully.<br>\n* FAILED: Additional authentication information is needed from the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "LOGIN_IN_PROGRESS"
        - "USER_INPUT_REQUIRED"
        - "IN_PROGRESS"
        - "PARTIAL_SUCCESS"
        - "SUCCESS"
        - "FAILED"
  UserDetailResponse:
    type: "object"
    title: "UserDetailResponse"
    properties:
      user:
        readOnly: true
        $ref: "#/definitions/UserDetail"
  StatementResponse:
    type: "object"
    title: "StatementResponse"
    properties:
      statement:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Statement"
  DerivedNetworthHistoricalBalance:
    type: "object"
    title: "DerivedNetworthHistoricalBalance"
    properties:
      date:
        description: "Date for which the account balance was provided.  This balance could be a carryforward, calculated or a scraped balance. AdditIonal Details: scraped: Balance shown in the provider site. This balance gets stored in Yodlee system during system/user account updates. carryForward : Balance carried forward from the scraped balance to the days for which the balance was not available in the system. Balance may not be available for all the days in the system due to MFA information required, error in the site, credential changes, etc. calculated: Balances that gets calculated for the days that are prior to the account added date.<br><br><b>Account Type</b>: Aggregated and Manual<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li><li>GET derived/networth</li></ul>"
        readOnly: true
        type: "string"
      isAsset:
        description: "Indicates whether the balance is an asset or liability.<br><br><b>Account Type</b>: Aggregated and Manual<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul>"
        readOnly: true
        type: "boolean"
      balance:
        description: "Balance amount of the account.<br><br><b>Account Type</b>: Aggregated and Manual<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      asOfDate:
        description: "Date as of when the balance is last  updated due to the auto account updates or user triggered updates. This balance will be carry forward for the days where there is no balance available in the system. <br><br><b>Account Type</b>: Aggregated and Manual<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul>"
        readOnly: true
        type: "string"
      dataSourceType:
        description: "The source of balance information.<br><br><b>Account Type</b>: Aggregated and Manual<br><b>Applicable containers</b>: bank, creditCard, investment, insurance, realEstate, loan<br><b>Endpoints</b>:<ul><li>GET accounts/historicalBalances</li></ul><b>Applicable Values</b><br>\n* S: Scraped balance from the provider site.<br>\n* C: Calculated balance by the system.<br>\n* CF: Last available balance that was carry forwarded for the days when account was not updated.<br>"
        readOnly: true
        type: "string"
        enum:
        - "S"
        - "C"
        - "CF"
  UpdatedProviderAccountResponse:
    type: "object"
    title: "UpdatedProviderAccountResponse"
    properties:
      providerAccount:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/UpdatedProviderAccount"
  DerivedTransactionsSummary:
    type: "object"
    title: "DerivedTransactionsSummary"
    properties:
      categoryType:
        description: "Type of categories provided by transactions/categories service.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br><b>Applicable Values</b><br>\n* TRANSFER: The transaction category belongs to a transfer category type.<br>\n* DEFERRED_COMPENSATION: The transaction category belongs to deferred compensation type.<br>\n* UNCATEGORIZE: The transaction does not seem to be categorized.<br>\n* INCOME: The transaction category belongs to an income type.<br>\n* EXPENSE: The transaction category belongs to an expense type.<br>"
        readOnly: true
        type: "string"
        enum:
        - "TRANSFER"
        - "DEFERRED_COMPENSATION"
        - "UNCATEGORIZE"
        - "INCOME"
        - "EXPENSE"
      categorySummary:
        description: "Summary of transaction amouts at category level.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedCategorySummary"
      creditTotal:
        description: "The total of credit transactions for the category type.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      links:
        description: "Link of the API services that corresponds to the value derivation.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/DerivedTransactionsLinks"
      debitTotal:
        description: "The total of debit transactions for the category type.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  DerivedCategorySummary:
    type: "object"
    title: "DerivedCategorySummary"
    properties:
      creditTotal:
        description: "The total of credit transactions for the category.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      details:
        description: "Credit and debit summary per date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedCategorySummaryDetails"
      links:
        description: "Link of the API services that corresponds to the value derivation.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/DerivedTransactionsLinks"
      categoryName:
        description: "The name of the category.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        type: "string"
      categoryId:
        format: "int64"
        description: "Id of the category. This information is provided by transactions/categories service.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        type: "integer"
      debitTotal:
        description: "The total of debit transactions for the category.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  BankTransferCode:
    type: "object"
    title: "BankTransferCode"
    properties:
      id:
        description: "The FI's branch identification number.Additional Details: The routing number of the bank account in the United States. For non-United States accounts, it is the IFSC code (India), BSB number (Australia), and sort code (United Kingdom). <br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      type:
        description: "The bank transfer code type varies depending on the region of the account origination. <br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* BSB: BSB is a Bank-State-Branch number used to identify the branch in Australia and is required for performing transfers.<br>\n* IFSC: IFSC is Indian Financial System Code. It is an alphanumeric code that is used to identify the particular branch in India and is required for electronic funds settlement.<br>\n* ROUTING_NUMBER: Bank routing number or routing transit number (RTN) is a nine digit number used in US to identify financial institution in a transaction. Most common transaction types where routing numbers are used are ACH and wire transfers.<br>\n* SORT_CODE: The sort code is a six-digit number used in UK to identify both the bank and the branch where the account is held.<br>"
        readOnly: true
        type: "string"
        enum:
        - "BSB"
        - "IFSC"
        - "ROUTING_NUMBER"
        - "SORT_CODE"
  UpdateCobrandNotificationEventRequest:
    type: "object"
    title: "UpdateCobrandNotificationEventRequest"
    properties:
      event:
        $ref: "#/definitions/UpdateCobrandNotificationEvent"
  CobrandPublicKeyResponse:
    type: "object"
    title: "CobrandPublicKeyResponse"
    properties:
      keyAlias:
        description: "The key name used for encryption.<br><br><b>Endpoints</b>:<ul><li>GET cobrand/publicKey</li></ul>"
        readOnly: true
        type: "string"
      keyAsPemString:
        description: "Public key that the customer should be using to encrypt the credentials and answers before sending to the add & update providerAccounts APIs.<br><br><b>Endpoints</b>:<ul><li>GET cobrand/publicKey</li></ul>"
        readOnly: true
        type: "string"
  AutoRefresh:
    type: "object"
    title: "AutoRefresh"
    properties:
      additionalStatus:
        description: "Indicates the reason for the status.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* SCHEDULED: Auto refresh is scheduled .<br>\n* TEMP_ERROR: Auto refresh is temporarily disabled due to site or technical issues.<br>\n* SITE_BLOCKING: Auto refresh is disabled due to site blocking .<br>\n* SITE_NOT_SUPPORTED: Auto refresh is disabled because the site no longer supports updates.<br>\n* REAL_TIME_MFA_REQUIRED: Auto refresh is disabled because the site requires real time MFA information to get account updates.<br>\n* USER_ACTION_REQUIRED: Auto refresh is disabled as the user needs to take action at site or update the credentials or answers for security questions.<br>\n* UNSUBSCRIBED: Auto refresh is disabled because:<br><ul><li>The customer has unsubscribed to auto refreshes.</li><li>Yodlee has disabled auto refreshes for the customer due to site or technical issues.</li><li>Auto refresh no longer subscribed at the provider account level.</li><li>The site has been disabled for auto refreshes.</li><li>The account is inactive or closed.</li></ul><br>\n* MANUAL_ACCOUNT: Auto refresh is disabled because the account is a manual account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SCHEDULED"
        - "TEMP_ERROR"
        - "SITE_BLOCKING"
        - "SITE_NOT_SUPPORTED"
        - "REAL_TIME_MFA_REQUIRED"
        - "USER_ACTION_REQUIRED"
        - "UNSUBSCRIBED"
        - "MANUAL_ACCOUNT"
      asOfDate:
        description: "Date on which the auto refresh status is determined.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      status:
        description: "Indicates whether auto refresh is enabled or disabled.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* ENABLED: Auto refresh is enabled.<br>\n* DISABLED: Auto refresh is disabled.<br>"
        readOnly: true
        type: "string"
        enum:
        - "ENABLED"
        - "DISABLED"
  Cobrand:
    type: "object"
    title: "Cobrand"
    properties:
      cobrandLogin:
        type: "string"
      cobrandPassword:
        type: "string"
      locale:
        description: "The customer's locale that will be considered for the localization functionality.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>"
        type: "string"
  TransactionCategorizationRuleRequest:
    type: "object"
    title: "TransactionCategorizationRuleRequest"
    properties:
      rule:
        $ref: "#/definitions/TransactionCategorizationRuleInfo"
  DataExtractsUser:
    type: "object"
    title: "DataExtractsUser"
    properties:
      loginName:
        readOnly: true
        type: "string"
  CobrandLoginRequest:
    type: "object"
    title: "CobrandLoginRequest"
    properties:
      cobrand:
        $ref: "#/definitions/Cobrand"
  UpdateAccountRequest:
    type: "object"
    title: "UpdateAccountRequest"
    properties:
      account:
        $ref: "#/definitions/UpdateAccountInfo"
  DerivedNetworthResponse:
    type: "object"
    title: "DerivedNetworthResponse"
    properties:
      networth:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedNetworth"
  VerificationResponse:
    type: "object"
    title: "VerificationResponse"
    properties:
      verification:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Verification"
  Description:
    type: "object"
    title: "Description"
    properties:
      original:
        description: "Original transaction description as it appears at the FI site.<br><br><b>Applicable containers</b>: bill, creditCard, insurance, loan<br>"
        readOnly: true
        type: "string"
      simple:
        description: "The transaction description that appears at the FI site may not be self-explanatory, i.e., the source, purpose of the transaction may not be evident. Yodlee attempts to simplify and make the transaction meaningful to the consumer, and this simplified transaction description is provided in the simple description field.Note: The simple description field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>: bill, creditCard, insurance, loan<br>"
        readOnly: true
        type: "string"
      consumer:
        description: "The description of the transaction as defined by the consumer. The consumer can define or provide more details of the transaction in this field.<br><br><b>Applicable containers</b>: bill, creditCard, insurance, loan<br>"
        type: "string"
  ProviderDetailResponse:
    type: "object"
    title: "ProviderDetailResponse"
    properties:
      provider:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/ProviderDetail"
  UpdateTransaction:
    type: "object"
    title: "UpdateTransaction"
    required:
    - "categoryId"
    - "categorySource"
    - "container"
    properties:
      categorySource:
        description: "\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      container:
        description: "\n* bank: Applicable for Aggregated and Manual<br>\n* creditCard: Applicable for Aggregated and Manual<br>\n* investment: Applicable for Aggregated and Manual<br>\n* insurance: Applicable for Aggregated and Manual<br>\n* loan: Applicable for Aggregated and Manual<br>\n* reward: Applicable for Aggregated and Manual<br>\n* bill: Applicable for Aggregated and Manual<br>\n* realEstate: Applicable for Manual<br>\n* otherAssets: Applicable for Manual<br>\n* otherLiabilities: Applicable for Manual"
        type: "string"
        enum:
        - "bank"
        - "creditCard"
        - "investment"
        - "insurance"
        - "loan"
        - "reward"
        - "bill"
        - "realEstate"
        - "otherAssets"
        - "otherLiabilities"
      description:
        $ref: "#/definitions/Description"
      memo:
        type: "string"
      categoryId:
        format: "int64"
        type: "integer"
  Attribute:
    type: "object"
    title: "Attribute"
    properties:
      container:
        description: "Containers for which the attributes are supported.<br><br><b>Endpoints</b>:<ul><li>GET providers</li><li>GET providers/{providerId}</li></ul>"
        type: "array"
        items:
          type: "string"
          enum:
          - "bank"
          - "creditCard"
          - "investment"
          - "insurance"
          - "loan"
          - "reward"
          - "bill"
          - "realEstate"
          - "otherAssets"
          - "otherLiabilities"
      containerAttributes:
        readOnly: true
        $ref: "#/definitions/ContainerAttributes"
      name:
        description: "Attributes that are supported for a dataset.<br><br><b>Endpoints</b>:<ul><li>GET providers</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
  TransactionCategory:
    type: "object"
    title: "TransactionCategory"
    properties:
      highLevelCategoryName:
        description: "The name of the high level category. A group of similar transaction categories are clubbed together to form a high-level category.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "string"
      highLevelCategoryId:
        format: "int64"
        description: "The unique identifier of the high level category.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
      detailCategory:
        description: "Entity that provides detail category attributes<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DetailCategory"
      id:
        format: "int64"
        description: "Unique identifier of the category.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
      source:
        description: "Source used to identify whether the transaction category is user defined category or system created category.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br><b>Applicable Values</b><br>\n* SYSTEM: The category assigned to the transaction is a system defined category.<br>\n* USER: The category assigned to the transaction is a user defined category.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      category:
        description: "The name of the category.<br><b>Note</b>: Transaction categorization is one of the core features offered by Yodlee and the categories are assigned to the transactions by the system. Transactions can be clubbed together by the category that is assigned to them.  <br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "string"
      classification:
        description: "Category Classification.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br><b>Applicable Values</b><br>"
        readOnly: true
        type: "string"
        enum:
        - "PERSONAL"
        - "SMALL_BUSINESS"
      type:
        description: "Transaction categories and high-level categories are further mapped to five transaction category types. Customers, based on their needs can either use the transaction categories, the high-level categories, or the transaction category types. <br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br><b>Applicable Values</b><br>\n* TRANSFER: The transaction category belongs to a transfer category type.<br>\n* DEFERRED_COMPENSATION: The transaction category belongs to deferred compensation type.<br>\n* UNCATEGORIZE: The transaction does not seem to be categorized.<br>\n* INCOME: The transaction category belongs to an income type.<br>\n* EXPENSE: The transaction category belongs to an expense type.<br>"
        readOnly: true
        type: "string"
        enum:
        - "TRANSFER"
        - "DEFERRED_COMPENSATION"
        - "UNCATEGORIZE"
        - "INCOME"
        - "EXPENSE"
  Providers:
    type: "object"
    title: "Providers"
    properties:
      languageISOCode:
        description: "The language in which the provider details are provided. For example, a site supports two languages English and French. English being the primary language, the provider response will be provided in French depending on the user's locale. The language follows the two letter ISO code.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      forgetPasswordUrl:
        description: "The forget password URL of the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      favicon:
        description: "Favicon link of the provider.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      countryISOCode:
        description: "Country to which the provider belongs.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      isAddedByUser:
        description: "Indicates that the site has been added by the user at least once.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      PRIORITY:
        description: "Indicates the priority for which the service is invoked.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul><b>Applicable Values</b><br>\n* POPULAR: Popular providers.<br>\n* SUGGESTED: Suggested providers for the user.<br>\n* COBRAND: Yodlee supported providers.<br>\n* SEARCH: Providers matching the search text.<br>"
        readOnly: true
        type: "string"
        enum:
        - "POPULAR"
        - "SUGGESTED"
        - "COBRAND"
        - "SEARCH"
      loginHelp:
        description: "Help text to guide the user to choose the correct provider site.<br><br><b>Endpoints</b>:<ul><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      primaryLanguageISOCode:
        description: "The primary language of the site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      help:
        description: "Text to guide user through linking an account that belongs to the site<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      baseUrl:
        description: "The base URL of the provider's site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      capability:
        description: "Capability of the site<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Capability"
      loginUrl:
        description: "The login URL of the provider's site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      isAutoRefreshEnabled:
        description: "Indicates if a provider site is auto-refreshed.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "boolean"
      name:
        description: "The name of a provider site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      logo:
        description: "The logo link of the provider institution. The link will return the logo in the PNG format.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      id:
        format: "int64"
        description: "Unique identifier for the provider site(e.g., financial institution sites, biller sites, lender sites, etc.).<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "integer"
      lastModified:
        description: "Determines when the provider information was updated by Yodlee. If the customer caches the data, the cache is recommended to be refreshed based on this field.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      authType:
        description: "The authentication type enabled at the provider site. <br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul><b>Applicable Values</b><br>\n* OAUTH: The site that supports open authentication.<br>\n* CREDENTIALS: The authentication system of the site expects only credentials like userId, password, customer id, etc.<br>\n* MFA_CREDENTIALS: Multifactor authentication is implemented at the provider site.<br>"
        readOnly: true
        type: "string"
        enum:
        - "OAUTH"
        - "CREDENTIALS"
        - "MFA_CREDENTIALS"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/ProvidersDataset"
      status:
        description: "Determines if the provider is supported for the cobrand (customer), is in the beta stage, etc. <br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
        enum:
        - "Supported"
        - "Beta"
  UpdateUserRegistration:
    type: "object"
    title: "UpdateUserRegistration"
    properties:
      preferences:
        $ref: "#/definitions/UserRequestPreferences"
      address:
        $ref: "#/definitions/UserAddress"
      name:
        $ref: "#/definitions/Name"
      email:
        type: "string"
      segmentName:
        type: "string"
  Profile:
    type: "object"
    title: "Profile"
    properties:
      identifier:
        description: "Identifiers available in the profile page of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Identifier"
      address:
        description: "Address available in the profile page of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountAddress"
      phoneNumber:
        description: "Phone number available in the profile page of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/PhoneNumber"
      gender:
        description: "Gender of the provider account holder.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "string"
      name:
        description: "Name of the provider account holder.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Name"
      email:
        description: "Email Id available in the profile page of the account.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Email"
  TransactionRequest:
    type: "object"
    title: "TransactionRequest"
    properties:
      transaction:
        $ref: "#/definitions/UpdateTransaction"
  UserDetail:
    type: "object"
    title: "UserDetail"
    properties:
      preferences:
        description: "Preferences of the user to be respected in the data provided through various API services.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        $ref: "#/definitions/UserResponsePreferences"
      address:
        description: "The address of the user.<br><br><b>Endpoints</b>:<ul><li>GET user</li></ul>"
        readOnly: true
        $ref: "#/definitions/UserAddress"
      loginName:
        description: "The login name of the user used for authentication.<br><br><b>Endpoints</b>:<ul><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        type: "string"
      name:
        description: "First, middle and last names of the user.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        $ref: "#/definitions/Name"
      id:
        format: "int64"
        description: "The unique identifier of a consumer/user in Yodlee system for whom the API services would be accessed for.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        type: "integer"
      roleType:
        type: "string"
        enum:
        - "INDIVIDUAL"
      email:
        description: "The email address of the user.<br><br><b>Endpoints</b>:<ul><li>GET user</li></ul>"
        readOnly: true
        type: "string"
      segmentName:
        type: "string"
  TransactionResponse:
    type: "object"
    title: "TransactionResponse"
    properties:
      transaction:
        type: "array"
        items:
          $ref: "#/definitions/Transaction"
  Merchant:
    type: "object"
    title: "Merchant"
    properties:
      address:
        description: "The address of the merchant associated with the transaction is populated in the merchant address field.<br><b>Note</b>: The merchant address field is not available by default and customers will have to specifically request the merchant's address (that includes city, state, and ZIP of the merchant). The merchant address field is available only for merchants in the United States.<br><br><b>Applicable containers</b>: bank,creditCard<br>"
        readOnly: true
        $ref: "#/definitions/AccountAddress"
      categoryLabel:
        description: "The business categories of the merchant.<br><br><b>Applicable containers</b>: bank,creditCard<br><b>Applicable Values</b><br>"
        readOnly: true
        type: "array"
        items:
          type: "string"
      coordinates:
        description: "The merchant geolocation coordinates like latitude and longitude.<br><br><b>Applicable containers</b>: bank,creditCard,loan<br>"
        $ref: "#/definitions/Coordinates"
      name:
        description: "The name of the merchant.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      id:
        description: "Identifier of the merchant.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      source:
        description: "The source through which merchant information is retrieved.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* YODLEE: The source that provided the merchant information is Yodlee.<br>\n* FACTUAL: The source that provided the merchant information is FACTUAL.<br>"
        readOnly: true
        type: "string"
        enum:
        - "YODLEE"
        - "FACTUAL"
  TransactionTotal:
    type: "object"
    title: "TransactionTotal"
    properties:
      count:
        format: "int64"
        type: "integer"
  CobrandNotificationResponse:
    type: "object"
    title: "CobrandNotificationResponse"
    properties:
      event:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/CreateCobrandNotificationEvent"
  LoginForm:
    type: "object"
    title: "LoginForm"
    properties:
      mfaInfoTitle:
        description: "The title for the MFA information demanded from the user.This is the title displayed in the provider site.This field is applicable for MFA form types only. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      help:
        description: "The help that can be displayed to the customer in the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "string"
      forgetPasswordURL:
        description: "The forget password URL of the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      formType:
        description: "The type of the forms for which the user information is required.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul><b>Applicable Values</b><br>\n* login: The primary login form displayed in the provider site.<br>\n* questionAndAnswer: The form requesting answers for the secret questions from the user during login.<br>\n* token: The form requesting additional token information from the user during login.<br>\n* image: The loginform that displays CAPTCHA for an user to enter the text during login.<br>"
        type: "string"
        enum:
        - "login"
        - "questionAndAnswer"
        - "token"
        - "image"
      mfaInfoText:
        description: "The text displayed in the provider site while requesting the user's MFA information. This field is applicable for MFA form types only. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      loginHelp:
        description: "The help that can be displayed to the customer in the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "string"
      mfaTimeout:
        format: "int64"
        description: "The amount of time before which the user is expected to provide MFA information. This field is applicable for MFA form types only. This would be an useful information that could be displayed to the users. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "integer"
      id:
        format: "int64"
        description: "The identifier of the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "integer"
      row:
        description: "This indicates one row in the form. The row will have one label. But it may have single or multiple fields.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "array"
        items:
          $ref: "#/definitions/Row"
  ProviderResponse:
    type: "object"
    title: "ProviderResponse"
    properties:
      provider:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Providers"
  Statement:
    type: "object"
    title: "Statement"
    properties:
      apr:
        format: "double"
        description: "The APR applied to the balance on the credit card account, as available in the statement.<br><b>Note:</b> In case of variable APR, the APR available on the statement might differ from the APR available at the account-level.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "number"
      cashApr:
        format: "double"
        description: "The APR applicable to cash withdrawals on the credit card account.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "number"
      billingPeriodStart:
        description: "The start date of the statement period.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "string"
      dueDate:
        description: "The date by when the minimum payment is due to be paid.<br><b>Note:</b> The due date that appears in the statement may differ from the due date at the account-level.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "string"
      interestAmount:
        description: "The interest amount that is part of the amount due or the payment amount.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      statementDate:
        description: "The date on which the statement is generated.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "string"
      cashAdvance:
        description: "Cash Advance is the amount that is withdrawn from credit card over the counter or from an ATM up to the available credit/cash limit.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      billingPeriodEnd:
        description: "The end date of the statement period.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "string"
      principalAmount:
        description: "The principal amount that is part of the amount due or the payment amount.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      loanBalance:
        description: "The outstanding principal balance on the loan account.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      amountDue:
        description: "The total amount owed at the end of the billing period.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountId:
        format: "int64"
        description: "Account to which the statement belongs to.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "integer"
      lastUpdated:
        description: "The date when the account was last updated by Yodlee.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "string"
      isLatest:
        description: "The field is set to true if the statement is the latest generated statement.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "boolean"
      minimumPayment:
        description: "<b>Credit Card:</b> The minimum amount that the consumer has to pay every month on the credit card account. Data provides an up-to-date information to the consumer.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      lastPaymentDate:
        description: "The date on which the last payment was done during the billing cycle.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "string"
      lastPaymentAmount:
        description: "The last payment done for the previous billing cycle in the current statement period.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      id:
        format: "int64"
        description: "Unique identifier for the statement.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        type: "integer"
      newCharges:
        description: "New charges on the statement (i.e., charges since last statement to end of the billing period). Applicable to line of credit loan type.<br><br><b>Applicable containers</b>: creditCard, bill, loan, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  DataExtractsEventResponse:
    type: "object"
    title: "DataExtractsEventResponse"
    properties:
      event:
        readOnly: true
        $ref: "#/definitions/DataExtractsEvent"
  Verification:
    type: "object"
    title: "Verification"
    properties:
      accountId:
        format: "int64"
        description: "Unique identifier for the account.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        type: "integer"
      reason:
        description: "The reason the account verification failed.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>\n* DATA_NOT_AVAILABLE: <br><b>Description: </b>The account holder's name related details are not available at the FI site.\n* ACCOUNT_HOLDER_MISMATCH: <br><b>Description: </b>The account verification process has failed due to account holder's data mismatch\n* FULL_ACCOUNT_NUMBER_AND_BANK_TRANSFER_CODE_NOT_AVAILABLE: <br><b>Description: </b>The account verification process has failed as the full account number and bank transfer code are not available.\n* FULL_ACCOUNT_NUMBER_NOT_AVAILABLE: <br><b>Description: </b>The account verification process has failed as the full account number is not available.\n* BANK_TRANSFER_CODE_NOT_AVAILABLE: <br><b>Description: </b>The account verification process has failed as the bank transfer code is not available.\n* EXPIRED: <br><b>Description: </b>The time limit to verify the microtransaction details has expired.\n* DATA_MISMATCH: <br><b>Description: </b>The account verification process has failed due to data mismatch.\n* INSTRUCTION_GENERATION_ERROR: <br><b>Description: </b>The consumer's account verification has failed."
        readOnly: true
        type: "string"
        enum:
        - "DATA_NOT_AVAILABLE"
        - "ACCOUNT_HOLDER_MISMATCH"
        - "FULL_ACCOUNT_NUMBER_AND_BANK_TRANSFER_CODE_NOT_AVAILABLE"
        - "FULL_ACCOUNT_NUMBER_NOT_AVAILABLE"
        - "BANK_TRANSFER_CODE_NOT_AVAILABLE"
        - "EXPIRED"
        - "DATA_MISMATCH"
        - "INSTRUCTION_GENERATION_ERROR"
      verificationStatus:
        description: "The status of the account verification.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul><br><b>Applicable Values</b>\n* INITIATED: <br><b>Description: </b>The account verification process is initiated.<br>\n* DEPOSITED: <br><b>Description: </b>The microdeposits and debits for the CDV process are posted to the consumer's account.<br>\n* SUCCESS: <br><b>Description: </b>The consumer's account verification is successful.<br>\n* FAILED: <br><b>Description: </b>Due to technical issues Yodlee could not post the microtransactions in the user's account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "INITIATED"
        - "DEPOSITED"
        - "SUCCESS"
        - "FAILED"
      providerAccountId:
        format: "int64"
        description: "Unique identifier for the provider account.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        type: "integer"
      verificationType:
        description: "The account verification type.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul><br><b>Applicable Values</b>"
        type: "string"
        enum:
        - "MATCHING"
        - "CHALLENGE_DEPOSIT"
      account:
        $ref: "#/definitions/VerificationAccount"
      verificationDate:
        description: "The date of the account verification.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        readOnly: true
        type: "string"
      verificationId:
        format: "int64"
        description: "Unique identifier for the verification request.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        readOnly: true
        type: "integer"
  DerivedNetworth:
    type: "object"
    title: "DerivedNetworth"
    properties:
      date:
        description: "The date as of when the networth information is provided.<br><br><b>Applicable containers</b>: bank, creditcard, investment, insurance, realEstate, loan<br>"
        readOnly: true
        type: "string"
      liability:
        description: "The liability amount that the user owes.<br><br><b>Applicable containers</b>: bank, creditcard, investment, insurance, realEstate, loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      historicalBalances:
        description: "Balances of the accounts over the period of time.<br><br><b>Applicable containers</b>: bank, creditcard, investment, insurance, realEstate, loan<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedNetworthHistoricalBalance"
      networth:
        description: "Networth of the user.<br><br><b>Applicable containers</b>: bank, creditcard, investment, insurance, realEstate, loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      asset:
        description: "The asset value that the user owns.<br><br><b>Applicable containers</b>: bank, creditcard, investment, insurance, realEstate, loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  UserRegistration:
    type: "object"
    title: "UserRegistration"
    properties:
      preferences:
        $ref: "#/definitions/UserRequestPreferences"
      address:
        $ref: "#/definitions/UserAddress"
      loginName:
        type: "string"
      name:
        $ref: "#/definitions/Name"
      email:
        type: "string"
      segmentName:
        type: "string"
  SecurityHolding:
    type: "object"
    title: "SecurityHolding"
    properties:
      security:
        readOnly: true
        $ref: "#/definitions/Security"
      id:
        readOnly: true
        type: "string"
  TotalCount:
    type: "object"
    title: "TotalCount"
    properties:
      count:
        format: "int64"
        readOnly: true
        type: "integer"
  ProvidersDataset:
    type: "object"
    title: "ProvidersDataset"
    properties:
      name:
        description: "The name of the dataset requested from the provider site<br><br><b>Account Type</b>: Manual<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li><li>GET providers</li></ul><b>Applicable Values</b><br>\n* BASIC_AGG_DATA: Indicates basic aggregation data like accounts, transactions, etc.<br>\n* ADVANCE_AGG_DATA: Indicates advance aggregation data like interest details and payment details.<br>\n* ACCT_PROFILE: Indicates account profile datas like full account number, routing number, etc.<br>\n* DOCUMENT: Indicates document data like bank statements, tax documents, etc.<br>"
        type: "string"
        enum:
        - "BASIC_AGG_DATA"
        - "ADVANCE_AGG_DATA"
        - "ACCT_PROFILE"
        - "DOCUMENT"
      attribute:
        description: "The name of the dataset attribute suported by the provider.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        type: "array"
        items:
          $ref: "#/definitions/Attribute"
  DataExtractsProviderAccount:
    type: "object"
    title: "DataExtractsProviderAccount"
    properties:
      createdDate:
        description: "The date on when the provider account is created in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      aggregationSource:
        description: "The source through which the providerAccount is added in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      providerId:
        format: "int64"
        description: "Unique identifier for the provider resource. This denotes the provider for which the provider account id is generated by the user.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      requestId:
        description: "Unique id generated to indicate the request.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      isManual:
        description: "Indicates whether account is a manual or aggregated provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "boolean"
      id:
        format: "int64"
        description: "Unique identifier for the provider account resource. This is created during account addition.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      status:
        description: "The status of last update attempted for the account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* LOGIN_IN_PROGRESS: Login to provider site is in progress.<br>\n* USER_INPUT_REQUIRED: Additional authentication information is needed from the user.<br>\n* IN_PROGRESS: Login is successful and data aggregation is in progress.<br>\n* PARTIAL_SUCCESS: Data is partially retrieved.<br>\n* SUCCESS: Data is retrieved successfully.<br>\n* FAILED: Additional authentication information is needed from the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "LOGIN_IN_PROGRESS"
        - "USER_INPUT_REQUIRED"
        - "IN_PROGRESS"
        - "PARTIAL_SUCCESS"
        - "SUCCESS"
        - "FAILED"
  PhoneNumber:
    type: "object"
    title: "PhoneNumber"
    properties:
      type:
        description: "type of phone number"
        readOnly: true
        type: "string"
        enum:
        - "home"
        - "work"
        - "landline"
        - "mobile"
      value:
        description: "Phone Number"
        readOnly: true
        type: "string"
  AccountProfile:
    type: "object"
    title: "AccountProfile"
    properties:
      identifier:
        description: "Identifiers available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Identifier"
      address:
        description: "Address available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountAddress"
      phoneNumber:
        description: "Phone number available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/PhoneNumber"
      email:
        description: "Email Id available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Email"
  ProviderAccountRequest:
    type: "object"
    title: "ProviderAccountRequest"
    properties:
      preferences:
        $ref: "#/definitions/ProviderAccountPreferences"
      field:
        type: "array"
        items:
          $ref: "#/definitions/Field"
      datasetName:
        type: "array"
        items:
          type: "string"
          enum:
          - "BASIC_AGG_DATA"
          - "ADVANCE_AGG_DATA"
          - "ACCT_PROFILE"
          - "DOCUMENT"
      dataset:
        type: "array"
        items:
          $ref: "#/definitions/ProvidersDataset"
  TransactionCount:
    type: "object"
    title: "TransactionCount"
    properties:
      TOTAL:
        $ref: "#/definitions/TransactionTotal"
  Email:
    type: "object"
    title: "Email"
    properties:
      type:
        readOnly: true
        type: "string"
        enum:
        - "primary"
        - "secondary"
        - "personal"
        - "work"
        - "others"
      value:
        readOnly: true
        type: "string"
  ProviderAccountProfile:
    type: "object"
    title: "ProviderAccountProfile"
    properties:
      profile:
        description: "PII related data like address, name, phoneNumber, identifier and email.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Profile"
      id:
        format: "int64"
        description: "Unique identifier for profile<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/profile</li></ul>"
        readOnly: true
        type: "integer"
  UserAccessToken:
    type: "object"
    title: "UserAccessToken"
    properties:
      accessTokens:
        type: "array"
        items:
          $ref: "#/definitions/AccessTokens"
  DerivedHoldingSummaryResponse:
    type: "object"
    title: "DerivedHoldingSummaryResponse"
    properties:
      holdingSummary:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedHoldingsSummary"
      link:
        readOnly: true
        $ref: "#/definitions/DerivedHoldingsLinks"
  UserAddress:
    type: "object"
    title: "UserAddress"
    properties:
      zip:
        type: "string"
      country:
        type: "string"
      address3:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      address1:
        type: "string"
      fullAddress:
        type: "string"
      state:
        type: "string"
  AddedProviderAccount:
    type: "object"
    title: "AddedProviderAccount"
    properties:
      aggregationSource:
        description: "The source through which the providerAccount is added in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      providerId:
        format: "int64"
        description: "Unique identifier for the provider resource. This denotes the provider for which the provider account id is generated by the user.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      requestId:
        description: "Unique id generated to indicate the request.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      isManual:
        description: "Indicates whether account is a manual or aggregated provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "boolean"
      id:
        format: "int64"
        description: "Unique identifier for the provider account resource. This is created during account addition.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      status:
        description: "The status of last update attempted for the account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* LOGIN_IN_PROGRESS: Login to provider site is in progress.<br>\n* USER_INPUT_REQUIRED: Additional authentication information is needed from the user.<br>\n* IN_PROGRESS: Login is successful and data aggregation is in progress.<br>\n* PARTIAL_SUCCESS: Data is partially retrieved.<br>\n* SUCCESS: Data is retrieved successfully.<br>\n* FAILED: Additional authentication information is needed from the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "LOGIN_IN_PROGRESS"
        - "USER_INPUT_REQUIRED"
        - "IN_PROGRESS"
        - "PARTIAL_SUCCESS"
        - "SUCCESS"
        - "FAILED"
  DataExtractsUserData:
    type: "object"
    title: "DataExtractsUserData"
    properties:
      holding:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsHolding"
      user:
        readOnly: true
        $ref: "#/definitions/DataExtractsUser"
      account:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsAccount"
      transaction:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsTransaction"
      providerAccount:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsProviderAccount"
  UpdateCobrandNotificationEvent:
    type: "object"
    title: "UpdateCobrandNotificationEvent"
    properties:
      callbackUrl:
        description: "URL to which the notification should be posted.<br><br><b>Endpoints</b>:<ul><li>GET cobrand/config/notifications/events</li></ul>"
        type: "string"
  VerificationRequest:
    type: "object"
    title: "VerificationRequest"
    properties:
      verification:
        $ref: "#/definitions/Verification"
  AccountAddress:
    type: "object"
    title: "AccountAddress"
    properties:
      zip:
        type: "string"
      country:
        type: "string"
      address3:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      sourceType:
        type: "string"
      address1:
        type: "string"
      fullAddress:
        type: "string"
      state:
        type: "string"
      type:
        type: "string"
        enum:
        - "BUSINESS"
        - "WORK"
        - "HOME"
        - "PAYMENT"
        - "PAYOFF"
  ApiKeyRequest:
    type: "object"
    title: "ApiKeyRequest"
    properties:
      publicKey:
        description: "Public key uploaded by the customer while generating ApiKey.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>"
        type: "string"
  CreateCobrandNotificationEvent:
    type: "object"
    title: "CreateCobrandNotificationEvent"
    properties:
      name:
        description: "Name of the event for which the customers must subscribe to receive notifications.<br><b>Valid Value:</b> Notification Events Name<br><br><b>Endpoints</b>:<ul><li>GET cobrand/config/notifications/events</li></ul><b>Applicable Values</b><br>\n* REFRESH: Events that happen during add, edit and update aggregated accounts processes.<br>\n* DATA_UPDATES: Data updates that happen on provider accounts, accounts, transactions and holdings data due to user actions or auto updates. This event is triggered to help the customer perform data extracts from Yodlee system to their system.<br>\n* AUTO_REFRESH_UPDATES: Events that gets triggered once there is a change in the state of cache refresh.<br>"
        type: "string"
        enum:
        - "REFRESH"
        - "DATA_UPDATES"
        - "AUTO_REFRESH_UPDATES"
      callbackUrl:
        description: "URL to which the notification should be posted.<br><br><b>Endpoints</b>:<ul><li>GET cobrand/config/notifications/events</li></ul>"
        type: "string"
  CreatedAccountInfo:
    type: "object"
    title: "CreatedAccountInfo"
    properties:
      accountName:
        readOnly: true
        type: "string"
      id:
        readOnly: true
        type: "string"
      accountNumber:
        readOnly: true
        type: "string"
  Name:
    type: "object"
    title: "Name"
    properties:
      displayed:
        type: "string"
      middle:
        type: "string"
      last:
        type: "string"
      fullName:
        type: "string"
      first:
        type: "string"
  VerificationTransaction:
    type: "object"
    title: "VerificationTransaction"
    properties:
      amount:
        $ref: "#/definitions/Money"
      baseType:
        type: "string"
        enum:
        - "CREDIT"
        - "DEBIT"
  UserResponsePreferences:
    type: "object"
    title: "UserResponsePreferences"
    properties:
      dateFormat:
        description: "The dateformat of the user.This attribute is just a place holder and has no impact on any other API services."
        readOnly: true
        type: "string"
      timeZone:
        description: "The timezone of the user. This attribute is just a place holder and has no impact on any other API services."
        readOnly: true
        type: "string"
      currency:
        description: "The currency of the user. This currency will be respected while providing the response for derived API services.<br><b>Applicable Values</b><br>\n* AUD: Australia Dollar<br>\n* BRL: Brazil Real<br>\n* CAD: Canada Dollar<br>\n* EUR: Euro Member Countries<br>\n* GBP: United Kingdom Pound<br>\n* HKD: Hong Kong Dollar<br>\n* IDR: Indonesia Rupiah<br>\n* INR: India Rupee<br>\n* JPY: Japan Yen<br>\n* NZD: New Zealand Dollar<br>\n* SGD: Singapore Dollar<br>\n* USD: United States Dollar<br>\n* ZAR: South Africa Rand<br>\n* CNY: China Yuan Renminbi<br>\n* VND: Viet Nam Dong<br>"
        type: "string"
        enum:
        - "AUD"
        - "BRL"
        - "CAD"
        - "EUR"
        - "GBP"
        - "HKD"
        - "IDR"
        - "INR"
        - "JPY"
        - "NZD"
        - "SGD"
        - "USD"
        - "ZAR"
        - "CNY"
        - "VND"
      locale:
        description: "The locale of the user. This locale will be considered for localization features like providing the provider information in the supported locale or providing category names in the transaction related services.<br><b>Applicable Values</b><br>\n* en_US: English - United States of America<br>\n* en_ES: Spanish - Spain<br>\n* fr_CA: French - Canada<br>\n* zh_CN: Chinese - China<br>"
        type: "string"
        enum:
        - "en_US"
        - "en_ES"
        - "fr_CA"
        - "zh_CN"
  DocumentDownloadResponse:
    type: "object"
    title: "DocumentDownloadResponse"
    properties:
      document:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DocumentDownload"
  Identifier:
    type: "object"
    title: "Identifier"
    properties:
      type:
        description: "Type of Identifier"
        readOnly: true
        type: "string"
        enum:
        - "NIE"
        - "DNI"
        - "EIN"
        - "BN"
        - "AADHAR"
        - "NIN"
        - "NRIC"
      value:
        description: "Value of the identifier"
        readOnly: true
        type: "string"
  AccountHistory:
    type: "object"
    title: "AccountHistory"
    properties:
      historicalBalances:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/HistoricalBalance"
      id:
        format: "int64"
        readOnly: true
        type: "integer"
  DataExtractsTransaction:
    type: "object"
    title: "DataExtractsTransaction"
    properties:
      date:
        description: "The value provided will be either postDate or transactionDate. postDate takes higher priority than transactionDate, except for the investment container as only transactionDate is available. The availability of postDate or transactionDate depends on the provider site.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      symbol:
        description: "The symbol of the security being traded.<br><b>Note</b>: The settle date field applies only to trade-related transactions. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      cusipNumber:
        description: "The CUSIP (Committee on Uniform Securities Identification Procedures) identifies the financial instruments in the United States and Canada.<br><b><br><b>Note</b></b>: The CUSIP number field applies only to trade related transactions.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      highLevelCategoryId:
        format: "int64"
        description: "The high level category assigned to the transaction. The supported values are provided by the GET transactions/categories. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      detailCategoryId:
        format: "int64"
        description: "The id of the detail category that is assigned to the transaction. The supported values are provided by GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard<br>"
        readOnly: true
        type: "integer"
      description:
        description: "Description details<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Description"
      memo:
        description: "Additional notes provided by the user for a particular  transaction through application or API services. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      settleDate:
        description: "It is the date on which the transaction is finalized, that is, the date the ownership of the security is transferred to the buyer. The settlement date is usually few days after the transaction date.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      type:
        description: "The nature of the transaction, i.e., deposit, refund, payment, etc.<br><b>Note</b>: The transaction type field is available only for the United States, Canada, United Kingdom, and India based provider sites. <br><br><b>Applicable containers</b>: bank,creditCard,investment<br>"
        readOnly: true
        type: "string"
      baseType:
        description: "Indicates if the transaction appears as a debit or a credit transaction in the account. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* CREDIT: Denotes that the transactions are being credited to the account.<br>\n* DEBIT: Denotes that the transactions are getting debited to the account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "CREDIT"
        - "DEBIT"
      categorySource:
        description: "Indicates the source of the category, i.e., categories derived by the system or assigned/provided by the consumer. This is the source field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* SYSTEM: The category assigned to the transaction is a system defined category.<br>\n* USER: The category assigned to the transaction is a user defined category.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      principal:
        description: "The portion of the principal in the transaction amount. The transaction amount can be the amount due, payment amount, minimum amount, repayment, etc.<br><br><b>Applicable containers</b>: loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      lastUpdated:
        readOnly: true
        type: "string"
      isDeleted:
        description: "Indicates if the transaction is marked as deleted.<b>Applicable containers</b>: All Containers<br><b>Aggregated / Manual</b>: Both <br><b>Endpoints</b>:<br><ul><li>GET dataExtracts/userData</li></ul>"
        readOnly: true
        type: "boolean"
      interest:
        description: "The portion of interest in the transaction amount. The transaction amount can be the amount due, payment amount, minimum amount, repayment, etc.<br><br><b>Applicable containers</b>: loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      price:
        description: "The price of the security for the transaction.<br><b>Note</b>: The price field applies only to the trade related transactions. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      commission:
        description: "A commission or brokerage associated with a transaction.<br><br><br><b>Additional Details</b>:The commission only applies to trade-related transactions.<b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      id:
        format: "int64"
        description: "An unique identifier for the transaction. The combination of the id and account container are unique in the system. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      amount:
        description: "The amount of the transaction as it appears at the FI site. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      checkNumber:
        description: "The checkNumber of the transaction.<br><br><b>Applicable containers</b>: bank<br>"
        readOnly: true
        type: "string"
      quantity:
        format: "double"
        description: "The quantity associated with the transaction.<br><b>Note</b>: The quantity field applies only to trade-related transactions.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      isManual:
        description: "Indicates if the transaction is aggregated from the FI site or the consumer has manually created the transaction using the application or an API. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "boolean"
      merchant:
        description: "The name of the merchant associated with the transaction.<br><b>Note</b>: The merchant name field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Merchant"
      transactionDate:
        description: "The date the transaction happens in the account. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      categoryType:
        description: "The categoryType of the category assigned to the transaction. This is the type field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>\n* TRANSFER: The transaction category belongs to a transfer category type.<br>\n* DEFERRED_COMPENSATION: The transaction category belongs to deferred compensation type.<br>\n* UNCATEGORIZE: The transaction does not seem to be categorized.<br>\n* INCOME: The transaction category belongs to an income type.<br>\n* EXPENSE: The transaction category belongs to an expense type.<br>"
        readOnly: true
        type: "string"
        enum:
        - "TRANSFER"
        - "DEFERRED_COMPENSATION"
        - "UNCATEGORIZE"
        - "INCOME"
        - "EXPENSE"
      accountId:
        format: "int64"
        description: "The account from which the transaction was made. This is basically the primary key of the account resource. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      createdDate:
        readOnly: true
        type: "string"
      sourceType:
        description: "The source through which the transaction is added to the Yodlee system.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loann<br><b>Applicable Values:</b><br>\n* AGGREGATED: Indicates that the transactions is aggregated from the provider site.<br>\n* MANUAL: Indicates that the transaction is created manually by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "AGGREGATED"
        - "MANUAL"
      CONTAINER:
        description: "The account's container.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* bank: Applicable for Aggregated and Manual<br>\n* creditCard: Applicable for Aggregated and Manual<br>\n* investment: Applicable for Aggregated and Manual<br>\n* insurance: Applicable for Aggregated and Manual<br>\n* loan: Applicable for Aggregated and Manual<br>\n* reward: Applicable for Aggregated and Manual<br>\n* bill: Applicable for Aggregated and Manual<br>\n* realEstate: Applicable for Manual<br>\n* otherAssets: Applicable for Manual<br>\n* otherLiabilities: Applicable for Manual"
        readOnly: true
        type: "string"
        enum:
        - "bank"
        - "creditCard"
        - "investment"
        - "insurance"
        - "loan"
        - "reward"
        - "bill"
        - "realEstate"
        - "otherAssets"
        - "otherLiabilities"
      postDate:
        description: "The date on which the transaction is posted to the account.<br><br><b>Applicable containers</b>: bank,creditCard,insurance,loan<br>"
        readOnly: true
        type: "string"
      parentCategoryId:
        format: "int64"
        description: "The parentCategoryId of the category assigned to the transaction.<br><b>Note</b>: This field will be provided in the response if the transaction is assigned to a user-created category. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      subType:
        description: "The transaction subtype field provides a detailed transaction type. For example, purchase is a transaction type and the transaction subtype field indicates if the purchase was made using a debit or credit card.<br><b>Note</b>: The transaction subtype field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
        enum:
        - "AUTH_HOLD"
        - "AUTH_REQUEST"
        - "OVERDRAFT_CHARGE"
        - "CREDIT_ADJUSTMENT"
        - "PIN_DEBIT"
        - "BANK_DIRECT_DEPOSIT"
        - "DIVIDEND_DEPOSIT"
        - "INTEREST_SAVINGS"
        - "INTEREST_ADJUSTMENT"
        - "ONLINE_PURCHASE"
        - "PURCHASED_WITH_CHECK"
        - "RECURRING_BILLING"
        - "TAX_PAYMENT"
        - "PAYMENT_BY_CHECK"
        - "PAYMENT_PLAN"
        - "FEE_REFUND"
        - "WIRE_TRANSFER_CHARGE"
        - "ACCOUNT_TO_ACCOUNT_TRANSFER"
        - "BANK_TO_BANK_TRANSACTION"
        - "BANK_TO_NON_BANK_ACCOUNT_TRANSFER"
        - "CASH_WITHDRAWAL_AT_FI"
        - "ATM_CASH_WITHDRAWAL"
        - "AUTH_PROCESSING"
        - "AUTH_RELEASE"
        - "PRE_AUTH"
        - "AUTH_COMPLETE"
        - "AUTH_VOID"
        - "BALANCE_ENQUIRY"
        - "ACCOUNT_VERIFICATION"
        - "PRE_AUTH_COMPLETION"
        - "SERVICE_CHARGE"
        - "SERVICE_CHARGE_FEE_REFUND"
        - "RETURNED_CHECK_CHARGE"
        - "RETURNED_CHECK_REIMBURSEMENT"
        - "CASH_ADVANCE"
        - "BILL_PAY_CHARGE"
        - "CHECK_IMAGE_SERVICE_CHARGE"
        - "OVERDRAFT_PROTECTION_CHARGE"
        - "STOP_PAYMENT_CHARGE"
        - "CHECKS_ORDERING_CHARGE"
        - "MONTHLY_MAINTENANCE_CHARGE"
        - "DEBIT_CARD_FEE"
        - "CONVENIENCE_FEE"
        - "PERSONAL_LOAN_CREDIT"
        - "CREDIT_CARD_CREDIT"
        - "AUTO_LOAN"
        - "HOME_LOAN_MORTGAGE"
        - "SHORT_TERM_CREDIT"
        - "SIGNATURE_DEBIT"
        - "CONTACT_LESS_DEBIT"
        - "DEFERRED_DEPOSIT"
        - "DEFERRED_BILL_PAY"
        - "INSTALLMENT_PAYMENT"
        - "RECURRING_SUBSCRIPTION_PAYMENT"
        - "HOLD_CHECK_PAYMENT"
        - "CAPITAL_GAINS_DISTIBUTION"
        - "CG_LONG_TERM_DEPOSIT"
        - "OPEN_SALE_DEPOSIT"
        - "INTEREST__CHECK"
        - "PURCHASE_VOID"
        - "PURCHASE_WITH_CREDIT_CARD"
        - "PURCHASE_WITH_DEBIT_CARD"
        - "CHARGE_A_REPEAT_CUSTOMER"
        - "DOWN_PAYMENT_OR_ANNUITY_PAYMENT_OR_DIRECT_PAYMENT"
        - "FEE_PAYMENT"
        - "FINANCE_CHARGE_REFUND"
        - "TRANSACTION_VOID"
        - "FEE_VOID"
        - "DEBIT_CARD_WITHDRAWAL_AT_STORE"
        - "ELECTRONIC_PAYMENT"
        - "ACH_DEBIT"
        - "ATM_TELLER_DEPOSIT"
        - "POS_DEBIT"
        - "BANK_ADJUSTMENT"
        - "CHARGES_FEES"
        - "INTEREST"
        - "DEPOSITS_CREDITS"
        - "PAYMENT"
        - "PURCHASE"
        - "REFUND"
        - "TRANSFER"
        - "WITHDRAWAL"
        - "OTHER_DEPOSITS"
        - "OTHER_WITHDRAWALS"
        - "ADJUSTMENT"
        - "FINANCE_CHARGE"
        - "OTHER_CHARGES_FEES"
        - "ANNUAL_FEE"
        - "DEPOSIT"
        - "DIRECT_DEPOSIT_SALARY"
        - "INVESTMENT_INCOME_CASH"
        - "SSA"
        - "REWARDS"
        - "CHECK_DEPOSIT"
        - "MOBILE_REMOTE_DEPOSIT"
        - "TELLER_DEPOSIT"
        - "TAX_REFUND"
        - "CREDIT_CARD_PAYMENT"
        - "INSURANCE_PAYMENT"
        - "UTILITIES_PAYMENT"
        - "CHILD_SUPPORT"
        - "LOAN"
        - "PERSONAL_LOAN"
        - "STUDENT_LOAN"
        - "SALES_TAX"
        - "REIMBURSEMENT"
        - "BALANCE_TRANSFER"
        - "WIRE_TRANSFER"
        - "OVERDRAFT_PROTECTION"
        - "DEBIT"
        - "CREDIT"
        - "NSF_FEES"
      category:
        description: "The name of the category assigned to the transaction. This is the category field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      runningBalance:
        description: "The running balance in an account indicates the balance of the account after every transaction.<br><br><b>Applicable containers</b>: bank,creditCard,investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      categoryId:
        format: "int64"
        description: "The id of the category assigned to the transaction. This is the id field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      holdingDescription:
        description: "For transactions involving securities, this captures the securities description.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      status:
        description: "The status of the transaction: pending or posted.<br><b>Note</b>: Most FI sites only display posted transactions. If the FI site displays transaction status, same will be aggregated.  <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* POSTED: Denotes that the transaction is realized on the account's balance.<br>\n* PENDING: Denotes that the transaction is not yet realized on the account's balance.<br>\n* SCHEDULED: Denotes that the transacation is a future dated transaction.<br>\n* FAILED: Denotes the failed transactions. It is only applicable to rejected claims in a Flexible Spending account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "POSTED"
        - "PENDING"
        - "SCHEDULED"
        - "FAILED"
  TransactionCategoryResponse:
    type: "object"
    title: "TransactionCategoryResponse"
    properties:
      transactionCategory:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/TransactionCategory"
  DerivedTransactionSummaryResponse:
    type: "object"
    title: "DerivedTransactionSummaryResponse"
    properties:
      links:
        readOnly: true
        $ref: "#/definitions/DerivedTransactionsLinks"
      transactionSummary:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedTransactionsSummary"
  UserSession:
    type: "object"
    title: "UserSession"
    properties:
      userSession:
        description: "Session provided for a valid user to access API services upon successful authentication.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li></ul>"
        readOnly: true
        type: "string"
  ProviderAccountResponse:
    type: "object"
    title: "ProviderAccountResponse"
    properties:
      providerAccount:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/ProviderAccount"
  DerivedHolding:
    type: "object"
    title: "DerivedHolding"
    properties:
      symbol:
        description: " The symbol of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      exercisedQuantity:
        format: "double"
        description: "The quantity of the employee stock options that are already exercised or bought by the employee.<br><b>Note:</b> Once the employee stock options is exercised, they are either converted to cash value or equity positions depending on the FI. The exercised quantity field is only applicable to employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      cusipNumber:
        description: "The CUSIP (Committee on Uniform Securities Identification Procedures) identifies most the financial instruments in the United States and Canada.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      assetClassification:
        description: "Asset classification applied to the holding. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/AssetClassification"
      vestedQuantity:
        format: "double"
        description: "The quantity of units or shares that are already vested on a vest date.<br><b>Note:</b> The vested quantity field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      description:
        description: "The description (name) for the holding (E.g., Cisco Systems)For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      unvestedValue:
        description: "Indicates the estimated market value of the unvested units.<br><b>Note:</b> FIs usually calculates the unvested value as the market price unvested quantity. The unvested value field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      vestedValue:
        description: "Indicates the estimated market value of the vested units.<br><b>Note:</b> FIs usually calculates the vested value as the market price vested quantity. The vested value field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      optionType:
        description: "The type of the option position (i.e., put or call).<br><b>Note:</b> The option type field is only applicable to options. Valid Value: call, put<br><br><b>Applicable containers</b>: investment<br><b>Applicable Values</b><br>\n* put: An option to sell assets at an agreed price on or before a particular date.<br>\n* call: An option to buy assets at an agreed price on or before a particular date.<br>"
        readOnly: true
        type: "string"
        enum:
        - "put"
        - "call"
      lastUpdated:
        description: "The date when the information was last updated in the system.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      matchStatus:
        description: "Indicates the security match status id of the investment option identified during security normalization.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      holdingType:
        description: "The type of holding or position.<br><br>"
        readOnly: true
        type: "string"
        enum:
        - "stock"
        - "mutualFund"
        - "bond"
        - "CD"
        - "option"
        - "moneyMarketFund"
        - "other"
        - "remic"
        - "future"
        - "commodity"
        - "currency"
        - "unitInvestmentTrust"
        - "employeeStockOption"
        - "insuranceAnnuity"
        - "unknown"
        - "preferredStock"
        - "ETF"
        - "warrants"
        - "ETN"
      maturityDate:
        description: "The stated maturity date of a bond or CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      price:
        description: "The current price of the security.<br><b>Note:</b> Only for bonds the price field indicates the normalized price and not the price aggregated from the site. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      term:
        description: "The fixed duration for which the bond or CD is issued.<br><b>Note:</b> The term field is only applicable to CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      contractQuantity:
        format: "double"
        description: "The quantity of tradeable units in a contract.<br><b>Note:</b> The contract quantity field is only applicable to commodity and currency.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      id:
        format: "int64"
        description: "Unique identifier for the security added in the system. This is the primary key of the holding resource.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      isShort:
        description: " Indicates that the holding is a short trading.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      value:
        description: "The total market value of the security. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      expirationDate:
        description: "The date on which an option, right or warrant expires.<br><b>Note:</b> The expiration date field is only applicable to options and employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      interestRate:
        format: "double"
        description: "The interest rate on a CD.<br><b>Note:</b> The interest rate field is only applicable to CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      quantity:
        format: "double"
        description: "The quantity held for the holding.<br><b>Note:</b> Only for bonds the quantity field indicates the normalized quantity and not the quantity aggregated from the site. The quantity field is only applicable to restricted stock units/awards, performance units, currency, and commodity. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "number"
      accruedInterest:
        description: "The accruedInterest of the  holding.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      grantDate:
        description: "The date on which equity awards like ESOP, RSU, etc., are issued or granted.<br><b>Note:</b> The grant date field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      sedol:
        description: " The SEDOL (Stock Exchange Daily Official List) is a set of security identifiers used in the United Kingdom and Ireland for clearing purposes.<br><b>Note:</b> The SEDOL field is only applicable to the trade related transactions<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      vestedSharesExercisable:
        format: "double"
        description: "The number of vested shares that can be exercised by the employee. It is usually equal to the vested quantity.<br><b>Note:</b> The vested shares exercisable field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      spread:
        description: "The difference between the current market value of a stock and the strike price of the employee stock option, when the market value of the shares are greater than the stock price.<br><b>Note:</b> The spread field is only applicable to employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountId:
        format: "int64"
        description: "Unique identifier of the account to which the security is linked.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      couponRate:
        format: "double"
        description: "The stated interest rate for a bond.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      createdDate:
        description: "The date on which the holding is created in the Yodlee system.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      accruedIncome:
        description: "The accruedIncome of the  holding.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      securityType:
        description: "Indicates the security type of holding identified through the security service.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      providerAccountId:
        format: "int64"
        description: "Unique identifier for the user's association with the provider.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      unvestedQuantity:
        format: "double"
        description: "Indicates the number of unvested quantity or units.<br><b>Note:</b> The unvested quantity field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      costBasis:
        description: "In a one-off security purchase, the cost basis is the quantity acquired multiplied by the price per unit paid plus any commission paid. In case, the same position is acquired in different lots on different days at different prices, the sum total of the cost incurred is divided by the total units acquired to arrive at the average cost basis.<br><br><b>Applicable containers</b>: investment <br>"
        readOnly: true
        $ref: "#/definitions/Money"
      vestingDate:
        description: "The date on which a RSU, RSA, or an employee stock options become vested.<br><b>Note:</b> The vesting date field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isin:
        description: " The ISIN (International Securities Identification Number) is used worldwide to identify specific securities. It is equivalent to CUSIP for international markets.<br><b>Note:</b> The ISIN field is only applicable to the trade related transactions<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      strikePrice:
        description: "The strike (exercise) price for the option position.<br><b>Note:</b> The strike price field is only applicable to options and employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  FieldOperation:
    type: "object"
    title: "FieldOperation"
    properties:
      field:
        description: "Field for which the clause is created.<br><br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan<br><b>Applicable Values</b>:<ul><li>amount</li><li>description</li></ul><b>Applicable Values</b><br>\n* amount: The rule created will be based on the amount field.<br>\n* description: The rule created will be based on the description field.<br>"
        type: "string"
        enum:
        - "amount"
        - "description"
      operation:
        description: "Operation for which the clause is created.<br><br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan<br><b>Applicable values (depends on the value of field)</b>:<ul><li>field is <b>description</b> -> operation can be<ol><li>stringEquals</li><li>stringContains</li></ol></li><li>field is <b>amount</b> -> operation can be<ol><li>numberEquals</li><li>numberLessThan</li><li>numberLessThanEquals</li><li>numberGreaterThan</li><li>numberGreaterThanEquals</li></ol></li></ul><b>Applicable Values</b><br>\n* numberEquals: The rule gets applied only when the amount field is equal to the specified value.<br>\n* numberLessThan: The rule gets applied only when the amount field is lesser than the specified value.<br>\n* numberLessThanEquals: The rule gets applied only when the amount field is less than or equal to the specified value.<br>\n* numberGreaterThan: The rule gets applied only when the amount field is greater than the specified value.<br>\n* numberGreaterThanEquals: The rule gets applied only when the amount field is greater than or equal to the specified value.<br>\n* stringEquals: The rule gets applied only when the description field equals the specified value.<br>\n* stringContains: The rule gets applied only when the description field contains the specified value.<br>"
        type: "string"
        enum:
        - "numberEquals"
        - "numberLessThan"
        - "numberLessThanEquals"
        - "numberGreaterThan"
        - "numberGreaterThanEquals"
        - "stringEquals"
        - "stringContains"
      value:
        description: "The value would be the amount value in case of amount based rule clause or the string value in case of description based rule clause.<br><br><b>Applicable containers</b>: bank, creditCard, investment, insurance, loan<br><b>Applicable Values</b>:<ul><li>field is <b>description</b> -> value should be <b>min of 3 and max of 50 characters</b></li><li>field is <b>amount</b> -> value should be <b> min value of 0 and a max value of 99999999999.99</b></li></ul>"
        type: "object"
  VerificationBankTransferCode:
    type: "object"
    title: "VerificationBankTransferCode"
    properties:
      id:
        type: "string"
      type:
        type: "string"
        enum:
        - "BSB"
        - "IFSC"
        - "ROUTING_NUMBER"
        - "SORT_CODE"
  AccountHistoricalBalancesResponse:
    type: "object"
    title: "AccountHistoricalBalancesResponse"
    properties:
      account:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountHistory"
  UserRequest:
    type: "object"
    title: "UserRequest"
    properties:
      user:
        $ref: "#/definitions/UserRegistration"
  DerivedHoldingsSummary:
    type: "object"
    title: "DerivedHoldingsSummary"
    properties:
      holding:
        description: "Securities that belong to the asset classification type and contributed to the summary value.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedHolding"
      classificationType:
        description: "The classification type of the security. The supported asset classification type and the values are provided in the /holdings/assetClassificationList.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      classificationValue:
        description: "The classification value that corresponds to the classification type of the holding. The supported asset classification type and the values are provided in the /holdings/assetClassificationList.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      value:
        description: "Summary value of the securities.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      account:
        description: "Accounts that contribute to the classification. <br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DerivedHoldingsAccount"
  PaymentProfile:
    type: "object"
    title: "PaymentProfile"
    properties:
      identifier:
        description: "The additional information such as platform code or payment reference number that is required to make payments.<br><b>Additional Details:</b>The identifier field applies only to the student loan account type.<br><br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        $ref: "#/definitions/Identifier"
      address:
        description: "The address of the lender to which the monthly payments or the loan payoff amount should be paid. <br><b>Additional Details:</b>The address field applies only to the student loan account type.<br><b>Account Type</b>: Aggregated<br><b>Applicable containers</b>: loan<br><b>Endpoints</b>:<br><ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        type: "array"
        items:
          $ref: "#/definitions/AccountAddress"
  UpdateAccountInfo:
    type: "object"
    title: "UpdateAccountInfo"
    properties:
      accountStatus:
        type: "string"
      amountDue:
        $ref: "#/definitions/Money"
      includeInNetWorth:
        type: "boolean"
      balance:
        $ref: "#/definitions/Money"
      accountName:
        type: "string"
      dueDate:
        type: "string"
      nickname:
        type: "string"
      memo:
        type: "string"
      homeValue:
        $ref: "#/definitions/Money"
      accountNumber:
        type: "string"
  ProvidersCountResponse:
    type: "object"
    title: "ProvidersCountResponse"
    properties:
      provider:
        readOnly: true
        $ref: "#/definitions/ProvidersCount"
  DataExtractsEvent:
    type: "object"
    title: "DataExtractsEvent"
    properties:
      data:
        readOnly: true
        $ref: "#/definitions/DataExtractsEventData"
      info:
        readOnly: true
        type: "string"
  DataExtractsEventUserData:
    type: "object"
    title: "DataExtractsEventUserData"
    properties:
      links:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsEventLinks"
      user:
        readOnly: true
        $ref: "#/definitions/DataExtractsUser"
  CoverageAmount:
    type: "object"
    title: "CoverageAmount"
    properties:
      cover:
        description: "The maximum amount that will be paid to an individual or an entity for a covered loss<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
      unitType:
        description: "The type of coverage unit indicates if the coverage is for an individual or a family.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* PER_FAMILY: Indicates the health insurance coverage is for the complete family.<br>\n* PER_MEMBER: Indicates the health insurance coverage is for an individual.<br>"
        readOnly: true
        type: "string"
        enum:
        - "PER_FAMILY"
        - "PER_MEMBER"
      type:
        description: "The type of coverage provided to an individual or an entity.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* DEDUCTIBLE: The amount paid for covered health care services before the health insurance plan starts paying.<br>\n* OUT_OF_POCKET: The maximum amount the insurer has to pay for covered health care services in a plan year.<br>\n* ANNUAL_BENEFIT: A cap on the benefits the insurance company will pay in a year while the insurer is enrolled in a particular health insurance plan.<br>\n* MAX_BENEFIT: The maximum amount the insurance company pays for nonessential healthcare services.<br>\n* COVERAGE_AMOUNT: The maximum amount payable in the event of a claim by the policyholder.<br>\n* MONTHLY_BENEFIT: As part of the income protection cover, the monthly amount provided as financial support in the event of sickness or injury.<br>\n* OTHER: Any coverage type other than what has been listed here.<br>"
        readOnly: true
        type: "string"
        enum:
        - "DEDUCTIBLE"
        - "OUT_OF_POCKET"
        - "ANNUAL_BENEFIT"
        - "MAX_BENEFIT"
        - "COVERAGE_AMOUNT"
        - "MONTHLY_BENEFIT"
        - "OTHER"
      limitType:
        description: "The type of coverage limit indicates if the coverage is in-network or out-of-network.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* IN_NETWORK: Indicates the doctor or facility providing the health care services has negotiated a contracted rate with the health insurance company.<br>\n* OUT_NETWORK: Indicates the doctor or facility providing health care services has no contract with the health insurance company.<br>"
        readOnly: true
        type: "string"
        enum:
        - "IN_NETWORK"
        - "OUT_NETWORK"
      met:
        description: "The amount the insurance company paid for the incurred medical expenses.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Money"
  AddedProviderAccountResponse:
    type: "object"
    title: "AddedProviderAccountResponse"
    properties:
      providerAccount:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AddedProviderAccount"
  UpdateCategoryRequest:
    type: "object"
    title: "UpdateCategoryRequest"
    properties:
      highLevelCategoryName:
        type: "string"
      id:
        format: "int64"
        type: "integer"
      source:
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      categoryName:
        type: "string"
  VerificationAccount:
    type: "object"
    title: "VerificationAccount"
    properties:
      accountType:
        type: "string"
        enum:
        - "SAVINGS"
        - "CHECKING"
      accountNumber:
        type: "string"
      bankTransferCode:
        $ref: "#/definitions/VerificationBankTransferCode"
  DerivedTransactionsLinks:
    type: "object"
    title: "DerivedTransactionsLinks"
    properties:
      transactions:
        description: "Link of the transaction API service that corresponds to the value derivation.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        type: "string"
  TransactionCountResponse:
    type: "object"
    title: "TransactionCountResponse"
    properties:
      transaction:
        readOnly: true
        $ref: "#/definitions/TransactionCount"
  Transaction:
    type: "object"
    title: "Transaction"
    properties:
      date:
        description: "The value provided will be either postDate or transactionDate. postDate takes higher priority than transactionDate, except for the investment container as only transactionDate is available. The availability of postDate or transactionDate depends on the provider site.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      symbol:
        description: "The symbol of the security being traded.<br><b>Note</b>: The settle date field applies only to trade-related transactions. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      cusipNumber:
        description: "The CUSIP (Committee on Uniform Securities Identification Procedures) identifies the financial instruments in the United States and Canada.<br><b><br><b>Note</b></b>: The CUSIP number field applies only to trade related transactions.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      highLevelCategoryId:
        format: "int64"
        description: "The high level category assigned to the transaction. The supported values are provided by the GET transactions/categories. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      detailCategoryId:
        format: "int64"
        description: "The id of the detail category that is assigned to the transaction. The supported values are provided by GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard<br>"
        readOnly: true
        type: "integer"
      description:
        description: "Description details<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Description"
      memo:
        description: "Additional notes provided by the user for a particular  transaction through application or API services. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      settleDate:
        description: "It is the date on which the transaction is finalized, that is, the date the ownership of the security is transferred to the buyer. The settlement date is usually few days after the transaction date.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      type:
        description: "The nature of the transaction, i.e., deposit, refund, payment, etc.<br><b>Note</b>: The transaction type field is available only for the United States, Canada, United Kingdom, and India based provider sites. <br><br><b>Applicable containers</b>: bank,creditCard,investment<br>"
        readOnly: true
        type: "string"
      baseType:
        description: "Indicates if the transaction appears as a debit or a credit transaction in the account. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* CREDIT: Denotes that the transactions are being credited to the account.<br>\n* DEBIT: Denotes that the transactions are getting debited to the account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "CREDIT"
        - "DEBIT"
      categorySource:
        description: "Indicates the source of the category, i.e., categories derived by the system or assigned/provided by the consumer. This is the source field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* SYSTEM: The category assigned to the transaction is a system defined category.<br>\n* USER: The category assigned to the transaction is a user defined category.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      principal:
        description: "The portion of the principal in the transaction amount. The transaction amount can be the amount due, payment amount, minimum amount, repayment, etc.<br><br><b>Applicable containers</b>: loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      lastUpdated:
        readOnly: true
        type: "string"
      interest:
        description: "The portion of interest in the transaction amount. The transaction amount can be the amount due, payment amount, minimum amount, repayment, etc.<br><br><b>Applicable containers</b>: loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      price:
        description: "The price of the security for the transaction.<br><b>Note</b>: The price field applies only to the trade related transactions. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      commission:
        description: "A commission or brokerage associated with a transaction.<br><br><br><b>Additional Details</b>:The commission only applies to trade-related transactions.<b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      id:
        format: "int64"
        description: "An unique identifier for the transaction. The combination of the id and account container are unique in the system. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      amount:
        description: "The amount of the transaction as it appears at the FI site. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      checkNumber:
        description: "The checkNumber of the transaction.<br><br><b>Applicable containers</b>: bank<br>"
        readOnly: true
        type: "string"
      quantity:
        format: "double"
        description: "The quantity associated with the transaction.<br><b>Note</b>: The quantity field applies only to trade-related transactions.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      isManual:
        description: "Indicates if the transaction is aggregated from the FI site or the consumer has manually created the transaction using the application or an API. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "boolean"
      merchant:
        description: "The name of the merchant associated with the transaction.<br><b>Note</b>: The merchant name field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        $ref: "#/definitions/Merchant"
      transactionDate:
        description: "The date the transaction happens in the account. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      categoryType:
        description: "The categoryType of the category assigned to the transaction. This is the type field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>\n* TRANSFER: The transaction category belongs to a transfer category type.<br>\n* DEFERRED_COMPENSATION: The transaction category belongs to deferred compensation type.<br>\n* UNCATEGORIZE: The transaction does not seem to be categorized.<br>\n* INCOME: The transaction category belongs to an income type.<br>\n* EXPENSE: The transaction category belongs to an expense type.<br>"
        readOnly: true
        type: "string"
        enum:
        - "TRANSFER"
        - "DEFERRED_COMPENSATION"
        - "UNCATEGORIZE"
        - "INCOME"
        - "EXPENSE"
      accountId:
        format: "int64"
        description: "The account from which the transaction was made. This is basically the primary key of the account resource. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      createdDate:
        readOnly: true
        type: "string"
      sourceType:
        description: "The source through which the transaction is added to the Yodlee system.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loann<br><b>Applicable Values:</b><br>\n* AGGREGATED: Indicates that the transactions is aggregated from the provider site.<br>\n* MANUAL: Indicates that the transaction is created manually by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "AGGREGATED"
        - "MANUAL"
      CONTAINER:
        description: "The account's container.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* bank: Applicable for Aggregated and Manual<br>\n* creditCard: Applicable for Aggregated and Manual<br>\n* investment: Applicable for Aggregated and Manual<br>\n* insurance: Applicable for Aggregated and Manual<br>\n* loan: Applicable for Aggregated and Manual<br>\n* reward: Applicable for Aggregated and Manual<br>\n* bill: Applicable for Aggregated and Manual<br>\n* realEstate: Applicable for Manual<br>\n* otherAssets: Applicable for Manual<br>\n* otherLiabilities: Applicable for Manual"
        readOnly: true
        type: "string"
        enum:
        - "bank"
        - "creditCard"
        - "investment"
        - "insurance"
        - "loan"
        - "reward"
        - "bill"
        - "realEstate"
        - "otherAssets"
        - "otherLiabilities"
      postDate:
        description: "The date on which the transaction is posted to the account.<br><br><b>Applicable containers</b>: bank,creditCard,insurance,loan<br>"
        readOnly: true
        type: "string"
      parentCategoryId:
        format: "int64"
        description: "The parentCategoryId of the category assigned to the transaction.<br><b>Note</b>: This field will be provided in the response if the transaction is assigned to a user-created category. <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      subType:
        description: "The transaction subtype field provides a detailed transaction type. For example, purchase is a transaction type and the transaction subtype field indicates if the purchase was made using a debit or credit card.<br><b>Note</b>: The transaction subtype field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
        enum:
        - "AUTH_HOLD"
        - "AUTH_REQUEST"
        - "OVERDRAFT_CHARGE"
        - "CREDIT_ADJUSTMENT"
        - "PIN_DEBIT"
        - "BANK_DIRECT_DEPOSIT"
        - "DIVIDEND_DEPOSIT"
        - "INTEREST_SAVINGS"
        - "INTEREST_ADJUSTMENT"
        - "ONLINE_PURCHASE"
        - "PURCHASED_WITH_CHECK"
        - "RECURRING_BILLING"
        - "TAX_PAYMENT"
        - "PAYMENT_BY_CHECK"
        - "PAYMENT_PLAN"
        - "FEE_REFUND"
        - "WIRE_TRANSFER_CHARGE"
        - "ACCOUNT_TO_ACCOUNT_TRANSFER"
        - "BANK_TO_BANK_TRANSACTION"
        - "BANK_TO_NON_BANK_ACCOUNT_TRANSFER"
        - "CASH_WITHDRAWAL_AT_FI"
        - "ATM_CASH_WITHDRAWAL"
        - "AUTH_PROCESSING"
        - "AUTH_RELEASE"
        - "PRE_AUTH"
        - "AUTH_COMPLETE"
        - "AUTH_VOID"
        - "BALANCE_ENQUIRY"
        - "ACCOUNT_VERIFICATION"
        - "PRE_AUTH_COMPLETION"
        - "SERVICE_CHARGE"
        - "SERVICE_CHARGE_FEE_REFUND"
        - "RETURNED_CHECK_CHARGE"
        - "RETURNED_CHECK_REIMBURSEMENT"
        - "CASH_ADVANCE"
        - "BILL_PAY_CHARGE"
        - "CHECK_IMAGE_SERVICE_CHARGE"
        - "OVERDRAFT_PROTECTION_CHARGE"
        - "STOP_PAYMENT_CHARGE"
        - "CHECKS_ORDERING_CHARGE"
        - "MONTHLY_MAINTENANCE_CHARGE"
        - "DEBIT_CARD_FEE"
        - "CONVENIENCE_FEE"
        - "PERSONAL_LOAN_CREDIT"
        - "CREDIT_CARD_CREDIT"
        - "AUTO_LOAN"
        - "HOME_LOAN_MORTGAGE"
        - "SHORT_TERM_CREDIT"
        - "SIGNATURE_DEBIT"
        - "CONTACT_LESS_DEBIT"
        - "DEFERRED_DEPOSIT"
        - "DEFERRED_BILL_PAY"
        - "INSTALLMENT_PAYMENT"
        - "RECURRING_SUBSCRIPTION_PAYMENT"
        - "HOLD_CHECK_PAYMENT"
        - "CAPITAL_GAINS_DISTIBUTION"
        - "CG_LONG_TERM_DEPOSIT"
        - "OPEN_SALE_DEPOSIT"
        - "INTEREST__CHECK"
        - "PURCHASE_VOID"
        - "PURCHASE_WITH_CREDIT_CARD"
        - "PURCHASE_WITH_DEBIT_CARD"
        - "CHARGE_A_REPEAT_CUSTOMER"
        - "DOWN_PAYMENT_OR_ANNUITY_PAYMENT_OR_DIRECT_PAYMENT"
        - "FEE_PAYMENT"
        - "FINANCE_CHARGE_REFUND"
        - "TRANSACTION_VOID"
        - "FEE_VOID"
        - "DEBIT_CARD_WITHDRAWAL_AT_STORE"
        - "ELECTRONIC_PAYMENT"
        - "ACH_DEBIT"
        - "ATM_TELLER_DEPOSIT"
        - "POS_DEBIT"
        - "BANK_ADJUSTMENT"
        - "CHARGES_FEES"
        - "INTEREST"
        - "DEPOSITS_CREDITS"
        - "PAYMENT"
        - "PURCHASE"
        - "REFUND"
        - "TRANSFER"
        - "WITHDRAWAL"
        - "OTHER_DEPOSITS"
        - "OTHER_WITHDRAWALS"
        - "ADJUSTMENT"
        - "FINANCE_CHARGE"
        - "OTHER_CHARGES_FEES"
        - "ANNUAL_FEE"
        - "DEPOSIT"
        - "DIRECT_DEPOSIT_SALARY"
        - "INVESTMENT_INCOME_CASH"
        - "SSA"
        - "REWARDS"
        - "CHECK_DEPOSIT"
        - "MOBILE_REMOTE_DEPOSIT"
        - "TELLER_DEPOSIT"
        - "TAX_REFUND"
        - "CREDIT_CARD_PAYMENT"
        - "INSURANCE_PAYMENT"
        - "UTILITIES_PAYMENT"
        - "CHILD_SUPPORT"
        - "LOAN"
        - "PERSONAL_LOAN"
        - "STUDENT_LOAN"
        - "SALES_TAX"
        - "REIMBURSEMENT"
        - "BALANCE_TRANSFER"
        - "WIRE_TRANSFER"
        - "OVERDRAFT_PROTECTION"
        - "DEBIT"
        - "CREDIT"
        - "NSF_FEES"
      category:
        description: "The name of the category assigned to the transaction. This is the category field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "string"
      runningBalance:
        description: "The running balance in an account indicates the balance of the account after every transaction.<br><br><b>Applicable containers</b>: bank,creditCard,investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      categoryId:
        format: "int64"
        description: "The id of the category assigned to the transaction. This is the id field of the transaction category resource. The supported values are provided by the GET transactions/categories.<br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br>"
        readOnly: true
        type: "integer"
      holdingDescription:
        description: "For transactions involving securities, this captures the securities description.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      status:
        description: "The status of the transaction: pending or posted.<br><b>Note</b>: Most FI sites only display posted transactions. If the FI site displays transaction status, same will be aggregated.  <br><br><b>Applicable containers</b>: bank,creditCard,investment,insurance,loan<br><b>Applicable Values</b><br>\n* POSTED: Denotes that the transaction is realized on the account's balance.<br>\n* PENDING: Denotes that the transaction is not yet realized on the account's balance.<br>\n* SCHEDULED: Denotes that the transacation is a future dated transaction.<br>\n* FAILED: Denotes the failed transactions. It is only applicable to rejected claims in a Flexible Spending account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "POSTED"
        - "PENDING"
        - "SCHEDULED"
        - "FAILED"
  Option:
    type: "object"
    title: "Option"
    properties:
      displayText:
        description: "The text that is displayed to the user for that option in the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      optionValue:
        description: "The value that is associated with the option.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      isSelected:
        description: "The option that is selected by default in the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "boolean"
  AccountResponse:
    type: "object"
    title: "AccountResponse"
    properties:
      account:
        type: "array"
        items:
          $ref: "#/definitions/Account"
  ProviderAccountPreferencesRequest:
    type: "object"
    title: "ProviderAccountPreferencesRequest"
    properties:
      preferences:
        description: "The preference set for the provider account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>"
        $ref: "#/definitions/ProviderAccountPreferences"
  Row:
    type: "object"
    title: "Row"
    properties:
      fieldRowChoice:
        description: "Fields that belong to a particular choice are collected together using this field.<br><b>Recommendations</b>: All the field row choices label to be grouped and displayed as options to the customer. On choosing a particular choice field, we recommend displaying the fields relevant to them. First field choice could be selected by default.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      field:
        description: "Details of fields that belong to the row.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "array"
        items:
          $ref: "#/definitions/Field"
      form:
        description: "Form denotes the set of the fields that are related. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      id:
        format: "int64"
        description: "Unique identifier of the row.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "integer"
      label:
        description: "The label text displayed for a row in the form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
  AccountDataset:
    type: "object"
    title: "AccountDataset"
    properties:
      lastUpdated:
        description: "Indicate when the dataset is last updated successfully for the given provider account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      updateEligibility:
        description: "Indicate whether the dataset is eligible for update or not.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* ALLOW_UPDATE: This status indicates that the account is eligible for next update.<br>\n* ALLOW_UPDATE_WITH_CREDENTIALS: The status indicates to update or refresh the account by directing the user to edit the provided credentials.<br>\n* DISALLOW_UPDATE: The status indicates the account is not eligible for the update or refresh process due to a site issue or a technical error.<br>"
        readOnly: true
        type: "string"
        enum:
        - "ALLOW_UPDATE"
        - "ALLOW_UPDATE_WITH_CREDENTIALS"
        - "DISALLOW_UPDATE"
      additionalStatus:
        description: "The status of last update attempted for the dataset. <br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* LOGIN_IN_PROGRESS: <br><b>Description: </b>Login to provider site is in progress<br><b>Next Action: </b>Not applicable as it is not a final status.<br>\n* DATA_RETRIEVAL_IN_PROGRESS: <br><b>Description: </b>Data aggregation is in progress.<br><b>Next Action: </b>Not applicable as it is not a final status.<br>\n* ACCT_SUMMARY_RECEIVED: <br><b>Description: </b>Basic account data is retrieved. <br><b>Next Action: </b>Not applicable as it is not a final status.<br>\n* AVAILABLE_DATA_RETRIEVED: <br><b>Description: </b>All the data available at the provider site is retrieved for the provided dataset.<br><b>Next Action: </b>Not applicable.<br>\n* PARTIAL_DATA_RETRIEVED: <br><b>Description: </b>Partial data is retrieved for the dataset.<br><b>Next Action: </b>Instruct the user to try again if the mandatory data is missing. If the request fails repeatedly, report the issue to the customer service team.<br>\n* DATA_RETRIEVAL_FAILED: <br><b>Description: </b>Failed to retrieve the data due to unexpected issues.<br><b>Next Action: </b>Instruct the user to try again later. If the request fails repeatedly, report the issue to the customer service team.<br>\n* DATA_NOT_AVAILABLE: <br><b>Description: </b>The requested data or document is not available at the provider site. <br><b>Next Action: </b>Instruct the user to check with the respective data provider or provider site. <br>\n* ACCOUNT_LOCKED: <br><b>Description: </b>The account is locked at the provider site. The user has exceeded the maximum number of incorrect login attempts resulting in the account getting locked.<br><b>Next Action: </b>Instruct the user to visit the provider site and take necessary actions to unlock the account.<br>\n* ADDL_AUTHENTICATION_REQUIRED: <br><b>Description: </b><br><b>Next Action: </b><br>\n* BETA_SITE_DEV_IN_PROGRESS: <br><b>Description: </b><br><b>Next Action: </b><br>\n* CREDENTIALS_UPDATE_NEEDED: <br><b>Description: </b>Unable to log in to the provider site due to outdated credentials. The site may be prompting the user to change or verify the credentials. <br><b>Next Action: </b>Instruct the user to visit the provider site and perform the required actions, and invoke the edit account flow to update the credentials in the Yodlee system.<br>\n* INCORRECT_CREDENTIALS: <br><b>Description: </b>Unable to log in to the provider site due to incorrect credentials. The credentials that the user has provided are incorrect.<br><b>Next Action: </b>Instruct the user to provide the correct credentials by invoking the edit account flow. <br>\n* PROPERTY_VALUE_NOT_AVAILABLE: <br><b>Description: </b>The property value is not available.<br><b>Next Action: </b>Instruct the user to provide the property value.<br>\n* INVALID_ADDL_INFO_PROVIDED: <br><b>Description: </b>The user has provided incorrect MFA information or the MFA information provided has expired.<br><b>Next Action: </b>Instruct the user to provide the correct MFA information.<br>\n* REQUEST_TIME_OUT: <br><b>Description: </b>The request has timed-out due to technical reasons.<br><b>Next Action: </b>Instruct the user to try again later. If the request fails repeatedly, report the issue to the customer service team.<br>\n* SITE_BLOCKING_ERROR: <br><b>Description: </b>The Yodlee IP is blocked by the provider site.<br><b>Next Action: </b>Instruct the user to try again later. If the request fails repeatedly, report the issue to the customer service team.<br>\n* UNEXPECTED_SITE_ERROR: <br><b>Description: </b>All error indicating issues at the provider site, such as the site is down for maintenance.<br><b>Next Action: </b>Instruct the user to try again later. If the request fails repeatedly, report the issue to the customer service team.<br>\n* SITE_NOT_SUPPORTED: <br><b>Description: </b>Indicates that the site does not support the requested data or support is not available to complete the requested action. For example, site not available, document download not supported at the site, etc.<br><b>Next Action: </b>Inform the user about the latest available status.<br>\n* SITE_UNAVAILABLE: <br><b>Description: </b>The provider site is unavailable due to issues such as the site is down for maintenance.<br><b>Next Action: </b>Instruct the user to try again later. If the request fails repeatedly, report the issue to the customer service team.<br>\n* TECH_ERROR: <br><b>Description: </b>Indicates there is a technical error. <br><b>Next Action: </b> Instruct the user to try again later. If the request fails repeatedly, report the issue to the customer service team.</b><br>\n* USER_ACTION_NEEDED_AT_SITE: <br><b>Description: </b>The errors that require users to take action at the provider site, for example, accept T&C, etc.<br><b>Next Action: </b>Instruct the user to visit the provider site and perform the necessary action.<br>\n* SITE_SESSION_INVALIDATED: <br><b>Description: </b>Indicates if multiple sessions or a session is terminated by the provider site.<br><b>Next Action: </b>Instruct the user to try again later.<br>\n* NEW_AUTHENTICATION_REQUIRED: <br><b>Description: </b>The site has requested for OAuth authentication.<br><b>Next Action: </b>The OAUTH based authentication sites can be added or updated only using Yodlee FastLink and not Yodlee APIs. Instruct the user to add the account using FastLink.<br>\n* DATASET_NOT_SUPPORTED: <br><b>Description: </b>The requested datasets are not supported.<br><b>Next Action: </b>Either get the dataset/attribute enabled or remove the dataset/attribute from the input.<br>\n* ENROLLMENT_REQUIRED_FOR_DATASET: <br><b>Description: </b>The dataset cannot be retrieved as the user has not enrolled for it.<br><b>Next Action: </b>Instruct the user to enroll for the dataset and then request for it.<br>"
        readOnly: true
        type: "string"
        enum:
        - "LOGIN_IN_PROGRESS"
        - "DATA_RETRIEVAL_IN_PROGRESS"
        - "ACCT_SUMMARY_RECEIVED"
        - "AVAILABLE_DATA_RETRIEVED"
        - "PARTIAL_DATA_RETRIEVED"
        - "DATA_RETRIEVAL_FAILED"
        - "DATA_NOT_AVAILABLE"
        - "ACCOUNT_LOCKED"
        - "ADDL_AUTHENTICATION_REQUIRED"
        - "BETA_SITE_DEV_IN_PROGRESS"
        - "CREDENTIALS_UPDATE_NEEDED"
        - "INCORRECT_CREDENTIALS"
        - "PROPERTY_VALUE_NOT_AVAILABLE"
        - "INVALID_ADDL_INFO_PROVIDED"
        - "REQUEST_TIME_OUT"
        - "SITE_BLOCKING_ERROR"
        - "UNEXPECTED_SITE_ERROR"
        - "SITE_NOT_SUPPORTED"
        - "SITE_UNAVAILABLE"
        - "TECH_ERROR"
        - "USER_ACTION_NEEDED_AT_SITE"
        - "SITE_SESSION_INVALIDATED"
        - "NEW_AUTHENTICATION_REQUIRED"
        - "DATASET_NOT_SUPPORTED"
        - "ENROLLMENT_REQUIRED_FOR_DATASET"
      nextUpdateScheduled:
        description: "Indicates when the next attempt to update the dataset is scheduled.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      name:
        description: "The name of the dataset requested from the provider site<br><br><b>Account Type</b>: Manual<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li><li>GET providers</li></ul><b>Applicable Values</b><br>\n* BASIC_AGG_DATA: Indicates basic aggregation data like accounts, transactions, etc.<br>\n* ADVANCE_AGG_DATA: Indicates advance aggregation data like interest details and payment details.<br>\n* ACCT_PROFILE: Indicates account profile datas like full account number, routing number, etc.<br>\n* DOCUMENT: Indicates document data like bank statements, tax documents, etc.<br>"
        type: "string"
        enum:
        - "BASIC_AGG_DATA"
        - "ADVANCE_AGG_DATA"
        - "ACCT_PROFILE"
        - "DOCUMENT"
      lastUpdateAttempt:
        description: "Indicate when the last attempt was performed to update the dataset for the given provider account<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
  UpdateUserRequest:
    type: "object"
    title: "UpdateUserRequest"
    properties:
      user:
        $ref: "#/definitions/UpdateUserRegistration"
  RuleClause:
    type: "object"
    title: "RuleClause"
    properties:
      field:
        description: "Field for which the clause is created.<br><br><br><b>Valid Values</b>:amount,description<b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>\n* amount: The rule created will be based on the amount field.<br>\n* description: The rule created will be based on the description field.<br>"
        readOnly: true
        type: "string"
        enum:
        - "amount"
        - "description"
      userDefinedRuleId:
        format: "int64"
        description: "Unique identifier generated for every rule the user creates.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
      fieldValue:
        description: "The value would be the amount value in case of amount based rule clause or the string value in case of description based rule clause.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "string"
      operation:
        description: "Operation for which the clause is created.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>\n* numberEquals: The rule gets applied only when the amount field is equal to the specified value.<br>\n* numberLessThan: The rule gets applied only when the amount field is lesser than the specified value.<br>\n* numberLessThanEquals: The rule gets applied only when the amount field is less than or equal to the specified value.<br>\n* numberGreaterThan: The rule gets applied only when the amount field is greater than the specified value.<br>\n* numberGreaterThanEquals: The rule gets applied only when the amount field is greater than or equal to the specified value.<br>\n* stringEquals: The rule gets applied only when the description field equals the specified value.<br>\n* stringContains: The rule gets applied only when the description field contains the specified value.<br>"
        readOnly: true
        type: "string"
        enum:
        - "numberEquals"
        - "numberLessThan"
        - "numberLessThanEquals"
        - "numberGreaterThan"
        - "numberGreaterThanEquals"
        - "stringEquals"
        - "stringContains"
      ruleClauseId:
        format: "int64"
        description: "Unique identifier generated for the rule clause.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
  DataExtractsEventData:
    type: "object"
    title: "DataExtractsEventData"
    properties:
      fromDate:
        readOnly: true
        type: "string"
      userData:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsEventUserData"
      userCount:
        format: "int32"
        readOnly: true
        type: "integer"
      toDate:
        readOnly: true
        type: "string"
  ProviderAccountPreferences:
    type: "object"
    title: "ProviderAccountPreferences"
    properties:
      isDataExtractsEnabled:
        description: "Indicates if the updates to the provider account should be part of the data extracts event notification or the data extract data retrieval service.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>"
        type: "boolean"
      linkedProviderAccountId:
        format: "int64"
        description: "The open banking providerAccount with which the userâ€™s credential-based providerAccount is linked..Additional Details: This field is relevant to the Open Banking supported data providers, a feature that is currently available only in the UK region.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        type: "integer"
      isAutoRefreshEnabled:
        description: "Indicates if auto-refreshes have to be triggered for the provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>"
        type: "boolean"
  CreateAccountInfo:
    type: "object"
    title: "CreateAccountInfo"
    properties:
      accountStatus:
        type: "string"
      amountDue:
        $ref: "#/definitions/Money"
      includeInNetWorth:
        type: "boolean"
      balance:
        $ref: "#/definitions/Money"
      accountName:
        type: "string"
      accountType:
        type: "string"
      dueDate:
        type: "string"
      nickname:
        type: "string"
      memo:
        type: "string"
      homeValue:
        $ref: "#/definitions/Money"
      accountNumber:
        type: "string"
      valuationType:
        type: "string"
  User:
    type: "object"
    title: "User"
    properties:
      preferences:
        description: "Preferences of the user to be respected in the data provided through various API services.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        $ref: "#/definitions/UserResponsePreferences"
      session:
        description: "Session token of the user using which other services are invoked in the system.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li></ul>"
        readOnly: true
        $ref: "#/definitions/UserSession"
      loginName:
        description: "The login name of the user used for authentication.<br><br><b>Endpoints</b>:<ul><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        type: "string"
      name:
        description: "First, middle and last names of the user.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        $ref: "#/definitions/Name"
      id:
        format: "int64"
        description: "The unique identifier of a consumer/user in Yodlee system for whom the API services would be accessed for.<br><br><b>Endpoints</b>:<ul><li>POST user/samlLogin</li><li>POST user/register</li><li>GET user</li></ul>"
        readOnly: true
        type: "integer"
      roleType:
        type: "string"
        enum:
        - "INDIVIDUAL"
  UpdateVerification:
    type: "object"
    title: "UpdateVerification"
    properties:
      accountId:
        format: "int64"
        description: "Unique identifier for the account.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        type: "integer"
      reason:
        description: "The reason the account verification failed.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>\n* DATA_NOT_AVAILABLE: <br><b>Description: </b>The account holder's name related details are not available at the FI site.\n* ACCOUNT_HOLDER_MISMATCH: <br><b>Description: </b>The account verification process has failed due to account holder's data mismatch\n* FULL_ACCOUNT_NUMBER_AND_BANK_TRANSFER_CODE_NOT_AVAILABLE: <br><b>Description: </b>The account verification process has failed as the full account number and bank transfer code are not available.\n* FULL_ACCOUNT_NUMBER_NOT_AVAILABLE: <br><b>Description: </b>The account verification process has failed as the full account number is not available.\n* BANK_TRANSFER_CODE_NOT_AVAILABLE: <br><b>Description: </b>The account verification process has failed as the bank transfer code is not available.\n* EXPIRED: <br><b>Description: </b>The time limit to verify the microtransaction details has expired.\n* DATA_MISMATCH: <br><b>Description: </b>The account verification process has failed due to data mismatch.\n* INSTRUCTION_GENERATION_ERROR: <br><b>Description: </b>The consumer's account verification has failed."
        readOnly: true
        type: "string"
        enum:
        - "DATA_NOT_AVAILABLE"
        - "ACCOUNT_HOLDER_MISMATCH"
        - "FULL_ACCOUNT_NUMBER_AND_BANK_TRANSFER_CODE_NOT_AVAILABLE"
        - "FULL_ACCOUNT_NUMBER_NOT_AVAILABLE"
        - "BANK_TRANSFER_CODE_NOT_AVAILABLE"
        - "EXPIRED"
        - "DATA_MISMATCH"
        - "INSTRUCTION_GENERATION_ERROR"
      verificationStatus:
        description: "The status of the account verification.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul><br><b>Applicable Values</b>\n* INITIATED: <br><b>Description: </b>The account verification process is initiated.<br>\n* DEPOSITED: <br><b>Description: </b>The microdeposits and debits for the CDV process are posted to the consumer's account.<br>\n* SUCCESS: <br><b>Description: </b>The consumer's account verification is successful.<br>\n* FAILED: <br><b>Description: </b>Due to technical issues Yodlee could not post the microtransactions in the user's account.<br>"
        readOnly: true
        type: "string"
        enum:
        - "INITIATED"
        - "DEPOSITED"
        - "SUCCESS"
        - "FAILED"
      providerAccountId:
        format: "int64"
        description: "Unique identifier for the provider account.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        type: "integer"
      verificationType:
        description: "The account verification type.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul><br><b>Applicable Values</b>"
        type: "string"
        enum:
        - "MATCHING"
        - "CHALLENGE_DEPOSIT"
      account:
        $ref: "#/definitions/VerificationAccount"
      transaction:
        type: "array"
        items:
          $ref: "#/definitions/VerificationTransaction"
      verificationDate:
        description: "The date of the account verification.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        readOnly: true
        type: "string"
      verificationId:
        format: "int64"
        description: "Unique identifier for the verification request.<br><br><b>Endpoints</b>:<ul><li>POST verification</li><li>GET verification</li><li>PUT verification</li></ul>"
        readOnly: true
        type: "integer"
  VerificationStatusResponse:
    type: "object"
    title: "VerificationStatusResponse"
    properties:
      verification:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Verification"
  Field:
    type: "object"
    title: "Field"
    properties:
      isValueProvided:
        description: "Indicates that the answer to the security question already exists in the Yodlee system.Persuading the user to provide the answer to the security question again during the edit-credential flow can be avoided.<br><br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=questions</li><li>GET providerAccounts/{providerAccountId}? include=questions</li></ul>"
        readOnly: true
        type: "boolean"
      prefix:
        description: "The prefix string that has to be displayed before the field value.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "string"
      name:
        description: "Name of the field.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "string"
      valueEditable:
        description: "Indicates whether the field is editable or not.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "boolean"
      id:
        description: "Identifier for the field.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      isOptional:
        description: "Indicates if a field is an optional field or a mandatory field.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "boolean"
      suffix:
        description: "The suffix string that has to be displayed next to the field value.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "string"
      type:
        description: "This indicates the display type of the field. For example, text box, image, etc. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul><b>Applicable Values</b><br>\n* text: The field values can be accepted in a clear text when the user enters the values.<br>\n* password: The field values should be accepted in a masked form when the user enters the values.<br>\n* option: The field values should be displayed in a drop down.<br>\n* checkbox: The field values should be displayed in a check box.<br>\n* radio: The field values should be displayed as radio options.<br>\n* image: The field values should be displayed as image<br>"
        readOnly: true
        type: "string"
        enum:
        - "text"
        - "password"
        - "option"
        - "checkbox"
        - "radio"
        - "image"
      value:
        description: "Value expected from the user for the field. This will be blank and is expected to be filled and sent back when submitting the login or MFA information.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        type: "string"
      maxLength:
        format: "int64"
        description: "The maximum length of the login form field.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "integer"
      option:
        description: "Provides the different values that are available for the user to choose. This field is applicable for drop-down or radio field types.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Option"
  Money:
    type: "object"
    title: "Money"
    properties:
      amount:
        format: "double"
        type: "number"
      currency:
        type: "string"
  CreatedAccountResponse:
    type: "object"
    title: "CreatedAccountResponse"
    properties:
      account:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/CreatedAccountInfo"
  ContainerAttributes:
    type: "object"
    title: "ContainerAttributes"
    properties:
      BANK:
        $ref: "#/definitions/TransactionDays"
      LOAN:
        $ref: "#/definitions/TransactionDays"
      CREDITCARD:
        $ref: "#/definitions/TransactionDays"
      INVESTMENT:
        $ref: "#/definitions/TransactionDays"
      INSURANCE:
        $ref: "#/definitions/TransactionDays"
  ProviderDetail:
    type: "object"
    title: "ProviderDetail"
    properties:
      languageISOCode:
        description: "The language in which the provider details are provided. For example, a site supports two languages English and French. English being the primary language, the provider response will be provided in French depending on the user's locale. The language follows the two letter ISO code.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      favicon:
        description: "Favicon link of the provider.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      countryISOCode:
        description: "Country to which the provider belongs.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      isAddedByUser:
        description: "Indicates that the site has been added by the user at least once.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      PRIORITY:
        description: "Indicates the priority for which the service is invoked.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul><b>Applicable Values</b><br>\n* POPULAR: Popular providers.<br>\n* SUGGESTED: Suggested providers for the user.<br>\n* COBRAND: Yodlee supported providers.<br>\n* SEARCH: Providers matching the search text.<br>"
        readOnly: true
        type: "string"
        enum:
        - "POPULAR"
        - "SUGGESTED"
        - "COBRAND"
        - "SEARCH"
      primaryLanguageISOCode:
        description: "The primary language of the site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      help:
        description: "Text to guide user through linking an account that belongs to the site<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      baseUrl:
        description: "The base URL of the provider's site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      capability:
        description: "Capability of the site<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/Capability"
      loginForm:
        description: "This entity represents the structure of the login or MFA form that is displayed to the user at the provider site. For performance reasons, this field is returned only when a single provider is requested in the request.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/LoginForm"
      loginUrl:
        description: "The login URL of the provider's site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      isAutoRefreshEnabled:
        description: "Indicates if a provider site is auto-refreshed.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "boolean"
      name:
        description: "The name of a provider site.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      logo:
        description: "The logo link of the provider institution. The link will return the logo in the PNG format.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      id:
        format: "int64"
        description: "Unique identifier for the provider site(e.g., financial institution sites, biller sites, lender sites, etc.).<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "integer"
      lastModified:
        description: "Determines when the provider information was updated by Yodlee. If the customer caches the data, the cache is recommended to be refreshed based on this field.<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
      authType:
        description: "The authentication type enabled at the provider site. <br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul><b>Applicable Values</b><br>\n* OAUTH: The site that supports open authentication.<br>\n* CREDENTIALS: The authentication system of the site expects only credentials like userId, password, customer id, etc.<br>\n* MFA_CREDENTIALS: Multifactor authentication is implemented at the provider site.<br>"
        readOnly: true
        type: "string"
        enum:
        - "OAUTH"
        - "CREDENTIALS"
        - "MFA_CREDENTIALS"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents<br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/ProvidersDataset"
      status:
        description: "Determines if the provider is supported for the cobrand (customer), is in the beta stage, etc. <br><br><b>Endpoints</b>:<ul><li>GET providers/{providerId}</li><li>GET providers</li></ul>"
        readOnly: true
        type: "string"
        enum:
        - "Supported"
        - "Beta"
  AccountHolder:
    type: "object"
    title: "AccountHolder"
    properties:
      identifier:
        description: "Identifiers of the account holder.<br><br><b>Aggregated / Manual</b>: Aggregated <br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Identifier"
      gender:
        description: "Identifiers of the account holder.<br><br><b>Aggregated / Manual</b>: Aggregated <br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      ownership:
        description: "Indicates the ownership of the account.<br><br><b>Aggregated / Manual</b>: Aggregated <br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>\n* PRIMARY: The account holder is a primary holder of the account.<br>\n* SECONDARY: The account holder is a secondary holder of the account.<br>\n* CUSTODIAN: The account holder is a custodian of the account.<br>\n* OTHERS: An account ownership other than what has been listed here.<br>\n* POWER_OF_ATTORNEY: The account holder has a power of attorney authorizing him or her to access the account.<br>\n* TRUSTEE: The account holder is a trustee that controls funds for the benefit of another party - an individual or a group.<br>\n* JOINT_OWNER: The account holder has a joint ownership of the account.<br>\n* BENEFICIARY: The account holder is a beneficiary of the account. The beneficiary has no control or ownership of the account while the account owner is alive, but is designated by the account owner to own the account upon the owner's death.<br>\n* AAS: Indicates that the account holder is an authorized account signatory (AAS).<br>\n* BUSINESS: Indicates that the account holder is a business.<br>\n* DBA: Indicates that the account holder is a business using a different name, i.e., doing business as (DBA).<br>\n* TRUST: Indicates that the account holder is a trust.<br>"
        readOnly: true
        type: "string"
        enum:
        - "PRIMARY"
        - "SECONDARY"
        - "CUSTODIAN"
        - "OTHERS"
        - "POWER_OF_ATTORNEY"
        - "TRUSTEE"
        - "JOINT_OWNER"
        - "BENEFICIARY"
        - "AAS"
        - "BUSINESS"
        - "DBA"
        - "TRUST"
      name:
        description: "Name of the account holder.<br><br><b>Aggregated / Manual</b>: Aggregated <br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        $ref: "#/definitions/Name"
      dateOfBirth:
        description: "Date of birth.<br><br><b>Aggregated / Manual</b>: Aggregated <br><b>Applicable containers</b>: bank<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
  ProvidersCount:
    type: "object"
    title: "ProvidersCount"
    properties:
      TOTAL:
        readOnly: true
        $ref: "#/definitions/TotalCount"
  TransactionCategorizationRule:
    type: "object"
    title: "TransactionCategorizationRule"
    properties:
      ruleClauses:
        description: "Details of rules. <br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/RuleClause"
      userDefinedRuleId:
        format: "int64"
        description: "Unique identifier generated for every rule the user creates.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
      categoryLevelId:
        format: "int32"
        description: "The level of the category for which the rule is created.<br><br><b>Applicable containers</b>: bill, creditCard, insurance, loan<br>"
        readOnly: true
        type: "integer"
      transactionCategorisationId:
        format: "int64"
        description: "Category id that is assigned to the transaction when the transaction matches the rule clause. This is the id field of the transaction category resource.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
      memId:
        format: "int64"
        description: "Unique identifier of the user.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
      rulePriority:
        format: "int32"
        description: "The order in which the rules get executed on transactions.<br><br><b>Applicable containers</b>: bill, creditCard, investment, insurance, loan<br>"
        readOnly: true
        type: "integer"
  HoldingTypeListResponse:
    type: "object"
    title: "HoldingTypeListResponse"
    properties:
      holdingType:
        readOnly: true
        type: "array"
        items:
          type: "string"
          enum:
          - "stock"
          - "mutualFund"
          - "bond"
          - "CD"
          - "option"
          - "moneyMarketFund"
          - "other"
          - "remic"
          - "future"
          - "commodity"
          - "currency"
          - "unitInvestmentTrust"
          - "employeeStockOption"
          - "insuranceAnnuity"
          - "unknown"
          - "preferredStock"
          - "ETF"
          - "warrants"
          - "ETN"
  TransactionDays:
    type: "object"
    title: "TransactionDays"
    properties:
      numberOfTransactionDays:
        format: "int32"
        type: "integer"
  Holding:
    type: "object"
    title: "Holding"
    properties:
      symbol:
        description: "The symbol of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      exercisedQuantity:
        format: "double"
        description: "The quantity of the employee stock options that are already exercised or bought by the employee.<br><b>Note</b>: Once the employee stock options is exercised, they are either converted to cash value or equity positions depending on the FI. The exercised quantity field is only applicable to employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      cusipNumber:
        description: "The CUSIP (Committee on Uniform Securities Identification Procedures) identifies most the financial instruments in the United States and Canada.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      assetClassification:
        description: "Asset classification applied to the holding. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AssetClassification"
      vestedQuantity:
        format: "double"
        description: "The quantity of units or shares that are already vested on a vest date.<br><b>Note</b>: The vested quantity field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      description:
        description: "The description (name) for the holding (E.g., Cisco Systems)<br>For insurance container, the field is only applicable for insurance annuity and variable life insurance types. <br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      unvestedValue:
        description: "Indicates the estimated market value of the unvested units.<br><b>Note</b>: FIs usually calculates the unvested value as the market price unvested quantity. The unvested value field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      vestedValue:
        description: "Indicates the estimated market value of the vested units.<br><b>Note</b>: FIs usually calculates the vested value as the market price vested quantity. The vested value field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      optionType:
        description: "The type of the option position (i.e., put or call).<br><b>Note</b>: The option type field is only applicable to options.<br><br><b>Applicable containers</b>: investment<br><b>Applicable Values</b><br>\n* put: An option to sell assets at an agreed price on or before a particular date.<br>\n* call: An option to buy assets at an agreed price on or before a particular date.<br>"
        readOnly: true
        type: "string"
        enum:
        - "put"
        - "call"
      lastUpdated:
        description: "The date when the information was last updated in the system.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      matchStatus:
        description: "Indicates the security match status id of the investment option identified during security normalization.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      holdingType:
        description: "Type of holding<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
        enum:
        - "stock"
        - "mutualFund"
        - "bond"
        - "CD"
        - "option"
        - "moneyMarketFund"
        - "other"
        - "remic"
        - "future"
        - "commodity"
        - "currency"
        - "unitInvestmentTrust"
        - "employeeStockOption"
        - "insuranceAnnuity"
        - "unknown"
        - "preferredStock"
        - "ETF"
        - "warrants"
        - "ETN"
      maturityDate:
        description: "The stated maturity date of a bond or CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      price:
        description: "The current price of the security.<br><b>Note</b>: Only for bonds the price field indicates the normalized price and not the price aggregated from the site. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      term:
        description: "The fixed duration for which the bond or CD is issued.<br><b>Note</b>: The term field is only applicable to CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      contractQuantity:
        format: "double"
        description: "The quantity of tradeable units in a contract.<br><b>Note</b>: The contract quantity field is only applicable to commodity and currency.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      id:
        format: "int64"
        description: "Unique identifier for the security added in the system. This is the primary key of the holding resource.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      isShort:
        description: "Indicates that the holding is a short trading.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      value:
        description: "The total market value of the security. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      expirationDate:
        description: "The date on which an option, right or warrant expires.<br><b>Note</b>: The expiration date field is only applicable to options and employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      interestRate:
        format: "double"
        description: "The interest rate on a CD.<br><b>Note</b>: The interest rate field is only applicable to CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      quantity:
        format: "double"
        description: "The quantity held for the holding.<br><b>Note</b>: Only for bonds the quantity field indicates the normalized quantity and not the quantity aggregated from the site. The quantity field is only applicable to restricted stock units/awards, performance units, currency, and commodity.<br>For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "number"
      accruedInterest:
        description: "The accruedInterest of the  holding.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      grantDate:
        description: "The date on which equity awards like ESOP, RSU, etc., are issued or granted.<br><b>Note</b>: The grant date field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      sedol:
        description: "The SEDOL (Stock Exchange Daily Official List) is a set of security identifiers used in the United Kingdom and Ireland for clearing purposes.<br><b>Note</b>: The SEDOL field is only applicable to the trade related transactions<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      vestedSharesExercisable:
        format: "double"
        description: "The number of vested shares that can be exercised by the employee. It is usually equal to the vested quantity.<br><b>Note</b>: The vested shares exercisable field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      spread:
        description: "The difference between the current market value of a stock and the strike price of the employee stock option, when the market value of the shares are greater than the stock price.<br><b>Note</b>: The spread field is only applicable to employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountId:
        format: "int64"
        description: "Unique identifier of the account to which the security is linked.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      couponRate:
        format: "double"
        description: "The stated interest rate for a bond.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      createdDate:
        description: "The date on which the holding is created in the Yodlee system.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      accruedIncome:
        description: "The accruedIncome of the  holding.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      securityType:
        description: "Indicates the security type of holding identified through the security service.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      providerAccountId:
        format: "int64"
        description: "Unique identifier for the user's association with the provider.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      unvestedQuantity:
        format: "double"
        description: "Indicates the number of unvested quantity or units.<br><b>Note</b>: The unvested quantity field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      costBasis:
        description: "In a one-off security purchase, the cost basis is the quantity acquired multiplied by the price per unit paid plus any commission paid. In case, the same position is acquired in different lots on different days at different prices, the sum total of the cost incurred is divided by the total units acquired to arrive at the average cost basis.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      vestingDate:
        description: "The date on which a RSU, RSA, or an employee stock options become vested.<br><b>Note</b>: The vesting date field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isin:
        description: "The ISIN (International Securities Identification Number) is used worldwide to identify specific securities. It is equivalent to CUSIP for international markets.<br><br><b>Note</b>: The ISIN field is only applicable to the trade related transactions<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      strikePrice:
        description: "The strike (exercise) price for the option position.<br><b>Note</b>: The strike price field is only applicable to options and employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  UpdatedProviderAccount:
    type: "object"
    title: "UpdatedProviderAccount"
    properties:
      loginForm:
        description: "This entity gets returned in the response for only MFA based provider accounts during the add/update account polling process. This indicates that the MFA information is expected from the user to complete the process. This represents the structure of MFA form that is displayed to the user in the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/LoginForm"
      createdDate:
        description: "The date on when the provider account is created in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      aggregationSource:
        description: "The source through which the providerAccount is added in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* SYSTEM: Accounts that are pre-populated by the customers on behalf of their users in to the Yodlee system.<br>\n* USER: Accounts that are added by the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "SYSTEM"
        - "USER"
      providerId:
        format: "int64"
        description: "Unique identifier for the provider resource. This denotes the provider for which the provider account id is generated by the user.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      requestId:
        description: "Unique id generated to indicate the request.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "string"
      isManual:
        description: "Indicates whether account is a manual or aggregated provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "boolean"
      id:
        format: "int64"
        description: "Unique identifier for the provider account resource. This is created during account addition.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "integer"
      dataset:
        description: "Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AccountDataset"
      status:
        description: "The status of last update attempted for the account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul><b>Applicable Values</b><br>\n* LOGIN_IN_PROGRESS: Login to provider site is in progress.<br>\n* USER_INPUT_REQUIRED: Additional authentication information is needed from the user.<br>\n* IN_PROGRESS: Login is successful and data aggregation is in progress.<br>\n* PARTIAL_SUCCESS: Data is partially retrieved.<br>\n* SUCCESS: Data is retrieved successfully.<br>\n* FAILED: Additional authentication information is needed from the user.<br>"
        readOnly: true
        type: "string"
        enum:
        - "LOGIN_IN_PROGRESS"
        - "USER_INPUT_REQUIRED"
        - "IN_PROGRESS"
        - "PARTIAL_SUCCESS"
        - "SUCCESS"
        - "FAILED"
  DataExtractsUserDataResponse:
    type: "object"
    title: "DataExtractsUserDataResponse"
    properties:
      userData:
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/DataExtractsUserData"
  Coverage:
    type: "object"
    title: "Coverage"
    properties:
      amount:
        description: "The coverage amount-related details.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/CoverageAmount"
      planType:
        description: "The plan type for an insurance provided to an individual or an entity.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* PPO: A plan type for health insurance that allows participants to utilize the services of any provider within their network.<br>\n* HMO: A plan type for health insurance that allows participants to utilize the receive medical services from an assigned provider only.<br>"
        readOnly: true
        type: "string"
        enum:
        - "PPO"
        - "HMO"
      endDate:
        description: "The date on which the coverage for the account ends or expires.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
      type:
        description: "The type of coverage provided to an individual or an entity.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values:</b><br>\n* VISION: A type of coverage under health insurance that covers some or all costs of routine vision care.<br>\n* DENTAL: A type of coverage under health insurance that covers some or all costs of routine dental care.<br>\n* HEALTH: A type of coverage under health insurance that covers some or all costs of health care.<br>\n* DEATH_COVER: A type of coverage that applies only to superannuation fund and life insurance and provides death benefits as part of the coverage.<br>\n* TOTAL_PERMANENT_DISABILITY: A type of coverage that applies only to superannuation fund and life insurance accounts and provides disability benefits as part of the coverage.<br>\n* ACCIDENTAL_DEATH_COVER: A type of coverage that applies only to life insurance accounts and provides accidental death benefits as part of the coverage.<br>\n* INCOME_PROTECTION: A type of coverage that is provided to the owner of the superannuation fund. The income protection cover is available up to a percentage of the monthly income to provide an affordable-level of financial protection in the event of sickness or injury.<br>\n* DEATH_TOTAL_PERMANENT_DISABILITY: A type of coverage provided as part of the superannuation fund. This coverage includes the benefits of both disability and death.<br>"
        readOnly: true
        type: "string"
        enum:
        - "VISION"
        - "DENTAL"
        - "HEALTH"
        - "DEATH_COVER"
        - "TOTAL_PERMANENT_DISABILITY"
        - "ACCIDENTAL_DEATH_COVER"
        - "INCOME_PROTECTION"
        - "DEATH_TOTAL_PERMANENT_DISABILITY"
      startDate:
        description: "The date on which the coverage for the account starts.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: insurance,investment<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>"
        readOnly: true
        type: "string"
  DerivedHoldingsLinks:
    type: "object"
    title: "DerivedHoldingsLinks"
    properties:
      holdings:
        readOnly: true
        type: "string"
  AssetClassificationList:
    type: "object"
    title: "AssetClassificationList"
    properties:
      classificationType:
        description: "The type of classification to which the investment belongs (assetClass, country, sector, and style).<br><b>Required Feature Enablement</b>: Asset classification feature<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      classificationValue:
        description: "The value for each classificationType.<br><b>Required Feature Enablement</b>: Asset classification feature<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "array"
        items:
          type: "string"
  UserResponse:
    type: "object"
    title: "UserResponse"
    properties:
      user:
        readOnly: true
        $ref: "#/definitions/User"
  CreateAccountRequest:
    type: "object"
    title: "CreateAccountRequest"
    properties:
      account:
        $ref: "#/definitions/CreateAccountInfo"
  DerivedHoldingsAccount:
    type: "object"
    title: "DerivedHoldingsAccount"
    properties:
      id:
        format: "int64"
        description: "The primary key of the account resource and the unique identifier for the account.<br>Required Feature Enablement: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      value:
        description: "The investment accounts cash balance.<br>Required Feature Enablement: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  AssetClassification:
    type: "object"
    title: "AssetClassification"
    properties:
      allocation:
        format: "double"
        description: "The allocation percentage of the holding.<br><br><b>Required Feature Enablement</b>: Asset classification feature<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      classificationType:
        description: "The type of classification to which the investment belongs (assetClass, country, sector, and style).<br><b>Required Feature Enablement</b>: Asset classification feature<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      classificationValue:
        description: "The value for each classificationType.<br><b>Required Feature Enablement</b>: Asset classification feature<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
  CobrandSession:
    type: "object"
    title: "CobrandSession"
    properties:
      cobSession:
        readOnly: true
        type: "string"
  TransactionCategoryRequest:
    type: "object"
    title: "TransactionCategoryRequest"
    required:
    - "parentCategoryId"
    properties:
      parentCategoryId:
        format: "int32"
        type: "integer"
      source:
        readOnly: true
        type: "string"
      categoryName:
        type: "string"
  DataExtractsHolding:
    type: "object"
    title: "DataExtractsHolding"
    properties:
      symbol:
        description: "The symbol of the security.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      exercisedQuantity:
        format: "double"
        description: "The quantity of the employee stock options that are already exercised or bought by the employee.<br><b>Note</b>: Once the employee stock options is exercised, they are either converted to cash value or equity positions depending on the FI. The exercised quantity field is only applicable to employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      cusipNumber:
        description: "The CUSIP (Committee on Uniform Securities Identification Procedures) identifies most the financial instruments in the United States and Canada.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      assetClassification:
        description: "Asset classification applied to the holding. <br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "array"
        items:
          $ref: "#/definitions/AssetClassification"
      vestedQuantity:
        format: "double"
        description: "The quantity of units or shares that are already vested on a vest date.<br><b>Note</b>: The vested quantity field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      description:
        description: "The description (name) for the holding (E.g., Cisco Systems)<br>For insurance container, the field is only applicable for insurance annuity and variable life insurance types. <br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      unvestedValue:
        description: "Indicates the estimated market value of the unvested units.<br><b>Note</b>: FIs usually calculates the unvested value as the market price unvested quantity. The unvested value field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      vestedValue:
        description: "Indicates the estimated market value of the vested units.<br><b>Note</b>: FIs usually calculates the vested value as the market price vested quantity. The vested value field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      optionType:
        description: "The type of the option position (i.e., put or call).<br><b>Note</b>: The option type field is only applicable to options.<br><br><b>Applicable containers</b>: investment<br><b>Applicable Values</b><br>\n* put: An option to sell assets at an agreed price on or before a particular date.<br>\n* call: An option to buy assets at an agreed price on or before a particular date.<br>"
        readOnly: true
        type: "string"
        enum:
        - "put"
        - "call"
      lastUpdated:
        description: "The date when the information was last updated in the system.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      matchStatus:
        description: "Indicates the security match status id of the investment option identified during security normalization.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isDeleted:
        description: "Indicates if the holding is marked as deleted.<b>Applicable containers</b>: investment, insurance<br><b>Endpoints</b>:<br><ul><li>GET dataExtracts/userData</li></ul>"
        readOnly: true
        type: "boolean"
      holdingType:
        description: "Type of holding<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
        enum:
        - "stock"
        - "mutualFund"
        - "bond"
        - "CD"
        - "option"
        - "moneyMarketFund"
        - "other"
        - "remic"
        - "future"
        - "commodity"
        - "currency"
        - "unitInvestmentTrust"
        - "employeeStockOption"
        - "insuranceAnnuity"
        - "unknown"
        - "preferredStock"
        - "ETF"
        - "warrants"
        - "ETN"
      maturityDate:
        description: "The stated maturity date of a bond or CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      price:
        description: "The current price of the security.<br><b>Note</b>: Only for bonds the price field indicates the normalized price and not the price aggregated from the site. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      term:
        description: "The fixed duration for which the bond or CD is issued.<br><b>Note</b>: The term field is only applicable to CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      contractQuantity:
        format: "double"
        description: "The quantity of tradeable units in a contract.<br><b>Note</b>: The contract quantity field is only applicable to commodity and currency.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      id:
        format: "int64"
        description: "Unique identifier for the security added in the system. This is the primary key of the holding resource.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      isShort:
        description: "Indicates that the holding is a short trading.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "boolean"
      value:
        description: "The total market value of the security. For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      expirationDate:
        description: "The date on which an option, right or warrant expires.<br><b>Note</b>: The expiration date field is only applicable to options and employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      interestRate:
        format: "double"
        description: "The interest rate on a CD.<br><b>Note</b>: The interest rate field is only applicable to CD.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      quantity:
        format: "double"
        description: "The quantity held for the holding.<br><b>Note</b>: Only for bonds the quantity field indicates the normalized quantity and not the quantity aggregated from the site. The quantity field is only applicable to restricted stock units/awards, performance units, currency, and commodity.<br>For insurance container, the field is only applicable for insurance annuity and variable life insurance types.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "number"
      accruedInterest:
        description: "The accruedInterest of the  holding.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      grantDate:
        description: "The date on which equity awards like ESOP, RSU, etc., are issued or granted.<br><b>Note</b>: The grant date field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      sedol:
        description: "The SEDOL (Stock Exchange Daily Official List) is a set of security identifiers used in the United Kingdom and Ireland for clearing purposes.<br><b>Note</b>: The SEDOL field is only applicable to the trade related transactions<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      vestedSharesExercisable:
        format: "double"
        description: "The number of vested shares that can be exercised by the employee. It is usually equal to the vested quantity.<br><b>Note</b>: The vested shares exercisable field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      spread:
        description: "The difference between the current market value of a stock and the strike price of the employee stock option, when the market value of the shares are greater than the stock price.<br><b>Note</b>: The spread field is only applicable to employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      accountId:
        format: "int64"
        description: "Unique identifier of the account to which the security is linked.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      couponRate:
        format: "double"
        description: "The stated interest rate for a bond.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      createdDate:
        description: "The date on which the holding is created in the Yodlee system.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      accruedIncome:
        description: "The accruedIncome of the  holding.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      securityType:
        description: "Indicates the security type of holding identified through the security service.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "string"
      providerAccountId:
        format: "int64"
        description: "Unique identifier for the user's association with the provider.<br><br><b>Applicable containers</b>: investment, insurance<br>"
        readOnly: true
        type: "integer"
      unvestedQuantity:
        format: "double"
        description: "Indicates the number of unvested quantity or units.<br><b>Note</b>: The unvested quantity field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "number"
      costBasis:
        description: "In a one-off security purchase, the cost basis is the quantity acquired multiplied by the price per unit paid plus any commission paid. In case, the same position is acquired in different lots on different days at different prices, the sum total of the cost incurred is divided by the total units acquired to arrive at the average cost basis.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      vestingDate:
        description: "The date on which a RSU, RSA, or an employee stock options become vested.<br><b>Note</b>: The vesting date field is only applicable to employee stock options, restricted stock units/awards, performance units, etc.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      isin:
        description: "The ISIN (International Securities Identification Number) is used worldwide to identify specific securities. It is equivalent to CUSIP for international markets.<br><br><b>Note</b>: The ISIN field is only applicable to the trade related transactions<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        type: "string"
      strikePrice:
        description: "The strike (exercise) price for the option position.<br><b>Note</b>: The strike price field is only applicable to options and employee stock options.<br><br><b>Applicable containers</b>: investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  DerivedCategorySummaryDetails:
    type: "object"
    title: "DerivedCategorySummaryDetails"
    properties:
      date:
        description: "Date on which the credit and debit transactions had occured.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        type: "string"
      creditTotal:
        description: "Total of credit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
      debitTotal:
        description: "Total of debit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>"
        readOnly: true
        $ref: "#/definitions/Money"
  CobrandLoginResponse:
    type: "object"
    title: "CobrandLoginResponse"
    properties:
      session:
        $ref: "#/definitions/CobrandSession"
      cobrandId:
        format: "int64"
        description: "Unique identifier of the cobrand (customer) in the system.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>"
        readOnly: true
        type: "integer"
      applicationId:
        description: "The application identifier.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>"
        readOnly: true
        type: "string"
      locale:
        description: "The customer's locale that will be considered for the localization functionality.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>"
        readOnly: true
        type: "string"
swagger: "2.0"
info:
  license:
    name: "Yodlee Developer License"
    url: "https://developer.yodlee.com/legal#_License"
  contact:
    email: "developer@yodlee.com"
  description: "This file describes the Yodlee Platform APIs, using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, javascript, PHP or other languages according to your development needs. For more details about our APIs themselves, please refer to https://developer.yodlee.com/Yodlee_API/."
  termsOfService: "https://developer.yodlee.com/legal"
  title: "Yodlee Core APIs"
  version: "1.1.0"
tags:
- name: "Accounts"
  description: "Accounts API"
- name: "Auth"
  description: "Auth API"
- name: "Cobrand"
  description: "Cobrand API"
- name: "DataExtracts"
  description: "DataExtracts API"
- name: "Derived"
  description: "Derived API"
- name: "Documents"
  description: "Documents API"
- name: "Holdings"
  description: "Holdings API"
- name: "ProviderAccounts"
  description: "Provider Accounts API"
- name: "Providers"
  description: "Providers API"
- name: "Statements"
  description: "Statements API"
- name: "Transactions"
  description: "Transactions API"
- name: "User"
  description: "Users API"
- name: "Verification"
  description: "Verification API"
